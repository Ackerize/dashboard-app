[{"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\index.js":"1","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\App.js":"2","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Auth.js":"3","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Login.js":"4","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\firebase\\firebase.js":"5","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Home.js":"6","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\History.js":"7","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Paintings.js":"8","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Themes.js":"9","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\DeliveryZones.js":"10","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Materials.js":"11","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Measurements.js":"12","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Logout.js":"13","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\FormEdit.js":"14","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\MaterialForm.js":"15","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\FormPaintings.js":"16","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\Details.js":"17","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\ZoneForm.js":"18","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\MeasurementForm.js":"19","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\ThemeForm.js":"20","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Navbar.js":"21","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CardUI.js":"22","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Search.js":"23","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\DatePicker.js":"24","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableOrders.js":"25","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Button.js":"26","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableThemes.js":"27","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TablePaintings.js":"28","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableZones.js":"29","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableMaterials.js":"30","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableMeasurements.js":"31","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CardHeading.js":"32","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\EditBody.js":"33","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\MaterialBody.js":"34","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CardBody.js":"35","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CustomerInfo.js":"36","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\SummaryOrder.js":"37","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableDetails.js":"38","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\HeaderOrderDetails.js":"39","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ZoneBody.js":"40","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\themes.js":"41","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\utils\\utils.js":"42","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\delivery_zones.js":"43","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\orders.js":"44","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\materials.js":"45","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\paintings.js":"46","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\measurements.js":"47","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\BodyMeasurement.js":"48","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\SidebarData.js":"49","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ThemeBody.js":"50","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowOrders.js":"51","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowTheme.js":"52","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ConfirmModal.js":"53","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ModalOrder.js":"54","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowPaintings.js":"55","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowZone.js":"56","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowMaterials.js":"57","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowMeasurements.js":"58","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\SelectForm.js":"59","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Upload.js":"60","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowDetails.js":"61"},{"size":180,"mtime":1612297535808,"results":"62","hashOfConfig":"63"},{"size":1047,"mtime":1614288992908,"results":"64","hashOfConfig":"63"},{"size":2310,"mtime":1612297535813,"results":"65","hashOfConfig":"63"},{"size":3188,"mtime":1612318574343,"results":"66","hashOfConfig":"63"},{"size":558,"mtime":1612297535808,"results":"67","hashOfConfig":"63"},{"size":2554,"mtime":1612896560205,"results":"68","hashOfConfig":"63"},{"size":3069,"mtime":1612916664845,"results":"69","hashOfConfig":"63"},{"size":1342,"mtime":1612916983432,"results":"70","hashOfConfig":"63"},{"size":1449,"mtime":1612917096454,"results":"71","hashOfConfig":"63"},{"size":1484,"mtime":1612916579810,"results":"72","hashOfConfig":"63"},{"size":1520,"mtime":1612898113018,"results":"73","hashOfConfig":"63"},{"size":2030,"mtime":1612917916276,"results":"74","hashOfConfig":"63"},{"size":569,"mtime":1612297535813,"results":"75","hashOfConfig":"63"},{"size":855,"mtime":1612917752445,"results":"76","hashOfConfig":"63"},{"size":525,"mtime":1612297535808,"results":"77","hashOfConfig":"63"},{"size":533,"mtime":1612297535808,"results":"78","hashOfConfig":"63"},{"size":2019,"mtime":1612918863513,"results":"79","hashOfConfig":"63"},{"size":491,"mtime":1612297535808,"results":"80","hashOfConfig":"63"},{"size":533,"mtime":1612918421039,"results":"81","hashOfConfig":"63"},{"size":496,"mtime":1612297535808,"results":"82","hashOfConfig":"63"},{"size":1450,"mtime":1612297535798,"results":"83","hashOfConfig":"63"},{"size":776,"mtime":1612297535787,"results":"84","hashOfConfig":"63"},{"size":601,"mtime":1612297535803,"results":"85","hashOfConfig":"63"},{"size":1369,"mtime":1612297535798,"results":"86","hashOfConfig":"63"},{"size":1162,"mtime":1612297535803,"results":"87","hashOfConfig":"63"},{"size":2208,"mtime":1612297535787,"results":"88","hashOfConfig":"63"},{"size":779,"mtime":1612297535803,"results":"89","hashOfConfig":"63"},{"size":797,"mtime":1612318471506,"results":"90","hashOfConfig":"63"},{"size":766,"mtime":1612297535803,"results":"91","hashOfConfig":"63"},{"size":825,"mtime":1612297535803,"results":"92","hashOfConfig":"63"},{"size":908,"mtime":1612297535803,"results":"93","hashOfConfig":"63"},{"size":209,"mtime":1612297535787,"results":"94","hashOfConfig":"63"},{"size":11729,"mtime":1614289153269,"results":"95","hashOfConfig":"63"},{"size":5717,"mtime":1612925026567,"results":"96","hashOfConfig":"63"},{"size":8743,"mtime":1614289195659,"results":"97","hashOfConfig":"63"},{"size":865,"mtime":1612297535798,"results":"98","hashOfConfig":"63"},{"size":712,"mtime":1612297535803,"results":"99","hashOfConfig":"63"},{"size":860,"mtime":1612297535803,"results":"100","hashOfConfig":"63"},{"size":2870,"mtime":1612297535798,"results":"101","hashOfConfig":"63"},{"size":6278,"mtime":1612925084613,"results":"102","hashOfConfig":"63"},{"size":393,"mtime":1612917147956,"results":"103","hashOfConfig":"63"},{"size":7166,"mtime":1612895278142,"results":"104","hashOfConfig":"63"},{"size":416,"mtime":1612916576548,"results":"105","hashOfConfig":"63"},{"size":1105,"mtime":1612918969453,"results":"106","hashOfConfig":"63"},{"size":404,"mtime":1612916546562,"results":"107","hashOfConfig":"63"},{"size":836,"mtime":1612917546350,"results":"108","hashOfConfig":"63"},{"size":414,"mtime":1612917158236,"results":"109","hashOfConfig":"63"},{"size":8090,"mtime":1612918447080,"results":"110","hashOfConfig":"63"},{"size":1316,"mtime":1612297535803,"results":"111","hashOfConfig":"63"},{"size":6575,"mtime":1612925056838,"results":"112","hashOfConfig":"63"},{"size":1393,"mtime":1612318446628,"results":"113","hashOfConfig":"63"},{"size":1751,"mtime":1612920988357,"results":"114","hashOfConfig":"63"},{"size":1044,"mtime":1612297535787,"results":"115","hashOfConfig":"63"},{"size":2538,"mtime":1612298067578,"results":"116","hashOfConfig":"63"},{"size":1816,"mtime":1612920968475,"results":"117","hashOfConfig":"63"},{"size":1944,"mtime":1612921005970,"results":"118","hashOfConfig":"63"},{"size":1765,"mtime":1612920507935,"results":"119","hashOfConfig":"63"},{"size":1938,"mtime":1612920735895,"results":"120","hashOfConfig":"63"},{"size":1136,"mtime":1612297535803,"results":"121","hashOfConfig":"63"},{"size":3292,"mtime":1612297535803,"results":"122","hashOfConfig":"63"},{"size":1363,"mtime":1612919570999,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"smudf1",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"126"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"126"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"126"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"126"},"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\index.js",[],["265","266"],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\App.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Auth.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Login.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\firebase\\firebase.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Home.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\History.js",["267","268","269"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport TableOrders from \"../components/TableOrders\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  formatDate,\r\n  sortBy,\r\n  sortOption,\r\n  formatDateSearch,\r\n} from \"../utils/utils\";\r\nimport { getAllOrders } from \"../api/orders\";\r\nimport moment from \"moment\";\r\n\r\nconst History = () => {\r\n  const [ordersArray, setOrdersArray] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [resultingOrders, setResultingOrders] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllOrders().then((response) => {\r\n      const orders = response;\r\n      setOrdersArray(orders);\r\n      setResultingOrders(orders);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      const result = copyArray.filter((item) =>\r\n        moment(formatDate(item.order_date), \"YYYY-MM-DD\").isBetween(\r\n          moment(formatDate(startDate), \"YYYY-MM-DD\"),\r\n          moment(formatDate(endDate), \"YYYY-MM-DD\"),\r\n          undefined,\r\n          \"[]\"\r\n        )\r\n      );\r\n      setResultingOrders(result);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    if (!ordersArray) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const ordersFilter = ordersArray.filter((order) => {\r\n      return (\r\n        order.customer_name.match(regexInput) ||\r\n        order.delivery_zone.name.match(regexInput) ||\r\n        order.status.match(regexInput) ||\r\n        order.id.toString().match(regexInput) ||\r\n        formatDateSearch(order.order_date).match(regexInput)\r\n      );\r\n    });\r\n    setResultingOrders(ordersFilter);\r\n  }, [searchedWord]);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      copyArray.sort(sortBy(selectedOption));\r\n      setResultingOrders(copyArray);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  if (!ordersArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-5\">\r\n        Historial de pedidos\r\n      </h1>\r\n      <div className=\"header-order-table\">\r\n        <DatePicker\r\n          startDate={startDate}\r\n          setStartDate={setStartDate}\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n        <Select\r\n          options={sortOption}\r\n          name=\"searchable\"\r\n          className=\"w-100 custom-control\"\r\n          placeholder=\"Ordenar por ...\"\r\n          isSearchable\r\n          isClearable\r\n          onChange={(value) => setSelectedOption(value ? value.value : null)}\r\n          noOptionsMessage={(inputValue) => \"No se encontró esa opción\"}\r\n        />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableOrders orders={resultingOrders} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Paintings.js",["270"],"import React, { useEffect, useState } from 'react';\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllPaintings } from '../api/paintings';\r\nimport TablePaintings from \"../components/TablePaintings\";\r\n\r\nconst Paintings = () => {\r\n  const [paintingsArray, setPaintingsArray] = useState(null);\r\n  const [filterWord, setFilterWord] = useState('');\r\n  const [filteredPaintings, setFilteredPaintings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPaintings().then((response) => {\r\n      const paintings = response;\r\n      setPaintingsArray(paintings);\r\n      setFilteredPaintings(paintings);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!paintingsArray) return null;\r\n    let regexInput = new RegExp(filterWord, \"gi\");\r\n    const paintingsFilter = paintingsArray.filter((item) =>{\r\n      return item.name.match(regexInput);\r\n    });\r\n    setFilteredPaintings(paintingsFilter);\r\n  }, [filterWord])\r\n\r\n  if(!paintingsArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Paintings</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"add\" />\r\n        <Search setFilterWord={setFilterWord} />\r\n      </div>\r\n      <TablePaintings paintingsArray={filteredPaintings} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paintings;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Themes.js",["271"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { sortBy } from '../utils/utils';\r\nimport Button from '../components/Button';\r\nimport Search from '../components/Search';\r\nimport { getAllThemes } from '../api/themes';\r\nimport TableThemes from '../components/TableThemes';\r\n\r\nconst Themes = () => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [filteredThemes, setFilteredThemes] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push('/themes/new');\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then(response => {\r\n      const array = response;\r\n      array.sort(sortBy(\"id\"));\r\n      setThemes(array);\r\n      setFilteredThemes(array);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!themes) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const themesFilter = themes.filter((item) => item.name.match(regexInput));\r\n    setFilteredThemes(themesFilter);\r\n  }, [searchedWord]);\r\n\r\n  if(!themes) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Themes</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableThemes themesArray={filteredThemes} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Themes\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\DeliveryZones.js",["272"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllDeliveryZones } from '../api/delivery_zones';\r\nimport Button from '../components/Button';\r\nimport Search from '../components/Search';\r\nimport TableZones from '../components/TableZones';\r\nimport { sortBy } from '../utils/utils';\r\n\r\nconst DeliveryZones = () => {\r\n  const [zones, setZones] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [filteredZones, setFilteredZones] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push('/delivery-zones/new');\r\n\r\n  useEffect(() => {\r\n    getAllDeliveryZones().then(response => {\r\n      const array = response;\r\n      array.sort(sortBy(\"id\"));\r\n      setZones(array);\r\n      setFilteredZones(array);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!zones) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const zonesFilter = zones.filter((item) => item.name.match(regexInput));\r\n    setFilteredZones(zonesFilter);\r\n  }, [searchedWord]);\r\n\r\n  if(!zones) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Delivery zones</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableZones zonesArray={filteredZones} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliveryZones\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Materials.js",["273"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllMaterials } from '../api/materials';\r\nimport Button from '../components/Button';\r\nimport Search from '../components/Search';\r\nimport TableMaterials from '../components/TableMaterials';\r\nimport { sortBy } from '../utils/utils';\r\n\r\nconst Materials = () => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [filteredMaterials, setFilteredMaterials] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push('/materials/new');\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then(response => {\r\n      const array = response;\r\n      array.sort(sortBy(\"id\"));\r\n      setMaterials(array);\r\n      setFilteredMaterials(array);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(!materials) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const materialsFilter = materials.filter((item) => item.name.match(regexInput));\r\n    setFilteredMaterials(materialsFilter);\r\n  }, [searchedWord]);\r\n\r\n  if(!materials) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Materials</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableMaterials materialsArray={filteredMaterials} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Materials\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Measurements.js",["274"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { findMaterialById, sortBy } from \"../utils/utils\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport TableMeasurements from \"../components/TableMeasurements\";\r\n\r\nconst Measurements = () => {\r\n  const [measurements, setMeasurements] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [filteredMeasurements, setFilteredMeasurements] = useState([]);\r\n  const [materials, setMaterials] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/measurements/new\");\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      const array = response;\r\n      array.sort(sortBy(\"id\"));\r\n      setMeasurements(array);\r\n      setFilteredMeasurements(array);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(response);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!measurements || !materials) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const measurementsFilter = measurements.filter((item) => {\r\n      const material_name = findMaterialById(materials, item.material_id);\r\n      return material_name.match(regexInput);\r\n    });\r\n    setFilteredMeasurements(measurementsFilter);\r\n  }, [searchedWord]);\r\n\r\n  if (!measurements || !materials) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Measurements</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableMeasurements\r\n        measurementsArray={filteredMeasurements}\r\n        materialsArray={materials}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Measurements;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\pages\\Logout.js",["275"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    firebase.auth().signOut();\r\n    Swal.fire({\r\n      title: \"¡Adiós!\",\r\n      text: 'Has cerrado sesión exitosamente',\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default Logout;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\FormEdit.js",["276"],"import React,{ useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOnePaintingById } from '../api/paintings';\r\nimport CardHeading from '../components/CardHeading';\r\nimport EditBody from '../components/EditBody'\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [painting, setPainting] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getOnePaintingById(id).then((response) => {\r\n      setPainting(response);\r\n    });\r\n  }, []);\r\n\r\n  if(!painting) return null;\r\n\r\n  return (\r\n    <div className=\"page-wrapper p-t-45 p-b-50\">\r\n      <div className=\"wrapper wrapper--w790\">\r\n        <div className=\"card card-5 card-painting\">\r\n          <CardHeading title=\"Actualizar cuadro\" />\r\n          <EditBody painting={painting} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormEdit\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\MaterialForm.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\FormPaintings.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\Details.js",["277","278","279","280"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { getOrderById, getOrderDetail } from \"../api/orders\";\r\nimport Button from \"../components/Button\";\r\nimport CustomerInfo from \"../components/CustomerInfo\";\r\nimport HeaderOrderDetails from \"../components/HeaderOrderDetails\";\r\nimport SummaryOrder from \"../components/SummaryOrder\";\r\nimport TableDetails from \"../components/TableDetails\";\r\nimport { findMeasurements, formatFloat } from \"../utils/utils\";\r\nimport \"./details-container.css\";\r\n\r\nconst Details = (props) => {\r\n  const { id } = useParams();\r\n  const [details, setDetails] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n  \r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getOrderDetail(id).then((response) => setDetails(response));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getOrderById(id).then((response) => setOrder(response));\r\n  }, []);\r\n\r\n  \r\n\r\n  if (!order || !details) return null;\r\n\r\n  const { total_amount, delivery_zone } = order;\r\n  const { delivery_cost } = delivery_zone;\r\n  const total = formatFloat(total_amount);\r\n  const deliveryCost = formatFloat(delivery_cost);\r\n  const subtotal = formatFloat(total_amount - delivery_cost);\r\n\r\n  const onBack = () => {\r\n    history.push(\"/history\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container px-1 px-md-4 py-5 mx-auto\">\r\n      <div className=\"card card-container-delivery\">\r\n        <HeaderOrderDetails order={order} />\r\n        <hr className=\"hr-order-details\" />\r\n        <CustomerInfo order={order} />\r\n        <div>\r\n          <TableDetails details={details} />\r\n        </div>\r\n        <div className=\"footer-details\">\r\n          <SummaryOrder\r\n            subtotal={subtotal}\r\n            delivery_cost={deliveryCost}\r\n            total={total}\r\n          />\r\n          <Button type=\"back\" onClick={onBack} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\ZoneForm.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\MeasurementForm.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\containers\\ThemeForm.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Navbar.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CardUI.js",["281"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./card-style.css\";\r\n\r\nconst CardUI = ({ imgSrc, title, option, url, description }) => {\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(`/${url}`);\r\n\r\n  return (\r\n    <div className=\"card text-center shadow\">\r\n      <div className=\"overflow\">\r\n        <img src={imgSrc} alt=\"Foto\" className=\"card-img-top\" />\r\n      </div>\r\n      <div className=\"card-body text-dark\">\r\n        <h4 className=\"card-title\">{title}</h4>\r\n        <p className=\"card-text text-secondary\">{description}</p>\r\n        <a href=\"\" onClick={handleClick} className=\"btn btn-outline-success\">\r\n          Ir a {option}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Search.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\DatePicker.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableOrders.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Button.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableThemes.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TablePaintings.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableZones.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableMaterials.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableMeasurements.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CardHeading.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\EditBody.js",["282","283","284","285","286"],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\MaterialBody.js",["287"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"./../utils/utils\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst MaterialBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id,\r\n    name,\r\n    active = true,\r\n    textBtn = btnText;\r\n  const material = JSON.parse(localStorage.getItem(\"actualMaterial\"));\r\n\r\n  if (material) {\r\n    id = material.id;\r\n    name = material.name;\r\n    active = material.active;\r\n    textBtn = \"Actualizar material\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (material) {\r\n      axios\r\n        .put(`${API_HOST}/materials/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Material actualizado!\",\r\n              text: \"Has actualizado un material exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/materials\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/materials`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Material creado!\",\r\n              text: \"Has creado un material exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/materials\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    localStorage.removeItem(\"actualMaterial\");\r\n    history.push(\"/materials\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else {\r\n      register({ name: \"active\" }, { required: true });\r\n      setValue(\"active\", true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del material</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialBody;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CardBody.js",["288","289"],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\CustomerInfo.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\SummaryOrder.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\TableDetails.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\HeaderOrderDetails.js",["290","291","292","293"],"import React from \"react\";\r\nimport \"./details-style.css\";\r\nimport step1 from \"../assets/step1.png\";\r\nimport step2 from \"../assets/step2.png\";\r\nimport step3 from \"../assets/step3.png\";\r\nimport step4 from \"../assets/step4.png\";\r\nimport { progressOrderBar } from \"../utils/utils\";\r\nimport moment from \"moment\";\r\n\r\nconst HeaderOrderDetails = ({ order }) => {\r\n  const { status, id, delivery_date } = order;\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-between px-3 top delivery\">\r\n        <div className=\"d-flex header-bar delivery\">\r\n          <h5>\r\n            ORDER <span className=\"text-primary font-weight-bold\">{`# ${id}`}</span>\r\n          </h5>\r\n        </div>\r\n        <div className=\"d-flex flex-column text-sm-right delivery\">\r\n          <p className=\"mb-0\">\r\n            Fecha de entrega: <span>{moment(delivery_date).format(\"DD-MM-YYYY\")}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center delivery progress-column\">\r\n        <div className=\"col-12\">\r\n          <ul id=\"progressbar\" className=\"text-center\">\r\n            {progressOrderBar(status)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-between top container-labels delivery\">\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step1} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Pendiente\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step2} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Confirmada\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step3} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              En camino\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step4} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              Entregada\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderOrderDetails;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ZoneBody.js",["294"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"../utils/utils\";\r\n\r\nconst ZoneBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id, name, active = true, delivery_cost, textBtn = btnText;\r\n\r\n  const zone = JSON.parse(localStorage.getItem('actualZone'));\r\n\r\n  if(zone){\r\n    id = zone.id;\r\n    name = zone.name;\r\n    active = zone.active;\r\n    delivery_cost = zone.delivery_cost;\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (zone) {\r\n      axios\r\n        .put(`${API_HOST}/delivery-zones/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const {error, message} = res.data;\r\n          if(error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          }else{\r\n            Swal.fire({\r\n              title: \"¡Zona de entrega actualizada!\",\r\n              text: \"Has actualizado una zona de entrega exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push('/delivery-zones')\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/delivery-zones`,  data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const {error, message} = res.data;\r\n          if(error){\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          }else{\r\n            Swal.fire({\r\n              title: \"¡Zona de entrega creado!\",\r\n              text: \"Has creado una zona de entrega exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push('/delivery-zones')\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  const onCancel = () => {\r\n    history.push('/delivery-zones');\r\n    localStorage.clear();\r\n  }\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    register({ name: \"delivery_cost\" }, { required: true });\r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre de la zona</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"delivery_cost\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={delivery_cost}\r\n              />\r\n              {errors.delivery_cost && (\r\n                <div className=\"error\">Ingresa el precio</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZoneBody\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\themes.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\utils\\utils.js",["295","296","297"],"import { map } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nexport const cabecerasPaintings = [\r\n  \"Cuadro\",\r\n  \"Nombre\",\r\n  \"Descripcion\",\r\n  \"Existencias\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n  \"\",\r\n];\r\n\r\nexport const cabecerasOrders = [\r\n  \"Id\",\r\n  \"Cliente\",\r\n  \"Fecha de orden\",\r\n  \"Fecha de entrega\",\r\n  \"Zona de entrega\",\r\n  \"Estado\",\r\n  \"Cantidad total\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasMaterials = [\"Id\", \"Nombre\", \"Disponible\", \"Opciones\"];\r\n\r\nexport const cabecerasThemes = [\r\n  \"Id\",\r\n  \"Imagen\",\r\n  \"Nombre\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasZones = [\r\n  \"Id\",\r\n  \"Nombre\",\r\n  \"Precio\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasMeasurements = [\r\n  \"Id\",\r\n  \"Ancho\",\r\n  \"Alto\",\r\n  \"Precio\",\r\n  \"Material\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const API_HOST = \"http://canvasframeit.com:3000/api\";\r\n\r\nconst characters =\r\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\nexport function generateString(length) {\r\n  let result = \"\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const formatArray = (array) =>\r\n  map(array, (item) => ({ label: item.name, value: item.id }));\r\n\r\nexport const filterArray = (array) => map(array, (item) => item.value);\r\n\r\nexport const filterObject = (obj) => obj.value;\r\n\r\nexport const filterMaterialsArray = (array) => map(array, (item) => item.id);\r\n\r\nexport const dataDelete = {\r\n  title: \"Confirmar para eliminar\",\r\n  subtitle: \"¿Estás seguro de eliminar este cuadro?\",\r\n  btnYesText: \"¡Sí, eliminar!\",\r\n  btnNoText: \"No\",\r\n  btnYesId: \"btn-no\",\r\n  btnNoId: \"btn-yes\",\r\n};\r\n\r\nexport const findStatus = (status) => {\r\n  switch (status) {\r\n    case \"EN PROCESO\":\r\n      return \"status pending\";\r\n    case \"CONFIRMADA\":\r\n      return \"status confirmed\";\r\n    case \"ENTREGADA\":\r\n      return \"status delivered\";\r\n    case \"EN CAMINO\":\r\n      return \"status shipped\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const statuses = [\r\n  { value: \"EN PROCESO\", label: \"EN PROCESO\" },\r\n  { value: \"CONFIRMADA\", label: \"CONFIRMADA\" },\r\n  { value: \"EN CAMINO\", label: \"EN CAMINO\" },\r\n  { value: \"ENTREGADA\", label: \"ENTREGADA\" },\r\n];\r\n\r\nexport const sortOption = [\r\n  { value: \"id\", label: \"ID\" },\r\n  { value: \"cliente\", label: \"CLIENTE\" },\r\n  { value: \"estado\", label: \"ESTADO\" },\r\n  { value: \"fecha-orden\", label: \"FECHA DE ORDEN\" },\r\n  { value: \"fecha-entrega\", label: \"FECHA DE ENTREGA\" },\r\n  { value: \"zona-entrega\", label: \"ZONA DE ENTREGA\" },\r\n];\r\n\r\nexport const sortBy = (type) => {\r\n  switch (type) {\r\n    case \"id\":\r\n      return (a, b) => {\r\n        if (a.id < b.id) return -1;\r\n        if (a.id > b.id) return 1;\r\n        return 0;\r\n      };\r\n    case \"cliente\":\r\n      return (a, b) => {\r\n        if (a.customer_name < b.customer_name) return -1;\r\n        if (a.customer_name > b.customer_name) return 1;\r\n        return 0;\r\n      };\r\n    case \"status\":\r\n      return (a, b) => {\r\n        if (a.status < b.status) return -1;\r\n        if (a.status > b.status) return 1;\r\n        return 0;\r\n      };\r\n    case \"zona-entrega\":\r\n      return (a, b) => {\r\n        if (a.delivery_zone.name < b.delivery_zone.name) return -1;\r\n        if (a.delivery_zone.name > b.delivery_zone.name) return 1;\r\n        return 0;\r\n      };\r\n    case \"fecha-orden\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.order_date),\r\n          dateB = new Date(b.order_date);\r\n        return dateA - dateB;\r\n      };\r\n    case \"fecha-entrega\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.delivery_date),\r\n          dateB = new Date(b.delivery_date);\r\n        return dateA - dateB;\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const formatDateSearch = (date) => {\r\n  return moment(date).format(\"DD/MM/YYYY\");\r\n};\r\n\r\nexport const progressOrderBar = (status) => {\r\n  switch (status) {\r\n    case \"EN PROCESO\":\r\n    case \"PENDIENTE\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"CONFIRMADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"EN CAMINO\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"ENTREGADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n        </>\r\n      );\r\n    default:\r\n      return (\r\n        <>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport const formatFloat = (number) => parseFloat(number).toFixed(2);\r\n\r\nexport const filterMeasurements = (collection, idMaterial) => {\r\n  return collection.filter((item) => item.material_id == idMaterial);\r\n};\r\n\r\nexport const formatArrayMeasurements = (array, materials) => {\r\n  return map(array, (item) => {\r\n    const materialName = findMaterial(materials, item.material_id);\r\n    return {\r\n      label: `${item.width} x ${item.height} m -  ${materialName}`,\r\n      value: item.id,\r\n    };\r\n  });\r\n};\r\nexport const findMaterial = (materials, idMaterial) =>\r\n  materials.filter((item) => item.value == idMaterial)[0].label;\r\n\r\nexport const findMeasurements = (measurements, idMeasurement) => {\r\n  const measures = measurements.filter((item) => item.id == idMeasurement)[0];\r\n  return `${measures.width} x ${measures.height} m`\r\n}\r\n\r\nexport const findMaterialById = (materials, idMaterial) =>\r\n  materials.filter((item) => item.id === idMaterial)[0].name;\r\n\r\nexport const onValidatePairs = (\r\n  materialsSelected,\r\n  measurementsSelected,\r\n  measurements\r\n) => {\r\n  const materialsSet = new Set();\r\n  let flag = true;\r\n  measurements.forEach((item) => {\r\n    if (\r\n      measurementsSelected.includes(item.id) &&\r\n      materialsSelected.includes(item.material_id)\r\n    ) {\r\n      materialsSet.add(item.material_id);\r\n    } else if (\r\n      measurementsSelected.includes(item.id) &&\r\n      !materialsSelected.includes(item.material_id)\r\n    ) {\r\n      flag = false;\r\n    }\r\n  });\r\n  if (flag && materialsSet.size !== materialsSelected.length) return false;\r\n  return flag;\r\n};\r\n\r\nexport const onDeleteItems = (initialArray, finalArray) => {\r\n  let response = [];\r\n  initialArray.forEach((item) => {\r\n    if (!finalArray.includes(item)) {\r\n      response.push(item);\r\n    }\r\n  });\r\n  return response;\r\n};\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\delivery_zones.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\orders.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\materials.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\paintings.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\api\\measurements.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\BodyMeasurement.js",["298"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport { API_HOST, findMaterial, formatArray } from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BodyMeasurement = ({ btnText }) => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const history = useHistory();\r\n  let id,\r\n    height,\r\n    width,\r\n    active = true,\r\n    price,\r\n    material_id,\r\n    material_name,\r\n    textBtn = btnText;\r\n\r\n  const measurement = JSON.parse(localStorage.getItem(\"actualMeasurement\"));\r\n\r\n  if (measurement) {\r\n    id = measurement.id;\r\n    height = measurement.height;\r\n    width = measurement.width;\r\n    active = measurement.active;\r\n    price = measurement.price;\r\n    material_id = measurement.material_id;\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    if (measurement) {\r\n      axios\r\n        .put(`${API_HOST}/measurements/${id}`, data)\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Medidas actualizada!\",\r\n              text: \"Has actualizado las medidas exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/measurements\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/measurements`, data)\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Medidas creado!\",\r\n              text: \"Has creado las medidas exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/measurements\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/measurements\");\r\n    localStorage.clear();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    register({ name: \"height\" }, { required: true });\r\n    register({ name: \"width\" }, { required: true });\r\n    register({ name: \"price\" }, { required: true });\r\n    if (material_id) {\r\n      register({ name: \"material_id\" }, { required: true });\r\n      setValue(\"material_id\", material_id);\r\n    } else {\r\n      register({ name: \"material_id\" }, { required: true });\r\n    }\r\n\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else register({ name: \"active\" }, { required: true });\r\n  }, []);\r\n\r\n  if (!materials) return null;\r\n\r\n  console.log(materials);\r\n  if (material_id) {\r\n    material_name = findMaterial(materials, material_id);\r\n  }\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setValue(\"material_id\", selectedOption.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Ancho (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"width\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={width}\r\n              />\r\n              {errors.width && <div className=\"error\">Ingresa el ancho</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Alto (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"height\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={height}\r\n              />\r\n              {errors.height && <div className=\"error\">Ingresa el alto</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"price\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={price}\r\n              />\r\n              {errors.price && <div className=\"error\">Ingresa el precio</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"material_id\"\r\n          label=\"Material\"\r\n          error={errors.material_id}\r\n          errorMessage=\"Selecciona un material\"\r\n          isMulti={false}\r\n          value={material_id && { label: material_name, value: material_id }}\r\n        />\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodyMeasurement;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\SidebarData.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ThemeBody.js",["299"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport Upload from \"./Upload\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"./../utils/utils\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ThemeBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id,\r\n    name,\r\n    active = true,\r\n    image_url,\r\n    textBtn = btnText;\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const theme = JSON.parse(localStorage.getItem(\"actualTheme\"));\r\n  console.log(theme);\r\n\r\n  if (theme) {\r\n    id = theme.id;\r\n    name = theme.name;\r\n    active = theme.active;\r\n    image_url = theme.image_url;\r\n    textBtn = \"Actualizar tema\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (theme) {\r\n      axios\r\n        .put(`${API_HOST}/themes/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Tema actualizado!\",\r\n              text: \"Has actualizado un tema exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/themes\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/themes`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Tema creado!\",\r\n              text: \"Has creado un tema exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/themes\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (url) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(url)\r\n        .delete()\r\n        .then(() => {\r\n          localStorage.removeItem(\"actualTheme\");\r\n          history.push(\"/themes\");\r\n        })\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      localStorage.removeItem(\"actualTheme\");\r\n      history.push(\"/themes\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    if (image_url) {\r\n      register({ name: \"image_url\" });\r\n      setValue(\"image_url\", image_url);\r\n    } else {\r\n      register({ name: \"image_url\" }, { required: true });\r\n    }\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else register({ name: \"active\" }, { required: true });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del tema</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrl}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeBody;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowOrders.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowTheme.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ConfirmModal.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\ModalOrder.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowPaintings.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowZone.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowMaterials.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowMeasurements.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\SelectForm.js",[],"C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\Upload.js",["300","301"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { generateString } from \"../utils/utils\";\r\n\r\nconst Upload = ({ setValue, setUrlImg, error, image_url }) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [lastImage, setLastImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"No URL\");\r\n  const [image, setImage] = useState({ name: \"No Image\" });\r\n\r\n  useEffect(() => {\r\n    if(image_url){\r\n      setUrl(image_url);\r\n      setValue('image_url', image_url);\r\n      setReady(true);\r\n      setProgress(100);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (image.name !== \"No Image\") {\r\n      if (lastImage !== \"\") {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(lastImage)\r\n          .delete()\r\n          .then(() => console.log(\"Done!\"))\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n      let splitImage = image.name.split(\".\");\r\n      let newName = generateString(30) + \".\" + splitImage[1];\r\n      handleUpload(newName);\r\n    }\r\n  }, [image]);\r\n\r\n  const handleUpload = (newName) => {\r\n    console.log(newName);\r\n    const uploadTask = storage.ref(`/${newName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(newName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setValue('image_url', url);\r\n            setUrlImg(newName);\r\n          });\r\n        setLastImage(newName);\r\n        setReady(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ready ? (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"img-upload\"\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              imageResolution: \"from-image\",\r\n            }}\r\n            type=\"button\"\r\n            id=\"btn-upload\"\r\n          >\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"img-add\" id=\"btn-add\" type=\"button\">\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      )}\r\n      <ProgressBar\r\n        completed={progress}\r\n        width=\"50%\"\r\n        bgcolor=\"#21AB91\"\r\n        margin=\"20px auto 10px auto\"\r\n        labelAlignment=\"right\"\r\n      />\r\n      {error && <div className=\"error-img\">Seleccione una imagen</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Users\\dvall\\Desktop\\dashboard-app\\src\\components\\RowDetails.js",["302","303"],"import React, {useEffect, useState} from \"react\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { findMeasurements } from \"../utils/utils\";\r\n\r\nconst RowDetails = ({ order }) => {\r\n  const [measurements, setMeasurements] = useState(null);\r\n  const {amount, measurements:textMeasurement, quantity, price, painting, material} = order;\r\n  const {name:painting_name, image_url} = painting;\r\n  const {name:material_name} = material;\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => setMeasurements(response))\r\n  }, [])\r\n\r\n  if(!measurements) return null;\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\" width=\"40%\">\r\n        <div className=\"container-product-item principal-info\">\r\n          <img className=\"product-img\" src={image_url} width=\"80px\" />\r\n          <div className=\"text-container-product\">\r\n            <p className=\"product-name\">{painting_name}</p>\r\n            <p className=\"description-product-item material-name\">{material_name}</p>\r\n            <p className=\"description-product-item dimensions\">{`${textMeasurement} m`}</p>\r\n          </div>\r\n        </div>\r\n      </th>\r\n      <td width=\"20%\" className=\"row-price\">{`$ ${price}`}</td>\r\n      <td width=\"20%\">{quantity}</td>\r\n      <td width=\"20%\">{`$ ${amount}`}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowDetails;\r\n",{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":45,"column":6,"nodeType":"310","endLine":45,"endColumn":26,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"309","line":60,"column":6,"nodeType":"310","endLine":60,"endColumn":20,"suggestions":"312"},{"ruleId":"308","severity":1,"message":"309","line":68,"column":6,"nodeType":"310","endLine":68,"endColumn":22,"suggestions":"313"},{"ruleId":"308","severity":1,"message":"314","line":27,"column":6,"nodeType":"310","endLine":27,"endColumn":18,"suggestions":"315"},{"ruleId":"308","severity":1,"message":"316","line":31,"column":6,"nodeType":"310","endLine":31,"endColumn":20,"suggestions":"317"},{"ruleId":"308","severity":1,"message":"318","line":31,"column":6,"nodeType":"310","endLine":31,"endColumn":20,"suggestions":"319"},{"ruleId":"308","severity":1,"message":"320","line":31,"column":6,"nodeType":"310","endLine":31,"endColumn":20,"suggestions":"321"},{"ruleId":"308","severity":1,"message":"322","line":42,"column":6,"nodeType":"310","endLine":42,"endColumn":20,"suggestions":"323"},{"ruleId":"308","severity":1,"message":"324","line":19,"column":6,"nodeType":"310","endLine":19,"endColumn":8,"suggestions":"325"},{"ruleId":"308","severity":1,"message":"326","line":15,"column":6,"nodeType":"310","endLine":15,"endColumn":8,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":28},{"ruleId":"328","severity":1,"message":"332","line":10,"column":10,"nodeType":"330","messageId":"331","endLine":10,"endColumn":26},{"ruleId":"308","severity":1,"message":"326","line":22,"column":6,"nodeType":"310","endLine":22,"endColumn":8,"suggestions":"333"},{"ruleId":"308","severity":1,"message":"326","line":26,"column":6,"nodeType":"310","endLine":26,"endColumn":8,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":17,"column":9,"nodeType":"337","endLine":17,"endColumn":78},{"ruleId":"328","severity":1,"message":"338","line":30,"column":5,"nodeType":"330","messageId":"331","endLine":30,"endColumn":10},{"ruleId":"308","severity":1,"message":"339","line":58,"column":6,"nodeType":"310","endLine":58,"endColumn":8,"suggestions":"340"},{"ruleId":"308","severity":1,"message":"341","line":71,"column":6,"nodeType":"310","endLine":71,"endColumn":8,"suggestions":"342"},{"ruleId":"308","severity":1,"message":"343","line":169,"column":6,"nodeType":"310","endLine":169,"endColumn":8,"suggestions":"344"},{"ruleId":"308","severity":1,"message":"345","line":179,"column":6,"nodeType":"310","endLine":179,"endColumn":17,"suggestions":"346"},{"ruleId":"308","severity":1,"message":"347","line":109,"column":6,"nodeType":"310","endLine":109,"endColumn":8,"suggestions":"348"},{"ruleId":"308","severity":1,"message":"349","line":83,"column":6,"nodeType":"310","endLine":83,"endColumn":8,"suggestions":"350"},{"ruleId":"308","severity":1,"message":"320","line":110,"column":6,"nodeType":"310","endLine":110,"endColumn":24,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":36,"column":11,"nodeType":"337","endLine":36,"endColumn":47},{"ruleId":"352","severity":1,"message":"353","line":47,"column":11,"nodeType":"337","endLine":47,"endColumn":47},{"ruleId":"352","severity":1,"message":"353","line":58,"column":11,"nodeType":"337","endLine":58,"endColumn":47},{"ruleId":"352","severity":1,"message":"353","line":68,"column":11,"nodeType":"337","endLine":68,"endColumn":47},{"ruleId":"308","severity":1,"message":"347","line":104,"column":6,"nodeType":"310","endLine":104,"endColumn":8,"suggestions":"354"},{"ruleId":"355","severity":1,"message":"356","line":222,"column":55,"nodeType":"357","messageId":"358","endLine":222,"endColumn":57},{"ruleId":"355","severity":1,"message":"356","line":235,"column":41,"nodeType":"357","messageId":"358","endLine":235,"endColumn":43},{"ruleId":"355","severity":1,"message":"356","line":238,"column":58,"nodeType":"357","messageId":"358","endLine":238,"endColumn":60},{"ruleId":"308","severity":1,"message":"359","line":129,"column":6,"nodeType":"310","endLine":129,"endColumn":8,"suggestions":"360"},{"ruleId":"308","severity":1,"message":"361","line":130,"column":6,"nodeType":"310","endLine":130,"endColumn":8,"suggestions":"362"},{"ruleId":"308","severity":1,"message":"363","line":20,"column":6,"nodeType":"310","endLine":20,"endColumn":8,"suggestions":"364"},{"ruleId":"308","severity":1,"message":"365","line":36,"column":6,"nodeType":"310","endLine":36,"endColumn":13,"suggestions":"366"},{"ruleId":"328","severity":1,"message":"332","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":26},{"ruleId":"352","severity":1,"message":"353","line":21,"column":11,"nodeType":"337","endLine":21,"endColumn":71},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ordersArray'. Either include it or remove the dependency array.","ArrayExpression",["369"],["370"],["371"],"React Hook useEffect has a missing dependency: 'paintingsArray'. Either include it or remove the dependency array.",["372"],"React Hook useEffect has a missing dependency: 'themes'. Either include it or remove the dependency array.",["373"],"React Hook useEffect has a missing dependency: 'zones'. Either include it or remove the dependency array.",["374"],"React Hook useEffect has a missing dependency: 'materials'. Either include it or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'materials' and 'measurements'. Either include them or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["378"],"no-unused-vars","'getAllMeasurements' is defined but never used.","Identifier","unusedVar","'findMeasurements' is defined but never used.",["379"],["380"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'stock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["381"],"React Hook useEffect has missing dependencies: 'active', 'image_url', 'painting_materials', 'painting_measurements', 'setValue', and 'theme.id'. Either include them or remove the dependency array.",["382"],"React Hook useEffect has a missing dependency: 'painting_materials'. Either include it or remove the dependency array.",["383"],"React Hook useEffect has a missing dependency: 'painting_measurements'. Either include it or remove the dependency array.",["384"],"React Hook useEffect has missing dependencies: 'active', 'register', and 'setValue'. Either include them or remove the dependency array.",["385"],"React Hook useEffect has missing dependencies: 'register' and 'setValue'. Either include them or remove the dependency array.",["386"],["387"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["388"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'active', 'material_id', 'register', and 'setValue'. Either include them or remove the dependency array.",["389"],"React Hook useEffect has missing dependencies: 'active', 'image_url', 'register', and 'setValue'. Either include them or remove the dependency array.",["390"],"React Hook useEffect has missing dependencies: 'image_url' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["391"],"React Hook useEffect has missing dependencies: 'handleUpload' and 'lastImage'. Either include them or remove the dependency array.",["392"],"no-global-assign","no-unsafe-negation",{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"411","fix":"413"},{"desc":"411","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"423","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},"Update the dependencies array to be: [startDate, endDate, ordersArray]",{"range":"438","text":"439"},"Update the dependencies array to be: [ordersArray, searchedWord]",{"range":"440","text":"441"},"Update the dependencies array to be: [ordersArray, selectedOption]",{"range":"442","text":"443"},"Update the dependencies array to be: [filterWord, paintingsArray]",{"range":"444","text":"445"},"Update the dependencies array to be: [searchedWord, themes]",{"range":"446","text":"447"},"Update the dependencies array to be: [searchedWord, zones]",{"range":"448","text":"449"},"Update the dependencies array to be: [materials, searchedWord]",{"range":"450","text":"451"},"Update the dependencies array to be: [materials, measurements, searchedWord]",{"range":"452","text":"453"},"Update the dependencies array to be: [history]",{"range":"454","text":"455"},"Update the dependencies array to be: [id]",{"range":"456","text":"457"},{"range":"458","text":"457"},{"range":"459","text":"457"},"Update the dependencies array to be: [register]",{"range":"460","text":"461"},"Update the dependencies array to be: [active, image_url, painting_materials, painting_measurements, setValue, theme.id]",{"range":"462","text":"463"},"Update the dependencies array to be: [painting_materials]",{"range":"464","text":"465"},"Update the dependencies array to be: [materials, painting_measurements]",{"range":"466","text":"467"},"Update the dependencies array to be: [active, register, setValue]",{"range":"468","text":"469"},"Update the dependencies array to be: [register, setValue]",{"range":"470","text":"471"},"Update the dependencies array to be: [materials, selectedMaterial]",{"range":"472","text":"473"},{"range":"474","text":"469"},"Update the dependencies array to be: [active, material_id, register, setValue]",{"range":"475","text":"476"},"Update the dependencies array to be: [active, image_url, register, setValue]",{"range":"477","text":"478"},"Update the dependencies array to be: [image_url, setValue]",{"range":"479","text":"480"},"Update the dependencies array to be: [handleUpload, image, lastImage]",{"range":"481","text":"482"},[1392,1412],"[startDate, endDate, ordersArray]",[1926,1940],"[ordersArray, searchedWord]",[2131,2147],"[ordersArray, selectedOption]",[940,952],"[filterWord, paintingsArray]",[1046,1060],"[searchedWord, themes]",[1070,1084],"[searchedWord, zones]",[1099,1113],"[materials, searchedWord]",[1521,1535],"[materials, measurements, searchedWord]",[513,515],"[history]",[479,481],"[id]",[902,904],[998,1000],[1887,1889],"[register]",[2378,2380],"[active, image_url, painting_materials, painting_measurements, setValue, theme.id]",[5245,5247],"[painting_materials]",[5486,5497],"[materials, painting_measurements]",[3131,3133],"[active, register, setValue]",[2713,2715],"[register, setValue]",[3468,3486],"[materials, selectedMaterial]",[3074,3076],[3694,3696],"[active, material_id, register, setValue]",[3664,3666],"[active, image_url, register, setValue]",[696,698],"[image_url, setValue]",[1134,1141],"[handleUpload, image, lastImage]"]