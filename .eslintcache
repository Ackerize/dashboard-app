[{"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\index.js":"1","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\App.js":"2","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Navbar.js":"3","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SidebarData.js":"4","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Home.js":"5","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\History.js":"6","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Paintings.js":"7","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TablePaintings.js":"8","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\utils\\utils.js":"9","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Button.js":"10","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\paintings.js":"11","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Search.js":"12","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableOrders.js":"13","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowPaintings.js":"14","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowOrders.js":"15","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormPaintings.js":"16","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardHeading.js":"17","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardBody.js":"18","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\themes.js":"19","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Upload.js":"20","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\firebase\\firebase.js":"21","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SelectForm.js":"22","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ConfirmModal.js":"23","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\orders.js":"24","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardUI.js":"25","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\materials.js":"26","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\DatePicker.js":"27","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ModalOrder.js":"28","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\Details.js":"29","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\HeaderOrderDetails.js":"30","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CustomerInfo.js":"31","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableDetails.js":"32","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SummaryOrder.js":"33","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowDetails.js":"34","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\measurements.js":"35","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormEdit.js":"36","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\EditBody.js":"37","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Materials.js":"38","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Themes.js":"39","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Measurements.js":"40","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\DeliveryZones.js":"41","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableMaterials.js":"42","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowMaterials.js":"43","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\MaterialForm.js":"44","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\MaterialBody.js":"45","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\ThemeForm.js":"46","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableThemes.js":"47","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ThemeBody.js":"48","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowTheme.js":"49","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\delivery_zones.js":"50","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableZones.js":"51","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowZone.js":"52","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\ZoneForm.js":"53","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ZoneBody.js":"54","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableMeasurements.js":"55","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowMeasurements.js":"56","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\BodyMeasurement.js":"57","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\MeasurementForm.js":"58","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Login.js":"59","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Auth.js":"60","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Logout.js":"61","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\index.js":"62","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\App.js":"63","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Auth.js":"64","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\firebase\\firebase.js":"65","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Login.js":"66","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Home.js":"67","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\History.js":"68","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Paintings.js":"69","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\DeliveryZones.js":"70","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Materials.js":"71","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Logout.js":"72","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Measurements.js":"73","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Themes.js":"74","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\FormPaintings.js":"75","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\Details.js":"76","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\ThemeForm.js":"77","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\FormEdit.js":"78","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\MaterialForm.js":"79","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\MeasurementForm.js":"80","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\ZoneForm.js":"81","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Navbar.js":"82","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CardUI.js":"83","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Search.js":"84","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\DatePicker.js":"85","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableOrders.js":"86","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Button.js":"87","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableMaterials.js":"88","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TablePaintings.js":"89","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableZones.js":"90","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableMeasurements.js":"91","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableThemes.js":"92","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CardBody.js":"93","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CardHeading.js":"94","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\orders.js":"95","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\utils\\utils.js":"96","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\paintings.js":"97","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\delivery_zones.js":"98","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\materials.js":"99","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\measurements.js":"100","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\HeaderOrderDetails.js":"101","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\themes.js":"102","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CustomerInfo.js":"103","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableDetails.js":"104","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\MaterialBody.js":"105","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\EditBody.js":"106","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\SummaryOrder.js":"107","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\BodyMeasurement.js":"108","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ThemeBody.js":"109","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\SidebarData.js":"110","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ZoneBody.js":"111","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowOrders.js":"112","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ConfirmModal.js":"113","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ModalOrder.js":"114","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowMaterials.js":"115","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowPaintings.js":"116","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowZone.js":"117","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowMeasurements.js":"118","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowTheme.js":"119","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\SelectForm.js":"120","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Upload.js":"121","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowDetails.js":"122"},{"size":180,"mtime":1609949490772,"results":"123","hashOfConfig":"124"},{"size":949,"mtime":1612140898859,"results":"125","hashOfConfig":"124"},{"size":1450,"mtime":1611741392381,"results":"126","hashOfConfig":"124"},{"size":1316,"mtime":1612138736071,"results":"127","hashOfConfig":"124"},{"size":2307,"mtime":1612062266615,"results":"128","hashOfConfig":"124"},{"size":3073,"mtime":1611901334002,"results":"129","hashOfConfig":"124"},{"size":1344,"mtime":1611895596715,"results":"130","hashOfConfig":"124"},{"size":822,"mtime":1611766324336,"results":"131","hashOfConfig":"124"},{"size":6766,"mtime":1612133150043,"results":"132","hashOfConfig":"124"},{"size":2208,"mtime":1612113027894,"results":"133","hashOfConfig":"124"},{"size":509,"mtime":1611892022963,"results":"134","hashOfConfig":"124"},{"size":601,"mtime":1611375142513,"results":"135","hashOfConfig":"124"},{"size":1162,"mtime":1611735780290,"results":"136","hashOfConfig":"124"},{"size":1435,"mtime":1612064347872,"results":"137","hashOfConfig":"124"},{"size":1442,"mtime":1611728244218,"results":"138","hashOfConfig":"124"},{"size":533,"mtime":1611803385753,"results":"139","hashOfConfig":"124"},{"size":209,"mtime":1610821853241,"results":"140","hashOfConfig":"124"},{"size":8909,"mtime":1611899285570,"results":"141","hashOfConfig":"124"},{"size":249,"mtime":1611069908670,"results":"142","hashOfConfig":"124"},{"size":3210,"mtime":1612122399106,"results":"143","hashOfConfig":"124"},{"size":558,"mtime":1612137683824,"results":"144","hashOfConfig":"124"},{"size":1136,"mtime":1611891464407,"results":"145","hashOfConfig":"124"},{"size":1044,"mtime":1611898859368,"results":"146","hashOfConfig":"124"},{"size":767,"mtime":1611728361546,"results":"147","hashOfConfig":"124"},{"size":776,"mtime":1611899316349,"results":"148","hashOfConfig":"124"},{"size":255,"mtime":1611383359453,"results":"149","hashOfConfig":"124"},{"size":1369,"mtime":1611638836966,"results":"150","hashOfConfig":"124"},{"size":2551,"mtime":1611881521644,"results":"151","hashOfConfig":"124"},{"size":1977,"mtime":1611730563417,"results":"152","hashOfConfig":"124"},{"size":2870,"mtime":1611879109079,"results":"153","hashOfConfig":"124"},{"size":865,"mtime":1611726351946,"results":"154","hashOfConfig":"124"},{"size":860,"mtime":1611727541746,"results":"155","hashOfConfig":"124"},{"size":712,"mtime":1611729891814,"results":"156","hashOfConfig":"124"},{"size":1051,"mtime":1611878099383,"results":"157","hashOfConfig":"124"},{"size":242,"mtime":1611768629713,"results":"158","hashOfConfig":"124"},{"size":858,"mtime":1611892670469,"results":"159","hashOfConfig":"124"},{"size":10405,"mtime":1611899357861,"results":"160","hashOfConfig":"124"},{"size":1530,"mtime":1612112998749,"results":"161","hashOfConfig":"124"},{"size":1456,"mtime":1612123286115,"results":"162","hashOfConfig":"124"},{"size":2040,"mtime":1612130968361,"results":"163","hashOfConfig":"124"},{"size":1499,"mtime":1612126350736,"results":"164","hashOfConfig":"124"},{"size":809,"mtime":1612122492557,"results":"165","hashOfConfig":"124"},{"size":1444,"mtime":1612142180332,"results":"166","hashOfConfig":"124"},{"size":525,"mtime":1612112841165,"results":"167","hashOfConfig":"124"},{"size":5201,"mtime":1612143197459,"results":"168","hashOfConfig":"124"},{"size":496,"mtime":1612123308230,"results":"169","hashOfConfig":"124"},{"size":763,"mtime":1612123791691,"results":"170","hashOfConfig":"124"},{"size":4373,"mtime":1612127537470,"results":"171","hashOfConfig":"124"},{"size":1006,"mtime":1612123766050,"results":"172","hashOfConfig":"124"},{"size":264,"mtime":1612124955776,"results":"173","hashOfConfig":"124"},{"size":750,"mtime":1612126424897,"results":"174","hashOfConfig":"124"},{"size":962,"mtime":1612126385148,"results":"175","hashOfConfig":"124"},{"size":491,"mtime":1612127718141,"results":"176","hashOfConfig":"124"},{"size":4201,"mtime":1612127639295,"results":"177","hashOfConfig":"124"},{"size":892,"mtime":1612130177184,"results":"178","hashOfConfig":"124"},{"size":1286,"mtime":1612130271476,"results":"179","hashOfConfig":"124"},{"size":6088,"mtime":1612133197130,"results":"180","hashOfConfig":"124"},{"size":531,"mtime":1612132600285,"results":"181","hashOfConfig":"124"},{"size":3119,"mtime":1612141118626,"results":"182","hashOfConfig":"124"},{"size":2310,"mtime":1612138838919,"results":"183","hashOfConfig":"124"},{"size":542,"mtime":1612141194724,"results":"184","hashOfConfig":"124"},{"size":180,"mtime":1609949490772,"results":"185","hashOfConfig":"186"},{"size":1014,"mtime":1612206833529,"results":"187","hashOfConfig":"186"},{"size":2310,"mtime":1612138838919,"results":"188","hashOfConfig":"186"},{"size":558,"mtime":1612137683824,"results":"189","hashOfConfig":"186"},{"size":3222,"mtime":1612206809387,"results":"190","hashOfConfig":"186"},{"size":2552,"mtime":1612157453398,"results":"191","hashOfConfig":"186"},{"size":3073,"mtime":1611901334002,"results":"192","hashOfConfig":"186"},{"size":1344,"mtime":1611895596715,"results":"193","hashOfConfig":"186"},{"size":1499,"mtime":1612126350736,"results":"194","hashOfConfig":"186"},{"size":1530,"mtime":1612112998749,"results":"195","hashOfConfig":"186"},{"size":569,"mtime":1612206977392,"results":"196","hashOfConfig":"186"},{"size":2040,"mtime":1612130968361,"results":"197","hashOfConfig":"186"},{"size":1456,"mtime":1612123286115,"results":"198","hashOfConfig":"186"},{"size":533,"mtime":1611803385753,"results":"199","hashOfConfig":"186"},{"size":1977,"mtime":1611730563417,"results":"200","hashOfConfig":"186"},{"size":496,"mtime":1612123308230,"results":"201","hashOfConfig":"186"},{"size":858,"mtime":1611892670469,"results":"202","hashOfConfig":"186"},{"size":525,"mtime":1612112841165,"results":"203","hashOfConfig":"186"},{"size":531,"mtime":1612132600285,"results":"204","hashOfConfig":"186"},{"size":491,"mtime":1612127718141,"results":"205","hashOfConfig":"186"},{"size":1450,"mtime":1611741392381,"results":"206","hashOfConfig":"186"},{"size":776,"mtime":1611899316349,"results":"207","hashOfConfig":"186"},{"size":601,"mtime":1611375142513,"results":"208","hashOfConfig":"186"},{"size":1369,"mtime":1611638836966,"results":"209","hashOfConfig":"186"},{"size":1162,"mtime":1611735780290,"results":"210","hashOfConfig":"186"},{"size":2208,"mtime":1612113027894,"results":"211","hashOfConfig":"186"},{"size":825,"mtime":1612157071232,"results":"212","hashOfConfig":"186"},{"size":822,"mtime":1611766324336,"results":"213","hashOfConfig":"186"},{"size":766,"mtime":1612157322267,"results":"214","hashOfConfig":"186"},{"size":908,"mtime":1612156967730,"results":"215","hashOfConfig":"186"},{"size":779,"mtime":1612157298792,"results":"216","hashOfConfig":"186"},{"size":9061,"mtime":1612154526919,"results":"217","hashOfConfig":"186"},{"size":209,"mtime":1610821853241,"results":"218","hashOfConfig":"186"},{"size":767,"mtime":1611728361546,"results":"219","hashOfConfig":"186"},{"size":7039,"mtime":1612153139644,"results":"220","hashOfConfig":"186"},{"size":509,"mtime":1611892022963,"results":"221","hashOfConfig":"186"},{"size":264,"mtime":1612124955776,"results":"222","hashOfConfig":"186"},{"size":255,"mtime":1611383359453,"results":"223","hashOfConfig":"186"},{"size":242,"mtime":1611768629713,"results":"224","hashOfConfig":"186"},{"size":2870,"mtime":1611879109079,"results":"225","hashOfConfig":"186"},{"size":249,"mtime":1611069908670,"results":"226","hashOfConfig":"186"},{"size":865,"mtime":1611726351946,"results":"227","hashOfConfig":"186"},{"size":860,"mtime":1611727541746,"results":"228","hashOfConfig":"186"},{"size":5165,"mtime":1612148165149,"results":"229","hashOfConfig":"186"},{"size":11622,"mtime":1612154510171,"results":"230","hashOfConfig":"186"},{"size":712,"mtime":1611729891814,"results":"231","hashOfConfig":"186"},{"size":7780,"mtime":1612151484296,"results":"232","hashOfConfig":"186"},{"size":6263,"mtime":1612149042403,"results":"233","hashOfConfig":"186"},{"size":1316,"mtime":1612138736071,"results":"234","hashOfConfig":"186"},{"size":5796,"mtime":1612149826396,"results":"235","hashOfConfig":"186"},{"size":1442,"mtime":1611728244218,"results":"236","hashOfConfig":"186"},{"size":1044,"mtime":1611898859368,"results":"237","hashOfConfig":"186"},{"size":2551,"mtime":1611881521644,"results":"238","hashOfConfig":"186"},{"size":1370,"mtime":1612151275068,"results":"239","hashOfConfig":"186"},{"size":1570,"mtime":1612154783938,"results":"240","hashOfConfig":"186"},{"size":1648,"mtime":1612149917963,"results":"241","hashOfConfig":"186"},{"size":1711,"mtime":1612151593590,"results":"242","hashOfConfig":"186"},{"size":1518,"mtime":1612148369875,"results":"243","hashOfConfig":"186"},{"size":1136,"mtime":1611891464407,"results":"244","hashOfConfig":"186"},{"size":3292,"mtime":1612148767893,"results":"245","hashOfConfig":"186"},{"size":1051,"mtime":1611878099383,"results":"246","hashOfConfig":"186"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},"1kd80xh",{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"249"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"249"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"249"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"249"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"249"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"249"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"249"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"249"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"249"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"249"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"249"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"249"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"249"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"249"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"249"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"249"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"249"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"249"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"249"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"249"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"249"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"249"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},"1kfui04",{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"394"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"394"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"394"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"394"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"394"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"394"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"394"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"394"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"394"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"394"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"394"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"394"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"394"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"394"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"394"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"394"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"394"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"394"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"394"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"394"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"394"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"394"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"394"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"394"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"527"},"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\index.js",[],["528","529"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\App.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Navbar.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SidebarData.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Home.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\History.js",["530","531","532"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport TableOrders from \"../components/TableOrders\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  formatDate,\r\n  sortBy,\r\n  sortOption,\r\n  formatDateSearch,\r\n} from \"../utils/utils\";\r\nimport { getAllOrders } from \"../api/orders\";\r\nimport moment from \"moment\";\r\n\r\nconst History = () => {\r\n  const [ordersArray, setOrdersArray] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [resultingOrders, setResultingOrders] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllOrders().then((response) => {\r\n      const { orders } = response;\r\n      setOrdersArray(orders);\r\n      setResultingOrders(orders);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      const result = copyArray.filter((item) =>\r\n        moment(formatDate(item.order_date), \"YYYY-MM-DD\").isBetween(\r\n          moment(formatDate(startDate), \"YYYY-MM-DD\"),\r\n          moment(formatDate(endDate), \"YYYY-MM-DD\"),\r\n          undefined,\r\n          \"[]\"\r\n        )\r\n      );\r\n      setResultingOrders(result);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    if (!ordersArray) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const ordersFilter = ordersArray.filter((order) => {\r\n      return (\r\n        order.customer_name.match(regexInput) ||\r\n        order.delivery_zone.name.match(regexInput) ||\r\n        order.status.match(regexInput) ||\r\n        order.id.toString().match(regexInput) ||\r\n        formatDateSearch(order.order_date).match(regexInput)\r\n      );\r\n    });\r\n    setResultingOrders(ordersFilter);\r\n  }, [searchedWord]);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      copyArray.sort(sortBy(selectedOption));\r\n      setResultingOrders(copyArray);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  if (!ordersArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-5\">\r\n        Historial de pedidos\r\n      </h1>\r\n      <div className=\"header-order-table\">\r\n        <DatePicker\r\n          startDate={startDate}\r\n          setStartDate={setStartDate}\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n        <Select\r\n          options={sortOption}\r\n          name=\"searchable\"\r\n          className=\"w-100 custom-control\"\r\n          placeholder=\"Ordenar por ...\"\r\n          isSearchable\r\n          isClearable\r\n          onChange={(value) => setSelectedOption(value ? value.value : null)}\r\n          noOptionsMessage={(inputValue) => \"No se encontró esa opción\"}\r\n        />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableOrders orders={resultingOrders} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Paintings.js",["533"],"import React, { useEffect, useState } from 'react';\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllPaintings } from '../api/paintings';\r\nimport TablePaintings from \"../components/TablePaintings\";\r\n\r\nconst Paintings = () => {\r\n  const [paintingsArray, setPaintingsArray] = useState(null);\r\n  const [filterWord, setFilterWord] = useState('');\r\n  const [filteredPaintings, setFilteredPaintings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPaintings().then((response) => {\r\n      const {paintings} = response;\r\n      setPaintingsArray(paintings);\r\n      setFilteredPaintings(paintings);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!paintingsArray) return null;\r\n    let regexInput = new RegExp(filterWord, \"gi\");\r\n    const paintingsFilter = paintingsArray.filter((item) =>{\r\n      return item.name.match(regexInput);\r\n    });\r\n    setFilteredPaintings(paintingsFilter);\r\n  }, [filterWord])\r\n\r\n  if(!paintingsArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Paintings</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"add\" />\r\n        <Search setFilterWord={setFilterWord} />\r\n      </div>\r\n      <TablePaintings paintingsArray={filteredPaintings} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TablePaintings.js",["534","535"],"import { map } from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport { cabecerasPaintings } from '../utils/utils'\r\nimport './Navbar.css';\r\nimport RowPaintings from './RowPaintings';\r\n\r\nconst TablePaintings = ({ paintingsArray }) => {\r\n  return (\r\n    <div className=\"table-paintings table-responsive\">\r\n      <table className=\"table\">\r\n        <thead className=\"table-light text-center\">\r\n          <tr>\r\n            {map(cabecerasPaintings, (cabecera, index) => (\r\n              <th key={index}>{cabecera}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {map(paintingsArray, (painting) => (\r\n            <RowPaintings key={painting.id} painting={painting} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TablePaintings\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\utils\\utils.js",["536","537"],"import { map } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nexport const cabecerasPaintings = [\r\n  \"Cuadro\",\r\n  \"Nombre\",\r\n  \"Descripcion\",\r\n  \"Existencias\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n  \"\",\r\n];\r\n\r\nexport const cabecerasOrders = [\r\n  \"Id\",\r\n  \"Cliente\",\r\n  \"Fecha de orden\",\r\n  \"Fecha de entrega\",\r\n  \"Zona de entrega\",\r\n  \"Estado\",\r\n  \"Cantidad total\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasMaterials = [\r\n  \"Id\",\r\n  \"Nombre\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n]\r\n\r\nexport const cabecerasThemes = [\r\n  \"Id\",\r\n  \"Imagen\",\r\n  \"Nombre\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n]\r\n\r\nexport const cabecerasZones = [\r\n  \"Id\",\r\n  \"Nombre\",\r\n  \"Precio\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n]\r\n\r\nexport const cabecerasMeasurements = [\r\n  \"Id\",\r\n  \"Ancho\",\r\n  \"Alto\",\r\n  \"Precio\",\r\n  \"Material\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n]\r\n\r\nexport const API_HOST = \"https://api-rest-canvas.herokuapp.com/api\";\r\n\r\nconst characters =\r\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\nexport function generateString(length) {\r\n  let result = \"\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const formatArray = (array) =>\r\n  map(array, (item) => ({ label: item.name, value: item.id }));\r\n\r\nexport const filterArray = (array) => map(array, (item) => item.value);\r\n\r\nexport const filterObject = (obj) => obj.value;\r\n\r\nexport const filterMaterialsArray = (array) => map(array, (item) => item.id)\r\n\r\nexport const dataDelete = {\r\n  title: \"Confirmar para eliminar\",\r\n  subtitle: \"¿Estás seguro de eliminar este cuadro?\",\r\n  btnYesText: \"¡Sí, eliminar!\",\r\n  btnNoText: \"No\",\r\n  btnYesId: \"btn-no\",\r\n  btnNoId: \"btn-yes\",\r\n};\r\n\r\nexport const findStatus = (status) => {\r\n  switch (status) {\r\n    case \"PENDIENTE\":\r\n    case \"EN PROCESO\":\r\n      return \"status pending\";\r\n    case \"CONFIRMADA\":\r\n      return \"status confirmed\";\r\n    case \"ENTREGADA\":\r\n      return \"status delivered\";\r\n    case \"EN CAMINO\":\r\n      return \"status shipped\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const statuses = [\r\n  { value: \"PENDIENTE\", label: \"PENDIENTE\" },\r\n  { value: \"CONFIRMADA\", label: \"CONFIRMADA\" },\r\n  { value: \"EN PROCESO\", label: \"EN PROCESO\" },\r\n  { value: \"EN CAMINO\", label: \"EN CAMINO\" },\r\n  { value: \"ENTREGADA\", label: \"ENTREGADA\" },\r\n];\r\n\r\nexport const sortOption = [\r\n  { value: \"id\", label: \"ID\" },\r\n  { value: \"cliente\", label: \"CLIENTE\" },\r\n  { value: \"estado\", label: \"ESTADO\" },\r\n  { value: \"fecha-orden\", label: \"FECHA DE ORDEN\" },\r\n  { value: \"fecha-entrega\", label: \"FECHA DE ENTREGA\" },\r\n  { value: \"zona-entrega\", label: \"ZONA DE ENTREGA\" },\r\n];\r\n\r\nexport const sortBy = (type) => {\r\n  switch (type) {\r\n    case \"id\":\r\n      return (a, b) => {\r\n        if (a.id < b.id) return -1;\r\n        if (a.id > b.id) return 1;\r\n        return 0;\r\n      };\r\n    case \"cliente\":\r\n      return (a, b) => {\r\n        if (a.customer_name < b.customer_name) return -1;\r\n        if (a.customer_name > b.customer_name) return 1;\r\n        return 0;\r\n      };\r\n    case \"status\":\r\n      return (a, b) => {\r\n        if (a.status < b.status) return -1;\r\n        if (a.status > b.status) return 1;\r\n        return 0;\r\n      };\r\n    case \"zona-entrega\":\r\n      return (a, b) => {\r\n        if (a.delivery_zone.name < b.delivery_zone.name) return -1;\r\n        if (a.delivery_zone.name > b.delivery_zone.name) return 1;\r\n        return 0;\r\n      };\r\n    case \"fecha-orden\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.order_date),\r\n          dateB = new Date(b.order_date);\r\n        return dateA - dateB;\r\n      };\r\n    case \"fecha-entrega\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.delivery_date),\r\n          dateB = new Date(b.delivery_date);\r\n        return dateA - dateB;\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const formatDateSearch = (date) => {\r\n  return moment(date).format(\"DD/MM/YYYY\");\r\n};\r\n\r\nexport const progressOrderBar = (status) => {\r\n  switch (status) {\r\n    case \"EN PROCESO\":\r\n    case \"PENDIENTE\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"CONFIRMADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"EN CAMINO\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"ENTREGADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n        </>\r\n      );\r\n    default:\r\n      return (\r\n        <>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport const formatFloat = (number) => parseFloat(number).toFixed(2);\r\n\r\nexport const filterMeasurements = (collection, idMaterial) => {\r\n  return collection.filter((item) => item.material_id == idMaterial);\r\n};\r\n\r\nexport const formatArrayMeasurements = (array, materials) =>{\r\n  return map(array, (item) => {\r\n    const materialName = findMaterial(materials, item.material_id);\r\n    return {\r\n      label: `${item.width} x ${item.height} cm -  ${materialName}`,\r\n      value: item.id,\r\n    };\r\n  });\r\n}\r\nexport const findMaterial = (materials, idMaterial) =>\r\n  materials.filter((item) => item.value == idMaterial)[0].label;\r\n\r\nexport const findMaterialById = (materials, idMaterial) => \r\n  materials.filter((item) => item.id === idMaterial)[0].name;\r\n\r\n\r\nexport const onValidatePairs = (\r\n  materialsSelected,\r\n  measurementsSelected,\r\n  measurements\r\n) => {\r\n  const materialsSet = new Set();\r\n  let flag = true;\r\n\tmeasurements.forEach((item) => {\r\n\t\tif(measurementsSelected.includes(item.id) && materialsSelected.includes(item.material_id)){\r\n\t\t\tmaterialsSet.add(item.material_id);\r\n\t\t}\r\n\t\telse if(measurementsSelected.includes(item.id) && !materialsSelected.includes(item.material_id)){\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t});\r\n\tif(flag && materialsSet.size !== materialsSelected.length) return false;\r\n\treturn flag;\r\n};\r\n\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Button.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\paintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Search.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableOrders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowPaintings.js",["538","539","540","541"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_HOST } from \"../utils/utils\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nconst RowPaintings = ({ painting }) => {\r\n  const { id, image_url, name, description, measurements, price, stock, active } = painting;\r\n\r\n  let history = useHistory();\r\n\r\n  const onEdit = () => {\r\n    history.push(`/paintings/edit/${id}`);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    /*axios.delete(`${API_HOST}/paintings/${id}`)\r\n    .then((response) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n    })*/\r\n    Swal.fire({\r\n      title: \"¡Cuadro eliminado!.\",\r\n      text: \"Aún no elimina, falta la validación\",\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        <img src={image_url} alt={`Cuadro-${id}`} className=\"img-display\" />\r\n      </th>\r\n      <td>{name}</td>\r\n      <td className=\"description-cell col-5\">{description}</td>\r\n      <td>{stock}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" onClick={onEdit} />\r\n          <Button type=\"delete\" onClick={onDelete} />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowPaintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowOrders.js",["542"],"import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getOrderDetail } from \"../api/orders\";\r\nimport { findStatus } from \"../utils/utils\";\r\nimport Button from \"./Button\";\r\n\r\nconst RowOrders = ({ order, setShowModal, setActualOrder }) => {\r\n  const {\r\n    id,\r\n    customer_name,\r\n    order_date,\r\n    delivery_date,\r\n    delivery_zone,\r\n    status,\r\n    total_amount,\r\n  } = order;\r\n\r\n  const { name } = delivery_zone;\r\n  const history = useHistory();\r\n\r\n  const orderDate = moment(order_date).format(\"DD/MM/YYYY hh:mm\");\r\n  const deliveryDate = moment(delivery_date).format(\"DD/MM/YYYY hh:mm\");\r\n\r\n  const onEdit = () => {\r\n    setActualOrder(order);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onView = () => {\r\n    history.push({\r\n      pathname: `/order/view/${id}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"align-middle text-center\">\r\n        <th scope=\"row\">{`Orden #${id}`}</th>\r\n        <td>{customer_name}</td>\r\n        <td>{orderDate}</td>\r\n        <td>{deliveryDate}</td>\r\n        <td>{name}</td>\r\n        <td className={findStatus(status)}>{status}</td>\r\n        <td>{`$ ${total_amount}`}</td>\r\n        <td>\r\n          <div className=\"cell-container\">\r\n            <Button type=\"view\" onClick={onView} />\r\n            <Button type=\"edit\" onClick={onEdit} />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RowOrders;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormPaintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardHeading.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardBody.js",["543","544"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  filterArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst CardBody = ({ btnText }) => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    /*axios.post(`${API_HOST}/paintings`, data)\r\n    .then((response) => {\r\n      console.log(response);\r\n    })*/\r\n\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      console.log(data);\r\n      Swal.fire({\r\n        title: \"¡Cuadro creado!.\",\r\n        text: \"Aún no crea en realidad :b\",\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n      console.log(\"TODO MAL\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" }, { required: true });\r\n    register({ name: \"image_url\" }, { required: true });\r\n    setValue(\"active\", true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        let formatMeasurements = formatArrayMeasurements(\r\n          filterMeasurements(response, selectedMaterial[i]),\r\n          materials\r\n        );\r\n        resultArray = resultArray.concat(formatMeasurements);\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial]);\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el stock del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {btnText}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\themes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Upload.js",["545","546"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { generateString } from \"../utils/utils\";\r\n\r\nconst Upload = ({ setValue, setUrlImg, error, image_url }) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [lastImage, setLastImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"No URL\");\r\n  const [image, setImage] = useState({ name: \"No Image\" });\r\n\r\n  useEffect(() => {\r\n    if(image_url){\r\n      setUrl(image_url);\r\n      setReady(true);\r\n      setProgress(100);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (image.name !== \"No Image\") {\r\n      if (lastImage !== \"\") {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(lastImage)\r\n          .delete()\r\n          .then(() => console.log(\"Done!\"))\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n      let splitImage = image.name.split(\".\");\r\n      let newName = generateString(30) + \".\" + splitImage[1];\r\n      handleUpload(newName);\r\n    }\r\n  }, [image]);\r\n\r\n  const handleUpload = (newName) => {\r\n    console.log(newName);\r\n    const uploadTask = storage.ref(`/${newName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(newName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setValue('image_url', url);\r\n            setUrlImg(newName);\r\n          });\r\n        setLastImage(newName);\r\n        setReady(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ready ? (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"img-upload\"\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              imageResolution: \"from-image\",\r\n            }}\r\n            id=\"btn-upload\"\r\n          >\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"img-add\" id=\"btn-add\">\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      )}\r\n      <ProgressBar\r\n        completed={progress}\r\n        width=\"50%\"\r\n        bgcolor=\"#21AB91\"\r\n        margin=\"20px auto 10px auto\"\r\n        labelAlignment=\"right\"\r\n      />\r\n      {error && <div className=\"error-img\">Seleccione una imagen</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\firebase\\firebase.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SelectForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ConfirmModal.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\orders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardUI.js",["547"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./card-style.css\";\r\n\r\nconst CardUI = ({ imgSrc, title, option, url, description }) => {\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(`/${url}`);\r\n\r\n  return (\r\n    <div className=\"card text-center shadow\">\r\n      <div className=\"overflow\">\r\n        <img src={imgSrc} alt=\"Foto\" className=\"card-img-top\" />\r\n      </div>\r\n      <div className=\"card-body text-dark\">\r\n        <h4 className=\"card-title\">{title}</h4>\r\n        <p className=\"card-text text-secondary\">{description}</p>\r\n        <a href=\"\" onClick={handleClick} className=\"btn btn-outline-success\">\r\n          Ir a {option}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\materials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\DatePicker.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ModalOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\Details.js",["548","549","550"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getOrderById, getOrderDetail } from \"../api/orders\";\r\nimport Button from \"../components/Button\";\r\nimport CustomerInfo from \"../components/CustomerInfo\";\r\nimport HeaderOrderDetails from \"../components/HeaderOrderDetails\";\r\nimport SummaryOrder from \"../components/SummaryOrder\";\r\nimport TableDetails from \"../components/TableDetails\";\r\nimport { formatFloat } from \"../utils/utils\";\r\nimport \"./details-container.css\";\r\n\r\nconst Details = (props) => {\r\n  const { id } = useParams();\r\n  const [details, setDetails] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getOrderDetail(id).then((response) => setDetails(response.order_detail));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getOrderById(id).then((response) => setOrder(response));\r\n  }, []);\r\n\r\n  if (!order) return null;\r\n  if (!details) return null;\r\n\r\n  const { status, total_amount, delivery_zone } = order;\r\n  const { delivery_cost } = delivery_zone;\r\n  const total = formatFloat(total_amount);\r\n  const deliveryCost = formatFloat(delivery_cost);\r\n  const subtotal = formatFloat(total_amount - delivery_cost);\r\n\r\n  \r\n\r\n  const onBack = () => {\r\n    history.push(\"/history\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container px-1 px-md-4 py-5 mx-auto\">\r\n      <div className=\"card card-container-delivery\">\r\n        <HeaderOrderDetails order={order} />\r\n        <hr className=\"hr-order-details\" />\r\n        <CustomerInfo order={order} />\r\n        <div>\r\n          <TableDetails details={details} />\r\n        </div>\r\n        <div className=\"footer-details\">\r\n          <SummaryOrder\r\n            subtotal={subtotal}\r\n            delivery_cost={deliveryCost}\r\n            total={total}\r\n          />\r\n          <Button type=\"back\" onClick={onBack} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\HeaderOrderDetails.js",["551","552","553","554"],"import React from \"react\";\r\nimport \"./details-style.css\";\r\nimport step1 from \"../assets/step1.png\";\r\nimport step2 from \"../assets/step2.png\";\r\nimport step3 from \"../assets/step3.png\";\r\nimport step4 from \"../assets/step4.png\";\r\nimport { progressOrderBar } from \"../utils/utils\";\r\nimport moment from \"moment\";\r\n\r\nconst HeaderOrderDetails = ({ order }) => {\r\n  const { status, id, delivery_date } = order;\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-between px-3 top delivery\">\r\n        <div className=\"d-flex header-bar delivery\">\r\n          <h5>\r\n            ORDER <span className=\"text-primary font-weight-bold\">{`# ${id}`}</span>\r\n          </h5>\r\n        </div>\r\n        <div className=\"d-flex flex-column text-sm-right delivery\">\r\n          <p className=\"mb-0\">\r\n            Fecha de entrega: <span>{moment(delivery_date).format(\"DD-MM-YYYY\")}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center delivery progress-column\">\r\n        <div className=\"col-12\">\r\n          <ul id=\"progressbar\" className=\"text-center\">\r\n            {progressOrderBar(status)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-between top container-labels delivery\">\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step1} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Pendiente\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step2} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Confirmada\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step3} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              En camino\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step4} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              Entregada\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderOrderDetails;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CustomerInfo.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableDetails.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SummaryOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowDetails.js",["555"],"import React from \"react\";\r\n\r\nconst RowDetails = ({ order }) => {\r\n  console.log(\"ENTRE\")\r\n  const {amount, measurements, quantity, price, painting, material} = order;\r\n  const {name:painting_name, image_url} = painting;\r\n  const {name:material_name} = material;\r\n\r\n  console.log(order)\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\" width=\"40%\">\r\n        <div className=\"container-product-item principal-info\">\r\n          <img className=\"product-img\" src={image_url} width=\"80px\" />\r\n          <div className=\"text-container-product\">\r\n            <p className=\"product-name\">{painting_name}</p>\r\n            <p className=\"description-product-item material-name\">{material_name}</p>\r\n            <p className=\"description-product-item dimensions\">{measurements}</p>\r\n          </div>\r\n        </div>\r\n      </th>\r\n      <td width=\"20%\" className=\"row-price\">{`$ ${price}`}</td>\r\n      <td width=\"20%\">{quantity}</td>\r\n      <td width=\"20%\">{`$ ${amount}`}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowDetails;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\measurements.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormEdit.js",["556"],"import React,{ useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOnePaintingById } from '../api/paintings';\r\nimport CardHeading from '../components/CardHeading';\r\nimport EditBody from '../components/EditBody'\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [painting, setPainting] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getOnePaintingById(id).then((response) => {\r\n      setPainting(response[0]);\r\n    });\r\n  }, []);\r\n\r\n  if(!painting) return null;\r\n\r\n  return (\r\n    <div className=\"page-wrapper p-t-45 p-b-50\">\r\n      <div className=\"wrapper wrapper--w790\">\r\n        <div className=\"card card-5 card-painting\">\r\n          <CardHeading title=\"Actualizar cuadro\" />\r\n          <EditBody painting={painting} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormEdit\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\EditBody.js",["557","558","559","560"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  filterArray,\r\n  filterMaterialsArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\n\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst EditBody = ({ painting }) => {\r\n  const {\r\n    materials: painting_materials,\r\n    name,\r\n    description,\r\n    stock,\r\n    active,\r\n    image_url,\r\n    theme,\r\n    measurements: painting_measurements,\r\n  } = painting;\r\n\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    /*axios.put(`${API_HOST}/paintings/${id}`, data)\r\n    .then((response) => {\r\n      console.log(response);\r\n    })*/\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      console.log(data);\r\n      Swal.fire({\r\n        title: \"¡Cuadro actualizado!.\",\r\n        text: \"Aún no actualiza en realidad :b\",\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      setTimeout(() => {\r\n        history.push(\"/paintings\");\r\n      }, 1500);\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n      console.log(\"TODO MAL\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" });\r\n    register({ name: \"image_url\" }, { required: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const idsMaterials = filterMaterialsArray(painting_materials);\r\n    const idsMeasurements = filterMaterialsArray(painting_measurements);\r\n    const idTheme = theme.id;\r\n    setValue(\"materials\", idsMaterials);\r\n    setValue(\"measurements\", idsMeasurements);\r\n    setValue(\"theme_id\", idTheme);\r\n    setValue(\"image_url\", image_url);\r\n    setValue(\"active\", active);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n    setSelectedMaterial(filterMaterialsArray(painting_materials));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (materials) {\r\n      const idsMeasurements = formatArrayMeasurements(\r\n        painting_measurements,\r\n        materials\r\n      );\r\n      setSelectedMeasurement(filterArray(idsMeasurements));\r\n    }\r\n  }, [materials]);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        if (materials) {\r\n          let formatMeasurements = formatArrayMeasurements(\r\n            filterMeasurements(response, selectedMaterial[i]),\r\n            materials\r\n          );\r\n          resultArray = resultArray.concat(formatMeasurements);\r\n        }\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial, materials]);\r\n\r\n  if (!materials || !measurementsOptions) return null;\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                defaultValue={description}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                defaultValue={stock}\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el stock del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n          value={formatArray(painting_materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n          value={formatArrayMeasurements(painting_measurements, materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n          value={{ label: theme.name, value: theme.id }}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            Editar cuadro\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Materials.js",["561"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllMaterials } from '../api/materials';\r\nimport Button from '../components/Button';\r\nimport Search from '../components/Search';\r\nimport TableMaterials from '../components/TableMaterials';\r\nimport { sortBy } from '../utils/utils';\r\n\r\nconst Materials = () => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [filteredMaterials, setFilteredMaterials] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push('/materials/new');\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then(response => {\r\n      const array = response.materials;\r\n      array.sort(sortBy(\"id\"));\r\n      setMaterials(array);\r\n      setFilteredMaterials(array);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(!materials) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const materialsFilter = materials.filter((item) => item.name.match(regexInput));\r\n    setFilteredMaterials(materialsFilter);\r\n  }, [searchedWord]);\r\n\r\n  if(!materials) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Materials</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableMaterials materialsArray={filteredMaterials} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Materials\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Themes.js",["562"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { sortBy } from '../utils/utils';\r\nimport Button from '../components/Button';\r\nimport Search from '../components/Search';\r\nimport { getAllThemes } from '../api/themes';\r\nimport TableThemes from '../components/TableThemes';\r\n\r\nconst Themes = () => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [filteredThemes, setFilteredThemes] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push('/themes/new');\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then(response => {\r\n      const array = response.themes;\r\n      array.sort(sortBy(\"id\"));\r\n      setThemes(array);\r\n      setFilteredThemes(array);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!themes) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const themesFilter = themes.filter((item) => item.name.match(regexInput));\r\n    setFilteredThemes(themesFilter);\r\n  }, [searchedWord]);\r\n\r\n  if(!themes) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Themes</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableThemes themesArray={filteredThemes} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Themes\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Measurements.js",["563"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { findMaterialById, sortBy } from \"../utils/utils\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport TableMeasurements from \"../components/TableMeasurements\";\r\n\r\nconst Measurements = () => {\r\n  const [measurements, setMeasurements] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [filteredMeasurements, setFilteredMeasurements] = useState([]);\r\n  const [materials, setMaterials] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/measurements/new\");\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      const array = response;\r\n      array.sort(sortBy(\"id\"));\r\n      setMeasurements(array);\r\n      setFilteredMeasurements(array);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(response.materials);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!measurements || !materials) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const measurementsFilter = measurements.filter((item) => {\r\n      const material_name = findMaterialById(materials, item.material_id);\r\n      return material_name.match(regexInput);\r\n    });\r\n    setFilteredMeasurements(measurementsFilter);\r\n  }, [searchedWord]);\r\n\r\n  if (!measurements || !materials) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Measurements</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableMeasurements\r\n        measurementsArray={filteredMeasurements}\r\n        materialsArray={materials}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Measurements;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\DeliveryZones.js",["564"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllDeliveryZones } from '../api/delivery_zones';\r\nimport Button from '../components/Button';\r\nimport Search from '../components/Search';\r\nimport TableZones from '../components/TableZones';\r\nimport { sortBy } from '../utils/utils';\r\n\r\nconst DeliveryZones = () => {\r\n  const [zones, setZones] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState('');\r\n  const [filteredZones, setFilteredZones] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push('/delivery-zones/new');\r\n\r\n  useEffect(() => {\r\n    getAllDeliveryZones().then(response => {\r\n      const array = response.delivery_zones;\r\n      array.sort(sortBy(\"id\"));\r\n      setZones(array);\r\n      setFilteredZones(array);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!zones) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const zonesFilter = zones.filter((item) => item.name.match(regexInput));\r\n    setFilteredZones(zonesFilter);\r\n  }, [searchedWord]);\r\n\r\n  if(!zones) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Delivery zones</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableZones zonesArray={filteredZones} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliveryZones\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableMaterials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowMaterials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\MaterialForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\MaterialBody.js",["565","566"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\ThemeForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableThemes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ThemeBody.js",["567","568"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport Upload from \"./Upload\";\r\n\r\nconst ThemeBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id, name, active = true, image_url, textBtn = btnText;\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const theme = JSON.parse(localStorage.getItem('actualTheme'));\r\n  console.log(theme);\r\n\r\n  if(theme){\r\n    id = theme.id;\r\n    name = theme.name;\r\n    active = theme.active;\r\n    image_url = theme.image_url;\r\n    textBtn = \"Actualizar tema\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n  }\r\n\r\n  const onCancel = () => {\r\n    if (url) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(url)\r\n        .delete()\r\n        .then(() => {\r\n          localStorage.removeItem('actualTheme');\r\n          history.push(\"/themes\")\r\n        })\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      localStorage.removeItem('actualTheme');\r\n      history.push(\"/themes\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    register({ name: \"image_url\" }, { required: true });\r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del tema</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrl}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemeBody\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowTheme.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\delivery_zones.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableZones.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowZone.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\ZoneForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ZoneBody.js",["569","570","571"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ZoneBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id, name, active = true, delivery_cost, textBtn = btnText;\r\n\r\n  const zone = JSON.parse(localStorage.getItem('actualZone'));\r\n  console.log(zone);\r\n\r\n  if(zone){\r\n    id = zone.id;\r\n    name = zone.name;\r\n    active = zone.active;\r\n    delivery_cost = zone.delivery_cost;\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n  }\r\n\r\n  const onCancel = () => {\r\n    history.push('/delivery-zones');\r\n  }\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    register({ name: \"delivery_cost\" }, { required: true });\r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre de la zona</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"delivery_cost\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={delivery_cost}\r\n              />\r\n              {errors.delivery_cost && (\r\n                <div className=\"error\">Ingresa el precio</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZoneBody\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableMeasurements.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowMeasurements.js",["572","573","574"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAllMaterials } from '../api/materials';\r\nimport { findMaterialById } from '../utils/utils';\r\nimport Button from './Button';\r\n\r\nconst RowMeasurements = ({ measurement, materialsArray }) => {\r\n  const {id, height, width, price, material_id, active} = measurement;\r\n  const history = useHistory();\r\n\r\n  const onEdit = () => {\r\n    console.log(\"EDITAR MEDIDAS\");\r\n    localStorage.setItem('actualMeasurement', JSON.stringify(measurement));\r\n    history.push('measurements/edit');\r\n  }\r\n\r\n  const onDelete = () => {\r\n    console.log(\"BORRAR MEDIDAS\");\r\n  }\r\n\r\n  const material_name = findMaterialById(materialsArray, material_id);\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        {id}\r\n      </th>\r\n      <td>{`${width} m`}</td>\r\n      <td>{`${height} m`}</td>\r\n      <td>{`$ ${price}`}</td>\r\n      <td>{material_name}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" onClick={onEdit} />\r\n          <Button type=\"delete\" onClick={onDelete} />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default RowMeasurements\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\BodyMeasurement.js",["575","576"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport { findMaterial, formatArray } from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\n\r\nconst BodyMeasurement = ({ btnText }) => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const history = useHistory();\r\n  let id, height, width, active = true, price, material_id, material_name, textBtn = btnText;\r\n\r\n  const measurement = JSON.parse(localStorage.getItem('actualMeasurement'));\r\n  console.log(measurement);\r\n\r\n  if(measurement){\r\n    id = measurement.id;\r\n    height = measurement.height;\r\n    width = measurement.width;\r\n    active = measurement.active;\r\n    price = measurement.price;\r\n    material_id = measurement.material_id;\r\n  };\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n  }\r\n\r\n  const onCancel = () => {\r\n    history.push('/measurements');\r\n    localStorage.clear();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    register({ name: \"height\" }, { required: true });\r\n    register({ name: \"width\" }, { required: true });\r\n    register({ name: \"price\" }, { required: true });\r\n    register({ name: \"material_id\" }, { required: true });\r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  if(!materials) return null;\r\n\r\n  console.log(materials)\r\n  material_name = findMaterial(materials, material_id)\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setValue('material_id', selectedOption.value);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Ancho (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"width\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={width}\r\n              />\r\n              {errors.width && (\r\n                <div className=\"error\">Ingresa el ancho</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Alto (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"height\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={height}\r\n              />\r\n              {errors.height && (\r\n                <div className=\"error\">Ingresa el alto</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"price\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={price}\r\n              />\r\n              {errors.price && (\r\n                <div className=\"error\">Ingresa el precio</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"material_id\"\r\n          label=\"Material\"\r\n          error={errors.material_id}\r\n          errorMessage=\"Selecciona un material\"\r\n          isMulti={false}\r\n          value={{ label: material_name, value: material_id}}\r\n        />\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BodyMeasurement\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\MeasurementForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Login.js",["577"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Auth.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Logout.js",["578"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\index.js",[],["579","580"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\App.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Auth.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\firebase\\firebase.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Login.js",["581"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport firebase from '../firebase/firebase'\r\n\r\nconst Login = () => {\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n    firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n    .then((response) => {\r\n      localStorage.setItem('loginSession', true);\r\n      Swal.fire({\r\n        title: \"¡Bienvenido!\",\r\n        text: 'Has iniciado sesión exitosamente',\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      });\r\n    })\r\n    .catch(() => {\r\n      localStorage.setItem('loginSession', false);\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Credenciales incorrectas\",\r\n        icon: \"error\"\r\n      });\r\n    })\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"page-wrapper p-t-45 p-b-50\">\r\n        <div className=\"wrapper wrapper--w790\">\r\n          <div className=\"card card-5 card-painting\">\r\n            <div className=\"card-heading heading-login\">\r\n              <h2 className=\"title\">Iniciar sesión</h2>\r\n            </div>\r\n            <div className=\"card-body card-body-painting\">\r\n              <form onSubmit={handleSubmit(onSubmitData)}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"name\">Email: </div>\r\n                  <div className=\"value\">\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        className=\"input--style-5\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        ref={register({\r\n                          required: true,\r\n                        })}\r\n                      />\r\n                      {errors.email && (\r\n                        <div className=\"error\">Ingresa el email</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                  <div className=\"name\">Contraseña: </div>\r\n                  <div className=\"value\">\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        className=\"input--style-5\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        ref={register({\r\n                          required: true,\r\n                        })}\r\n                      />\r\n                      {errors.password && (\r\n                        <div className=\"error\">Ingresa la contraseña</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"btn-custom-container\" id=\"container-btn\">\r\n                  <button\r\n                    className=\"btn btn--radius-2\"\r\n                    type=\"submit\"\r\n                    id=\"btn-submit\"\r\n                  >\r\n                    Iniciar sesión\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Home.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\History.js",["582","583","584"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Paintings.js",["585"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\DeliveryZones.js",["586"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Materials.js",["587"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Logout.js",["588"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    firebase.auth().signOut();\r\n    Swal.fire({\r\n      title: \"¡Adiós!\",\r\n      text: 'Has cerrado sesión exitosamente',\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default Logout;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Measurements.js",["589"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\pages\\Themes.js",["590"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\FormPaintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\Details.js",["591","592","593"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\ThemeForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\FormEdit.js",["594"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\MaterialForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\MeasurementForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\containers\\ZoneForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Navbar.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CardUI.js",["595"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Search.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\DatePicker.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableOrders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Button.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableMaterials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TablePaintings.js",["596","597"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableZones.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableMeasurements.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableThemes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CardBody.js",["598","599"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  API_HOST,\r\n  filterArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nconst CardBody = ({ btnText }) => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      console.log(data);\r\n      axios.post(`${API_HOST}/paintings`, data).then((response) => {\r\n        console.log(response);\r\n        Swal.fire({\r\n          title: \"¡Cuadro creado!.\",\r\n          text: \"Has creado un cuadro exitosamente\",\r\n          icon: \"success\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        setTimeout(() => {\r\n          history.push(\"/paintings\");\r\n        }, 1500);\r\n      });\r\n      \r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n      console.log(\"TODO MAL\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" }, { required: true });\r\n    register({ name: \"image_url\" }, { required: true });\r\n    setValue(\"active\", true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        let formatMeasurements = formatArrayMeasurements(\r\n          filterMeasurements(response, selectedMaterial[i]),\r\n          materials\r\n        );\r\n        resultArray = resultArray.concat(formatMeasurements);\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial]);\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el stock del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {btnText}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CardHeading.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\orders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\utils\\utils.js",["600","601"],"import { map } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nexport const cabecerasPaintings = [\r\n  \"Cuadro\",\r\n  \"Nombre\",\r\n  \"Descripcion\",\r\n  \"Existencias\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n  \"\",\r\n];\r\n\r\nexport const cabecerasOrders = [\r\n  \"Id\",\r\n  \"Cliente\",\r\n  \"Fecha de orden\",\r\n  \"Fecha de entrega\",\r\n  \"Zona de entrega\",\r\n  \"Estado\",\r\n  \"Cantidad total\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasMaterials = [\"Id\", \"Nombre\", \"Disponible\", \"Opciones\"];\r\n\r\nexport const cabecerasThemes = [\r\n  \"Id\",\r\n  \"Imagen\",\r\n  \"Nombre\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasZones = [\r\n  \"Id\",\r\n  \"Nombre\",\r\n  \"Precio\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const cabecerasMeasurements = [\r\n  \"Id\",\r\n  \"Ancho\",\r\n  \"Alto\",\r\n  \"Precio\",\r\n  \"Material\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const API_HOST = \"https://api-rest-canvas.herokuapp.com/api\";\r\n\r\nconst characters =\r\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\nexport function generateString(length) {\r\n  let result = \"\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const formatArray = (array) =>\r\n  map(array, (item) => ({ label: item.name, value: item.id }));\r\n\r\nexport const filterArray = (array) => map(array, (item) => item.value);\r\n\r\nexport const filterObject = (obj) => obj.value;\r\n\r\nexport const filterMaterialsArray = (array) => map(array, (item) => item.id);\r\n\r\nexport const dataDelete = {\r\n  title: \"Confirmar para eliminar\",\r\n  subtitle: \"¿Estás seguro de eliminar este cuadro?\",\r\n  btnYesText: \"¡Sí, eliminar!\",\r\n  btnNoText: \"No\",\r\n  btnYesId: \"btn-no\",\r\n  btnNoId: \"btn-yes\",\r\n};\r\n\r\nexport const findStatus = (status) => {\r\n  switch (status) {\r\n    case \"PENDIENTE\":\r\n    case \"EN PROCESO\":\r\n      return \"status pending\";\r\n    case \"CONFIRMADA\":\r\n      return \"status confirmed\";\r\n    case \"ENTREGADA\":\r\n      return \"status delivered\";\r\n    case \"EN CAMINO\":\r\n      return \"status shipped\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const statuses = [\r\n  { value: \"PENDIENTE\", label: \"PENDIENTE\" },\r\n  { value: \"CONFIRMADA\", label: \"CONFIRMADA\" },\r\n  { value: \"EN PROCESO\", label: \"EN PROCESO\" },\r\n  { value: \"EN CAMINO\", label: \"EN CAMINO\" },\r\n  { value: \"ENTREGADA\", label: \"ENTREGADA\" },\r\n];\r\n\r\nexport const sortOption = [\r\n  { value: \"id\", label: \"ID\" },\r\n  { value: \"cliente\", label: \"CLIENTE\" },\r\n  { value: \"estado\", label: \"ESTADO\" },\r\n  { value: \"fecha-orden\", label: \"FECHA DE ORDEN\" },\r\n  { value: \"fecha-entrega\", label: \"FECHA DE ENTREGA\" },\r\n  { value: \"zona-entrega\", label: \"ZONA DE ENTREGA\" },\r\n];\r\n\r\nexport const sortBy = (type) => {\r\n  switch (type) {\r\n    case \"id\":\r\n      return (a, b) => {\r\n        if (a.id < b.id) return -1;\r\n        if (a.id > b.id) return 1;\r\n        return 0;\r\n      };\r\n    case \"cliente\":\r\n      return (a, b) => {\r\n        if (a.customer_name < b.customer_name) return -1;\r\n        if (a.customer_name > b.customer_name) return 1;\r\n        return 0;\r\n      };\r\n    case \"status\":\r\n      return (a, b) => {\r\n        if (a.status < b.status) return -1;\r\n        if (a.status > b.status) return 1;\r\n        return 0;\r\n      };\r\n    case \"zona-entrega\":\r\n      return (a, b) => {\r\n        if (a.delivery_zone.name < b.delivery_zone.name) return -1;\r\n        if (a.delivery_zone.name > b.delivery_zone.name) return 1;\r\n        return 0;\r\n      };\r\n    case \"fecha-orden\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.order_date),\r\n          dateB = new Date(b.order_date);\r\n        return dateA - dateB;\r\n      };\r\n    case \"fecha-entrega\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.delivery_date),\r\n          dateB = new Date(b.delivery_date);\r\n        return dateA - dateB;\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const formatDateSearch = (date) => {\r\n  return moment(date).format(\"DD/MM/YYYY\");\r\n};\r\n\r\nexport const progressOrderBar = (status) => {\r\n  switch (status) {\r\n    case \"EN PROCESO\":\r\n    case \"PENDIENTE\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"CONFIRMADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"EN CAMINO\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"ENTREGADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n        </>\r\n      );\r\n    default:\r\n      return (\r\n        <>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport const formatFloat = (number) => parseFloat(number).toFixed(2);\r\n\r\nexport const filterMeasurements = (collection, idMaterial) => {\r\n  return collection.filter((item) => item.material_id == idMaterial);\r\n};\r\n\r\nexport const formatArrayMeasurements = (array, materials) => {\r\n  return map(array, (item) => {\r\n    const materialName = findMaterial(materials, item.material_id);\r\n    return {\r\n      label: `${item.width} x ${item.height} cm -  ${materialName}`,\r\n      value: item.id,\r\n    };\r\n  });\r\n};\r\nexport const findMaterial = (materials, idMaterial) =>\r\n  materials.filter((item) => item.value == idMaterial)[0].label;\r\n\r\nexport const findMaterialById = (materials, idMaterial) =>\r\n  materials.filter((item) => item.id === idMaterial)[0].name;\r\n\r\nexport const onValidatePairs = (\r\n  materialsSelected,\r\n  measurementsSelected,\r\n  measurements\r\n) => {\r\n  const materialsSet = new Set();\r\n  let flag = true;\r\n  measurements.forEach((item) => {\r\n    if (\r\n      measurementsSelected.includes(item.id) &&\r\n      materialsSelected.includes(item.material_id)\r\n    ) {\r\n      materialsSet.add(item.material_id);\r\n    } else if (\r\n      measurementsSelected.includes(item.id) &&\r\n      !materialsSelected.includes(item.material_id)\r\n    ) {\r\n      flag = false;\r\n    }\r\n  });\r\n  if (flag && materialsSet.size !== materialsSelected.length) return false;\r\n  return flag;\r\n};\r\n\r\nexport const onDeleteItems = (initialArray, finalArray) => {\r\n  let response = [];\r\n  initialArray.forEach((item) => {\r\n    if (!finalArray.includes(item)) {\r\n      response.push(item);\r\n    }\r\n  });\r\n  return response;\r\n};\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\paintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\delivery_zones.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\materials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\measurements.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\HeaderOrderDetails.js",["602","603","604","605"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\api\\themes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\CustomerInfo.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\TableDetails.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\MaterialBody.js",["606","607"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"./../utils/utils\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst MaterialBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id,\r\n    name,\r\n    active = true,\r\n    textBtn = btnText;\r\n  const material = JSON.parse(localStorage.getItem(\"actualMaterial\"));\r\n\r\n  if (material) {\r\n    id = material.id;\r\n    name = material.name;\r\n    active = material.active;\r\n    textBtn = \"Actualizar material\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n    if (material) {\r\n      axios\r\n        .put(`${API_HOST}/materials/${id}`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Material actualizado!\",\r\n            text: \"Has actualizado un material exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push('/materials')\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/materials`,  data )\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Material creado!\",\r\n            text: \"Has creado un material exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push('/materials')\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    localStorage.removeItem(\"actualMaterial\");\r\n    history.push(\"/materials\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else {\r\n      register({ name: \"active\" }, { required: true });\r\n      setValue(\"active\", true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del material</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\EditBody.js",["608","609","610","611"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  API_HOST,\r\n  filterArray,\r\n  filterMaterialsArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onDeleteItems,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\n\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nconst EditBody = ({ painting }) => {\r\n  const {\r\n    materials: painting_materials,\r\n    name,\r\n    description,\r\n    stock,\r\n    active,\r\n    image_url,\r\n    theme,\r\n    id,\r\n    measurements: painting_measurements,\r\n  } = painting;\r\n\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [initialMaterials, setInitialMaterials] = useState([]);\r\n  const [initialMeasurements, setInitialMeasurements] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" });\r\n    register({ name: \"image_url\" }, { required: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const idsMaterials = filterMaterialsArray(painting_materials);\r\n    const idsMeasurements = filterMaterialsArray(painting_measurements);\r\n    setInitialMaterials(idsMaterials);\r\n    setInitialMeasurements(idsMeasurements);\r\n    const idTheme = theme.id;\r\n    setValue(\"materials\", idsMaterials);\r\n    setValue(\"measurements\", idsMeasurements);\r\n    setValue(\"theme_id\", idTheme);\r\n    setValue(\"image_url\", image_url);\r\n    setValue(\"active\", active);\r\n  }, []);\r\n\r\n  const onSubmitData = (data) => {\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      console.log(data);\r\n      const deleteMaterials = onDeleteItems(initialMaterials, data.materials);\r\n      const deleteMeasurements = onDeleteItems(\r\n        initialMeasurements,\r\n        data.measurements\r\n      );\r\n      console.log(deleteMaterials);\r\n      console.log(deleteMeasurements);\r\n      const bodyMaterials = {\r\n        materials: deleteMaterials,\r\n      };\r\n      const bodyMeasurements = {\r\n        measurements: deleteMeasurements,\r\n      };\r\n\r\n      axios\r\n        .put(`${API_HOST}/paintings/${id}`, data)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          return axios.delete(`${API_HOST}/paintings/materials/${id}`, {\r\n            data: bodyMaterials,\r\n          });\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          return axios.delete(`${API_HOST}/paintings/measurements/${id}`, {\r\n            data: bodyMeasurements,\r\n          });\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          Swal.fire({\r\n            title: \"¡Cuadro actualizado!\",\r\n            text: \"Has actualizado un cuadro exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          setTimeout(() => {\r\n            history.push(\"/paintings\");\r\n          }, 1500);\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n      console.log(\"TODO MAL\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n    setSelectedMaterial(filterMaterialsArray(painting_materials));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (materials) {\r\n      const idsMeasurements = formatArrayMeasurements(\r\n        painting_measurements,\r\n        materials\r\n      );\r\n      setSelectedMeasurement(filterArray(idsMeasurements));\r\n    }\r\n  }, [materials]);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        if (materials) {\r\n          let formatMeasurements = formatArrayMeasurements(\r\n            filterMeasurements(response, selectedMaterial[i]),\r\n            materials\r\n          );\r\n          resultArray = resultArray.concat(formatMeasurements);\r\n        }\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial, materials]);\r\n\r\n  if (!materials || !measurementsOptions) return null;\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                defaultValue={description}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                defaultValue={stock}\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el stock del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n          value={formatArray(painting_materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n          value={formatArrayMeasurements(painting_measurements, materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n          value={{ label: theme.name, value: theme.id }}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            Editar cuadro\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\SummaryOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\BodyMeasurement.js",["612"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport { API_HOST, findMaterial, formatArray } from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BodyMeasurement = ({ btnText }) => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const history = useHistory();\r\n  let id, height, width, active = true, price, material_id, material_name, textBtn = btnText;\r\n\r\n  const measurement = JSON.parse(localStorage.getItem('actualMeasurement'));\r\n\r\n  if(measurement){\r\n    id = measurement.id;\r\n    height = measurement.height;\r\n    width = measurement.width;\r\n    active = measurement.active;\r\n    price = measurement.price;\r\n    material_id = measurement.material_id;\r\n  };\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n    if (measurement) {\r\n      axios\r\n        .put(`${API_HOST}/measurements/${id}`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Medidas actualizada!\",\r\n            text: \"Has actualizado las medidas exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push('/measurements')\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/measurements`,  data )\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Medidas creado!\",\r\n            text: \"Has creado las medidas exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push('/measurements')\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  const onCancel = () => {\r\n    history.push('/measurements');\r\n    localStorage.clear();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    register({ name: \"height\" }, { required: true });\r\n    register({ name: \"width\" }, { required: true });\r\n    register({ name: \"price\" }, { required: true });\r\n    if(material_id){\r\n      register({ name: \"material_id\" }, { required: true });\r\n      setValue('material_id', material_id);\r\n    }else{\r\n      register({ name: \"material_id\" }, { required: true });\r\n    }\r\n    \r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  if(!materials) return null;\r\n\r\n  console.log(materials)\r\n  if(material_id){\r\n    material_name = findMaterial(materials, material_id)\r\n  }\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setValue('material_id', selectedOption.value);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Ancho (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"width\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={width}\r\n              />\r\n              {errors.width && (\r\n                <div className=\"error\">Ingresa el ancho</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Alto (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"height\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={height}\r\n              />\r\n              {errors.height && (\r\n                <div className=\"error\">Ingresa el alto</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"price\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={price}\r\n              />\r\n              {errors.price && (\r\n                <div className=\"error\">Ingresa el precio</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"material_id\"\r\n          label=\"Material\"\r\n          error={errors.material_id}\r\n          errorMessage=\"Selecciona un material\"\r\n          isMulti={false}\r\n          value={material_id && { label: material_name, value: material_id}}\r\n        />\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BodyMeasurement\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ThemeBody.js",["613"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport Upload from \"./Upload\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"./../utils/utils\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ThemeBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id,\r\n    name,\r\n    active = true,\r\n    image_url,\r\n    textBtn = btnText;\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const theme = JSON.parse(localStorage.getItem(\"actualTheme\"));\r\n  console.log(theme);\r\n\r\n  if (theme) {\r\n    id = theme.id;\r\n    name = theme.name;\r\n    active = theme.active;\r\n    image_url = theme.image_url;\r\n    textBtn = \"Actualizar tema\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n    if (theme) {\r\n      storage.refFromURL(image_url).delete();\r\n      axios\r\n        .put(`${API_HOST}/themes/${id}`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          storage\r\n            .refFromURL(image_url)\r\n            .delete()\r\n            .then(() => console.log(\"Done!\"))\r\n            .catch(() => console.log(\"Error\"));\r\n          Swal.fire({\r\n            title: \"¡Tema actualizado!\",\r\n            text: \"Has actualizado un tema exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push(\"/themes\");\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/themes`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Tema creado!\",\r\n            text: \"Has creado un tema exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push(\"/themes\");\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (url) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(url)\r\n        .delete()\r\n        .then(() => {\r\n          localStorage.removeItem(\"actualTheme\");\r\n          history.push(\"/themes\");\r\n        })\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      localStorage.removeItem(\"actualTheme\");\r\n      history.push(\"/themes\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    if (image_url) {\r\n      register({ name: \"image_url\" });\r\n      setValue(\"image_url\", image_url);\r\n    } else {\r\n      register({ name: \"image_url\" }, { required: true });\r\n    }\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else register({ name: \"active\" }, { required: true });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del tema</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrl}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\SidebarData.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ZoneBody.js",["614","615"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"../utils/utils\";\r\n\r\nconst ZoneBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id, name, active = true, delivery_cost, textBtn = btnText;\r\n\r\n  const zone = JSON.parse(localStorage.getItem('actualZone'));\r\n\r\n  if(zone){\r\n    id = zone.id;\r\n    name = zone.name;\r\n    active = zone.active;\r\n    delivery_cost = zone.delivery_cost;\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    console.log(data);\r\n    if (zone) {\r\n      axios\r\n        .put(`${API_HOST}/delivery-zones/${id}`, data)\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Zona de entrega actualizada!\",\r\n            text: \"Has actualizado una zona de entrega exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push('/delivery-zones')\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/delivery-zones`,  data )\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          Swal.fire({\r\n            title: \"¡Zona de entrega creado!\",\r\n            text: \"Has creado una zona de entrega exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1400,\r\n          });\r\n          setTimeout(() => {\r\n            history.push('/delivery-zones')\r\n          }, 1500);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  const onCancel = () => {\r\n    history.push('/delivery-zones');\r\n    localStorage.clear();\r\n  }\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    register({ name: \"delivery_cost\" }, { required: true });\r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre de la zona</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"delivery_cost\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={delivery_cost}\r\n              />\r\n              {errors.delivery_cost && (\r\n                <div className=\"error\">Ingresa el precio</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZoneBody\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowOrders.js",["616"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ConfirmModal.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\ModalOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowMaterials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowPaintings.js",["617","618","619"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { BiWindows } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_HOST } from \"../utils/utils\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nconst RowPaintings = ({ painting }) => {\r\n  const { id, image_url, name, description, measurements, price, stock, active } = painting;\r\n\r\n  let history = useHistory();\r\n\r\n  const onEdit = () => {\r\n    history.push(`/paintings/edit/${id}`);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    axios.delete(`${API_HOST}/paintings/${id}`)\r\n    .then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      Swal.fire({\r\n        title: \"¡Cuadro eliminado!.\",\r\n        text: \"'Has eliminado correctamente el cuadro'\",\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      setTimeout(() => {\r\n       window.location.reload(false);\r\n      }, 1500);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        <img src={image_url} alt={`Cuadro-${id}`} className=\"img-display\" />\r\n      </th>\r\n      <td>{name}</td>\r\n      <td className=\"description-cell col-5\">{description}</td>\r\n      <td>{stock}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" onClick={onEdit} />\r\n          <Button type=\"delete\" onClick={onDelete} />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowPaintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowZone.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowMeasurements.js",["620","621","622"],"import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { getAllMaterials } from '../api/materials';\r\nimport { API_HOST, findMaterialById } from '../utils/utils';\r\nimport Button from './Button';\r\n\r\nconst RowMeasurements = ({ measurement, materialsArray }) => {\r\n  const {id, height, width, price, material_id, active} = measurement;\r\n  const history = useHistory();\r\n\r\n  const onEdit = () => {\r\n    localStorage.setItem('actualMeasurement', JSON.stringify(measurement));\r\n    history.push('/measurements/edit');\r\n  }\r\n\r\n  const onDelete = () => {\r\n    axios.delete(`${API_HOST}/measurements/${id}`)\r\n    .then(res => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      Swal.fire({\r\n        title: \"¡Medidas borradas!\",\r\n        text: \"Has borrado las medidas exitosamente\",\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1400,\r\n      });\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, 1500);\r\n    })\r\n  }\r\n\r\n  const material_name = findMaterialById(materialsArray, material_id);\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        {id}\r\n      </th>\r\n      <td>{`${width} m`}</td>\r\n      <td>{`${height} m`}</td>\r\n      <td>{`$ ${price}`}</td>\r\n      <td>{material_name}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" onClick={onEdit} />\r\n          <Button type=\"delete\" onClick={onDelete} />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default RowMeasurements\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowTheme.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\SelectForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\Upload.js",["623","624"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { generateString } from \"../utils/utils\";\r\n\r\nconst Upload = ({ setValue, setUrlImg, error, image_url }) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [lastImage, setLastImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"No URL\");\r\n  const [image, setImage] = useState({ name: \"No Image\" });\r\n\r\n  useEffect(() => {\r\n    if(image_url){\r\n      setUrl(image_url);\r\n      setValue('image_url', image_url);\r\n      setReady(true);\r\n      setProgress(100);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (image.name !== \"No Image\") {\r\n      if (lastImage !== \"\") {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(lastImage)\r\n          .delete()\r\n          .then(() => console.log(\"Done!\"))\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n      let splitImage = image.name.split(\".\");\r\n      let newName = generateString(30) + \".\" + splitImage[1];\r\n      handleUpload(newName);\r\n    }\r\n  }, [image]);\r\n\r\n  const handleUpload = (newName) => {\r\n    console.log(newName);\r\n    const uploadTask = storage.ref(`/${newName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(newName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setValue('image_url', url);\r\n            setUrlImg(newName);\r\n          });\r\n        setLastImage(newName);\r\n        setReady(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ready ? (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"img-upload\"\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              imageResolution: \"from-image\",\r\n            }}\r\n            type=\"button\"\r\n            id=\"btn-upload\"\r\n          >\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"img-add\" id=\"btn-add\" type=\"button\">\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      )}\r\n      <ProgressBar\r\n        completed={progress}\r\n        width=\"50%\"\r\n        bgcolor=\"#21AB91\"\r\n        margin=\"20px auto 10px auto\"\r\n        labelAlignment=\"right\"\r\n      />\r\n      {error && <div className=\"error-img\">Seleccione una imagen</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-app-canvas\\src\\components\\RowDetails.js",["625"],["626","627"],{"ruleId":"628","replacedBy":"629"},{"ruleId":"630","replacedBy":"631"},{"ruleId":"632","severity":1,"message":"633","line":45,"column":6,"nodeType":"634","endLine":45,"endColumn":26,"suggestions":"635"},{"ruleId":"632","severity":1,"message":"633","line":60,"column":6,"nodeType":"634","endLine":60,"endColumn":20,"suggestions":"636"},{"ruleId":"632","severity":1,"message":"633","line":68,"column":6,"nodeType":"634","endLine":68,"endColumn":22,"suggestions":"637"},{"ruleId":"632","severity":1,"message":"638","line":27,"column":6,"nodeType":"634","endLine":27,"endColumn":18,"suggestions":"639"},{"ruleId":"640","severity":1,"message":"641","line":2,"column":17,"nodeType":"642","messageId":"643","endLine":2,"endColumn":26},{"ruleId":"640","severity":1,"message":"644","line":2,"column":28,"nodeType":"642","messageId":"643","endLine":2,"endColumn":36},{"ruleId":"645","severity":1,"message":"646","line":229,"column":55,"nodeType":"647","messageId":"648","endLine":229,"endColumn":57},{"ruleId":"645","severity":1,"message":"646","line":242,"column":41,"nodeType":"647","messageId":"648","endLine":242,"endColumn":43},{"ruleId":"640","severity":1,"message":"649","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":13},{"ruleId":"640","severity":1,"message":"650","line":5,"column":10,"nodeType":"642","messageId":"643","endLine":5,"endColumn":18},{"ruleId":"640","severity":1,"message":"651","line":10,"column":45,"nodeType":"642","messageId":"643","endLine":10,"endColumn":57},{"ruleId":"640","severity":1,"message":"652","line":10,"column":59,"nodeType":"642","messageId":"643","endLine":10,"endColumn":64},{"ruleId":"640","severity":1,"message":"653","line":4,"column":10,"nodeType":"642","messageId":"643","endLine":4,"endColumn":24},{"ruleId":"632","severity":1,"message":"654","line":72,"column":6,"nodeType":"634","endLine":72,"endColumn":8,"suggestions":"655"},{"ruleId":"632","severity":1,"message":"656","line":99,"column":6,"nodeType":"634","endLine":99,"endColumn":24,"suggestions":"657"},{"ruleId":"632","severity":1,"message":"658","line":19,"column":6,"nodeType":"634","endLine":19,"endColumn":8,"suggestions":"659"},{"ruleId":"632","severity":1,"message":"660","line":35,"column":6,"nodeType":"634","endLine":35,"endColumn":13,"suggestions":"661"},{"ruleId":"662","severity":1,"message":"663","line":17,"column":9,"nodeType":"664","endLine":17,"endColumn":78},{"ruleId":"632","severity":1,"message":"665","line":20,"column":6,"nodeType":"634","endLine":20,"endColumn":8,"suggestions":"666"},{"ruleId":"632","severity":1,"message":"665","line":24,"column":6,"nodeType":"634","endLine":24,"endColumn":8,"suggestions":"667"},{"ruleId":"640","severity":1,"message":"668","line":29,"column":11,"nodeType":"642","messageId":"643","endLine":29,"endColumn":17},{"ruleId":"669","severity":1,"message":"670","line":36,"column":11,"nodeType":"664","endLine":36,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":47,"column":11,"nodeType":"664","endLine":47,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":58,"column":11,"nodeType":"664","endLine":58,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":68,"column":11,"nodeType":"664","endLine":68,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":15,"column":11,"nodeType":"664","endLine":15,"endColumn":71},{"ruleId":"632","severity":1,"message":"665","line":15,"column":6,"nodeType":"634","endLine":15,"endColumn":8,"suggestions":"671"},{"ruleId":"632","severity":1,"message":"672","line":86,"column":6,"nodeType":"634","endLine":86,"endColumn":8,"suggestions":"673"},{"ruleId":"632","severity":1,"message":"674","line":97,"column":6,"nodeType":"634","endLine":97,"endColumn":8,"suggestions":"675"},{"ruleId":"632","severity":1,"message":"676","line":110,"column":6,"nodeType":"634","endLine":110,"endColumn":8,"suggestions":"677"},{"ruleId":"632","severity":1,"message":"678","line":120,"column":6,"nodeType":"634","endLine":120,"endColumn":17,"suggestions":"679"},{"ruleId":"632","severity":1,"message":"656","line":31,"column":6,"nodeType":"634","endLine":31,"endColumn":20,"suggestions":"680"},{"ruleId":"632","severity":1,"message":"681","line":31,"column":6,"nodeType":"634","endLine":31,"endColumn":20,"suggestions":"682"},{"ruleId":"632","severity":1,"message":"683","line":42,"column":6,"nodeType":"634","endLine":42,"endColumn":20,"suggestions":"684"},{"ruleId":"632","severity":1,"message":"685","line":31,"column":6,"nodeType":"634","endLine":31,"endColumn":20,"suggestions":"686"},{"ruleId":"640","severity":1,"message":"644","line":1,"column":17,"nodeType":"642","messageId":"643","endLine":1,"endColumn":25},{"ruleId":"632","severity":1,"message":"687","line":95,"column":6,"nodeType":"634","endLine":95,"endColumn":8,"suggestions":"688"},{"ruleId":"640","severity":1,"message":"689","line":16,"column":5,"nodeType":"642","messageId":"643","endLine":16,"endColumn":7},{"ruleId":"632","severity":1,"message":"687","line":54,"column":6,"nodeType":"634","endLine":54,"endColumn":8,"suggestions":"690"},{"ruleId":"640","severity":1,"message":"644","line":1,"column":17,"nodeType":"642","messageId":"643","endLine":1,"endColumn":25},{"ruleId":"640","severity":1,"message":"689","line":13,"column":5,"nodeType":"642","messageId":"643","endLine":13,"endColumn":7},{"ruleId":"632","severity":1,"message":"687","line":37,"column":6,"nodeType":"634","endLine":37,"endColumn":8,"suggestions":"691"},{"ruleId":"640","severity":1,"message":"644","line":1,"column":16,"nodeType":"642","messageId":"643","endLine":1,"endColumn":24},{"ruleId":"640","severity":1,"message":"641","line":1,"column":26,"nodeType":"642","messageId":"643","endLine":1,"endColumn":35},{"ruleId":"640","severity":1,"message":"692","line":3,"column":10,"nodeType":"642","messageId":"643","endLine":3,"endColumn":25},{"ruleId":"640","severity":1,"message":"689","line":17,"column":5,"nodeType":"642","messageId":"643","endLine":17,"endColumn":7},{"ruleId":"632","severity":1,"message":"687","line":52,"column":6,"nodeType":"634","endLine":52,"endColumn":8,"suggestions":"693"},{"ruleId":"640","severity":1,"message":"694","line":7,"column":43,"nodeType":"642","messageId":"643","endLine":7,"endColumn":51},{"ruleId":"632","severity":1,"message":"695","line":18,"column":6,"nodeType":"634","endLine":18,"endColumn":8,"suggestions":"696"},{"ruleId":"628","replacedBy":"697"},{"ruleId":"630","replacedBy":"698"},{"ruleId":"640","severity":1,"message":"694","line":7,"column":43,"nodeType":"642","messageId":"643","endLine":7,"endColumn":51},{"ruleId":"632","severity":1,"message":"633","line":45,"column":6,"nodeType":"634","endLine":45,"endColumn":26,"suggestions":"699"},{"ruleId":"632","severity":1,"message":"633","line":60,"column":6,"nodeType":"634","endLine":60,"endColumn":20,"suggestions":"700"},{"ruleId":"632","severity":1,"message":"633","line":68,"column":6,"nodeType":"634","endLine":68,"endColumn":22,"suggestions":"701"},{"ruleId":"632","severity":1,"message":"638","line":27,"column":6,"nodeType":"634","endLine":27,"endColumn":18,"suggestions":"702"},{"ruleId":"632","severity":1,"message":"685","line":31,"column":6,"nodeType":"634","endLine":31,"endColumn":20,"suggestions":"703"},{"ruleId":"632","severity":1,"message":"656","line":31,"column":6,"nodeType":"634","endLine":31,"endColumn":20,"suggestions":"704"},{"ruleId":"632","severity":1,"message":"695","line":19,"column":6,"nodeType":"634","endLine":19,"endColumn":8,"suggestions":"705"},{"ruleId":"632","severity":1,"message":"683","line":42,"column":6,"nodeType":"634","endLine":42,"endColumn":20,"suggestions":"706"},{"ruleId":"632","severity":1,"message":"681","line":31,"column":6,"nodeType":"634","endLine":31,"endColumn":20,"suggestions":"707"},{"ruleId":"632","severity":1,"message":"665","line":20,"column":6,"nodeType":"634","endLine":20,"endColumn":8,"suggestions":"708"},{"ruleId":"632","severity":1,"message":"665","line":24,"column":6,"nodeType":"634","endLine":24,"endColumn":8,"suggestions":"709"},{"ruleId":"640","severity":1,"message":"668","line":29,"column":11,"nodeType":"642","messageId":"643","endLine":29,"endColumn":17},{"ruleId":"632","severity":1,"message":"665","line":15,"column":6,"nodeType":"634","endLine":15,"endColumn":8,"suggestions":"710"},{"ruleId":"662","severity":1,"message":"663","line":17,"column":9,"nodeType":"664","endLine":17,"endColumn":78},{"ruleId":"640","severity":1,"message":"641","line":2,"column":17,"nodeType":"642","messageId":"643","endLine":2,"endColumn":26},{"ruleId":"640","severity":1,"message":"644","line":2,"column":28,"nodeType":"642","messageId":"643","endLine":2,"endColumn":36},{"ruleId":"632","severity":1,"message":"654","line":77,"column":6,"nodeType":"634","endLine":77,"endColumn":8,"suggestions":"711"},{"ruleId":"632","severity":1,"message":"656","line":104,"column":6,"nodeType":"634","endLine":104,"endColumn":24,"suggestions":"712"},{"ruleId":"645","severity":1,"message":"646","line":224,"column":55,"nodeType":"647","messageId":"648","endLine":224,"endColumn":57},{"ruleId":"645","severity":1,"message":"646","line":237,"column":41,"nodeType":"647","messageId":"648","endLine":237,"endColumn":43},{"ruleId":"669","severity":1,"message":"670","line":36,"column":11,"nodeType":"664","endLine":36,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":47,"column":11,"nodeType":"664","endLine":47,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":58,"column":11,"nodeType":"664","endLine":58,"endColumn":47},{"ruleId":"669","severity":1,"message":"670","line":68,"column":11,"nodeType":"664","endLine":68,"endColumn":47},{"ruleId":"640","severity":1,"message":"644","line":1,"column":17,"nodeType":"642","messageId":"643","endLine":1,"endColumn":25},{"ruleId":"632","severity":1,"message":"687","line":94,"column":6,"nodeType":"634","endLine":94,"endColumn":8,"suggestions":"713"},{"ruleId":"632","severity":1,"message":"672","line":58,"column":6,"nodeType":"634","endLine":58,"endColumn":8,"suggestions":"714"},{"ruleId":"632","severity":1,"message":"674","line":71,"column":6,"nodeType":"634","endLine":71,"endColumn":8,"suggestions":"715"},{"ruleId":"632","severity":1,"message":"676","line":145,"column":6,"nodeType":"634","endLine":145,"endColumn":8,"suggestions":"716"},{"ruleId":"632","severity":1,"message":"678","line":155,"column":6,"nodeType":"634","endLine":155,"endColumn":17,"suggestions":"717"},{"ruleId":"632","severity":1,"message":"718","line":110,"column":6,"nodeType":"634","endLine":110,"endColumn":8,"suggestions":"719"},{"ruleId":"632","severity":1,"message":"720","line":122,"column":6,"nodeType":"634","endLine":122,"endColumn":8,"suggestions":"721"},{"ruleId":"640","severity":1,"message":"644","line":1,"column":17,"nodeType":"642","messageId":"643","endLine":1,"endColumn":25},{"ruleId":"632","severity":1,"message":"687","line":91,"column":6,"nodeType":"634","endLine":91,"endColumn":8,"suggestions":"722"},{"ruleId":"640","severity":1,"message":"653","line":4,"column":10,"nodeType":"642","messageId":"643","endLine":4,"endColumn":24},{"ruleId":"640","severity":1,"message":"723","line":3,"column":10,"nodeType":"642","messageId":"643","endLine":3,"endColumn":19},{"ruleId":"640","severity":1,"message":"651","line":11,"column":45,"nodeType":"642","messageId":"643","endLine":11,"endColumn":57},{"ruleId":"640","severity":1,"message":"652","line":11,"column":59,"nodeType":"642","messageId":"643","endLine":11,"endColumn":64},{"ruleId":"640","severity":1,"message":"644","line":2,"column":16,"nodeType":"642","messageId":"643","endLine":2,"endColumn":24},{"ruleId":"640","severity":1,"message":"641","line":2,"column":26,"nodeType":"642","messageId":"643","endLine":2,"endColumn":35},{"ruleId":"640","severity":1,"message":"692","line":5,"column":10,"nodeType":"642","messageId":"643","endLine":5,"endColumn":25},{"ruleId":"632","severity":1,"message":"724","line":20,"column":6,"nodeType":"634","endLine":20,"endColumn":8,"suggestions":"725"},{"ruleId":"632","severity":1,"message":"660","line":36,"column":6,"nodeType":"634","endLine":36,"endColumn":13,"suggestions":"726"},{"ruleId":"669","severity":1,"message":"670","line":15,"column":11,"nodeType":"664","endLine":15,"endColumn":71},{"ruleId":"628","replacedBy":"727"},{"ruleId":"630","replacedBy":"728"},"no-native-reassign",["729"],"no-negated-in-lhs",["730"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ordersArray'. Either include it or remove the dependency array.","ArrayExpression",["731"],["732"],["733"],"React Hook useEffect has a missing dependency: 'paintingsArray'. Either include it or remove the dependency array.",["734"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'API_HOST' is defined but never used.","'measurements' is assigned a value but never used.","'price' is assigned a value but never used.","'getOrderDetail' is defined but never used.","React Hook useEffect has missing dependencies: 'register' and 'setValue'. Either include them or remove the dependency array.",["735"],"React Hook useEffect has a missing dependency: 'materials'. Either include it or remove the dependency array.",["736"],"React Hook useEffect has a missing dependency: 'image_url'. Either include it or remove the dependency array. If 'setUrl' needs the current value of 'image_url', you can also switch to useReducer instead of useState and read 'image_url' in the reducer.",["737"],"React Hook useEffect has missing dependencies: 'handleUpload' and 'lastImage'. Either include them or remove the dependency array.",["738"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["739"],["740"],"'status' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["741"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["742"],"React Hook useEffect has missing dependencies: 'active', 'image_url', 'painting_materials', 'painting_measurements', 'setValue', and 'theme.id'. Either include them or remove the dependency array.",["743"],"React Hook useEffect has a missing dependency: 'painting_materials'. Either include it or remove the dependency array.",["744"],"React Hook useEffect has a missing dependency: 'painting_measurements'. Either include it or remove the dependency array.",["745"],["746"],"React Hook useEffect has a missing dependency: 'themes'. Either include it or remove the dependency array.",["747"],"React Hook useEffect has missing dependencies: 'materials' and 'measurements'. Either include them or remove the dependency array.",["748"],"React Hook useEffect has a missing dependency: 'zones'. Either include it or remove the dependency array.",["749"],"React Hook useEffect has missing dependencies: 'active', 'register', and 'setValue'. Either include them or remove the dependency array.",["750"],"'id' is assigned a value but never used.",["751"],["752"],"'getAllMaterials' is defined but never used.",["753"],"'setValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["754"],["729"],["730"],["755"],["756"],["757"],["758"],["759"],["760"],["761"],["762"],["763"],["764"],["765"],["766"],["767"],["768"],["769"],["770"],["771"],["772"],["773"],"React Hook useEffect has missing dependencies: 'active', 'material_id', 'register', and 'setValue'. Either include them or remove the dependency array.",["774"],"React Hook useEffect has missing dependencies: 'active', 'image_url', 'register', and 'setValue'. Either include them or remove the dependency array.",["775"],["776"],"'BiWindows' is defined but never used.","React Hook useEffect has missing dependencies: 'image_url' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["777"],["778"],["729"],["730"],"no-global-assign","no-unsafe-negation",{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"795","fix":"797"},{"desc":"795","fix":"798"},{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"815","fix":"817"},{"desc":"815","fix":"818"},{"desc":"815","fix":"819"},{"desc":"820","fix":"821"},{"desc":"779","fix":"822"},{"desc":"781","fix":"823"},{"desc":"783","fix":"824"},{"desc":"785","fix":"825"},{"desc":"813","fix":"826"},{"desc":"807","fix":"827"},{"desc":"820","fix":"828"},{"desc":"811","fix":"829"},{"desc":"809","fix":"830"},{"desc":"795","fix":"831"},{"desc":"795","fix":"832"},{"desc":"795","fix":"833"},{"desc":"787","fix":"834"},{"desc":"789","fix":"835"},{"desc":"815","fix":"836"},{"desc":"799","fix":"837"},{"desc":"801","fix":"838"},{"desc":"803","fix":"839"},{"desc":"805","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"815","fix":"845"},{"desc":"846","fix":"847"},{"desc":"793","fix":"848"},"Update the dependencies array to be: [startDate, endDate, ordersArray]",{"range":"849","text":"850"},"Update the dependencies array to be: [ordersArray, searchedWord]",{"range":"851","text":"852"},"Update the dependencies array to be: [ordersArray, selectedOption]",{"range":"853","text":"854"},"Update the dependencies array to be: [filterWord, paintingsArray]",{"range":"855","text":"856"},"Update the dependencies array to be: [register, setValue]",{"range":"857","text":"858"},"Update the dependencies array to be: [materials, selectedMaterial]",{"range":"859","text":"860"},"Update the dependencies array to be: [image_url]",{"range":"861","text":"862"},"Update the dependencies array to be: [handleUpload, image, lastImage]",{"range":"863","text":"864"},"Update the dependencies array to be: [id]",{"range":"865","text":"866"},{"range":"867","text":"866"},{"range":"868","text":"866"},"Update the dependencies array to be: [register]",{"range":"869","text":"870"},"Update the dependencies array to be: [active, image_url, painting_materials, painting_measurements, setValue, theme.id]",{"range":"871","text":"872"},"Update the dependencies array to be: [painting_materials]",{"range":"873","text":"874"},"Update the dependencies array to be: [materials, painting_measurements]",{"range":"875","text":"876"},"Update the dependencies array to be: [materials, searchedWord]",{"range":"877","text":"878"},"Update the dependencies array to be: [searchedWord, themes]",{"range":"879","text":"880"},"Update the dependencies array to be: [materials, measurements, searchedWord]",{"range":"881","text":"882"},"Update the dependencies array to be: [searchedWord, zones]",{"range":"883","text":"884"},"Update the dependencies array to be: [active, register, setValue]",{"range":"885","text":"886"},{"range":"887","text":"886"},{"range":"888","text":"886"},{"range":"889","text":"886"},"Update the dependencies array to be: [history]",{"range":"890","text":"891"},{"range":"892","text":"850"},{"range":"893","text":"852"},{"range":"894","text":"854"},{"range":"895","text":"856"},{"range":"896","text":"884"},{"range":"897","text":"878"},{"range":"898","text":"891"},{"range":"899","text":"882"},{"range":"900","text":"880"},{"range":"901","text":"866"},{"range":"902","text":"866"},{"range":"903","text":"866"},{"range":"904","text":"858"},{"range":"905","text":"860"},{"range":"906","text":"886"},{"range":"907","text":"870"},{"range":"908","text":"872"},{"range":"909","text":"874"},{"range":"910","text":"876"},"Update the dependencies array to be: [active, material_id, register, setValue]",{"range":"911","text":"912"},"Update the dependencies array to be: [active, image_url, register, setValue]",{"range":"913","text":"914"},{"range":"915","text":"886"},"Update the dependencies array to be: [image_url, setValue]",{"range":"916","text":"917"},{"range":"918","text":"864"},[1396,1416],"[startDate, endDate, ordersArray]",[1930,1944],"[ordersArray, searchedWord]",[2135,2151],"[ordersArray, selectedOption]",[942,954],"[filterWord, paintingsArray]",[2263,2265],"[register, setValue]",[3018,3036],"[materials, selectedMaterial]",[655,657],"[image_url]",[1093,1100],"[handleUpload, image, lastImage]",[834,836],"[id]",[930,932],[482,484],[2523,2525],"[register]",[2928,2930],"[active, image_url, painting_materials, painting_measurements, setValue, theme.id]",[3269,3271],"[painting_materials]",[3510,3521],"[materials, painting_measurements]",[1109,1123],"[materials, searchedWord]",[1053,1067],"[searchedWord, themes]",[1531,1545],"[materials, measurements, searchedWord]",[1085,1099],"[searchedWord, zones]",[2616,2618],"[active, register, setValue]",[1472,1474],[1005,1007],[1641,1643],[486,488],"[history]",[1396,1416],[1930,1944],[2135,2151],[942,954],[1085,1099],[1109,1123],[513,515],[1531,1545],[1053,1067],[834,836],[930,932],[482,484],[2416,2418],[3171,3189],[2581,2583],[1887,1889],[2378,2380],[4487,4489],[4728,4739],[3285,3287],"[active, material_id, register, setValue]",[3354,3356],"[active, image_url, register, setValue]",[2594,2596],[696,698],"[image_url, setValue]",[1134,1141]]