[{"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\index.js":"1","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\App.js":"2","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Navbar.js":"3","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SidebarData.js":"4","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Home.js":"5","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\History.js":"6","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Paintings.js":"7","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TablePaintings.js":"8","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\utils\\utils.js":"9","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Button.js":"10","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\paintings.js":"11","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Search.js":"12","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableOrders.js":"13","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowPaintings.js":"14","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowOrders.js":"15","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormPaintings.js":"16","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardHeading.js":"17","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardBody.js":"18","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\themes.js":"19","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Upload.js":"20","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\firebase\\firebase.js":"21","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SelectForm.js":"22","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ConfirmModal.js":"23","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\orders.js":"24","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardUI.js":"25","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\materials.js":"26","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\DatePicker.js":"27","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ModalOrder.js":"28","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\Details.js":"29","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\HeaderOrderDetails.js":"30","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CustomerInfo.js":"31","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableDetails.js":"32","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SummaryOrder.js":"33","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowDetails.js":"34"},{"size":180,"mtime":1609949490772,"results":"35","hashOfConfig":"36"},{"size":876,"mtime":1611728274066,"results":"37","hashOfConfig":"36"},{"size":1420,"mtime":1609959049653,"results":"38","hashOfConfig":"36"},{"size":517,"mtime":1609977350174,"results":"39","hashOfConfig":"36"},{"size":1063,"mtime":1611382693237,"results":"40","hashOfConfig":"36"},{"size":2976,"mtime":1611678237902,"results":"41","hashOfConfig":"36"},{"size":1378,"mtime":1611383122599,"results":"42","hashOfConfig":"36"},{"size":812,"mtime":1611715644158,"results":"43","hashOfConfig":"36"},{"size":4763,"mtime":1611729395198,"results":"44","hashOfConfig":"36"},{"size":1945,"mtime":1611730433966,"results":"45","hashOfConfig":"36"},{"size":255,"mtime":1610173246366,"results":"46","hashOfConfig":"36"},{"size":601,"mtime":1611375142513,"results":"47","hashOfConfig":"36"},{"size":1145,"mtime":1611625890799,"results":"48","hashOfConfig":"36"},{"size":761,"mtime":1611377597907,"results":"49","hashOfConfig":"36"},{"size":1442,"mtime":1611728244218,"results":"50","hashOfConfig":"36"},{"size":519,"mtime":1611164245731,"results":"51","hashOfConfig":"36"},{"size":209,"mtime":1610821853241,"results":"52","hashOfConfig":"36"},{"size":9086,"mtime":1611383872998,"results":"53","hashOfConfig":"36"},{"size":249,"mtime":1611069908670,"results":"54","hashOfConfig":"36"},{"size":3029,"mtime":1611164910555,"results":"55","hashOfConfig":"36"},{"size":558,"mtime":1611076445866,"results":"56","hashOfConfig":"36"},{"size":1090,"mtime":1611730722554,"results":"57","hashOfConfig":"36"},{"size":848,"mtime":1611378236308,"results":"58","hashOfConfig":"36"},{"size":767,"mtime":1611728361546,"results":"59","hashOfConfig":"36"},{"size":1029,"mtime":1611531123365,"results":"60","hashOfConfig":"36"},{"size":255,"mtime":1611383359453,"results":"61","hashOfConfig":"36"},{"size":1369,"mtime":1611638836966,"results":"62","hashOfConfig":"36"},{"size":1790,"mtime":1611615218090,"results":"63","hashOfConfig":"36"},{"size":1977,"mtime":1611730563417,"results":"64","hashOfConfig":"36"},{"size":2737,"mtime":1611729265970,"results":"65","hashOfConfig":"36"},{"size":865,"mtime":1611726351946,"results":"66","hashOfConfig":"36"},{"size":860,"mtime":1611727541746,"results":"67","hashOfConfig":"36"},{"size":712,"mtime":1611729891814,"results":"68","hashOfConfig":"36"},{"size":1004,"mtime":1611727275198,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1q7c9yb",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\index.js",[],["146","147"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\App.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Navbar.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SidebarData.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Home.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\History.js",["148","149","150"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport TableOrders from \"../components/TableOrders\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport Select from \"react-select\";\r\nimport { formatDate, sortBy, sortOption } from \"../utils/utils\";\r\nimport { getAllOrders } from \"../api/orders\";\r\nimport moment from \"moment\";\r\n\r\nconst History = () => {\r\n  const [ordersArray, setOrdersArray] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [resultingOrders, setResultingOrders] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllOrders().then((response) => {\r\n      const { orders } = response;\r\n      setOrdersArray(orders);\r\n      setResultingOrders(orders);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      const result = copyArray.filter((item) =>\r\n        moment(formatDate(item.order_date), \"YYYY-MM-DD\").isBetween(\r\n          moment(formatDate(startDate), \"YYYY-MM-DD\"),\r\n          moment(formatDate(endDate), \"YYYY-MM-DD\"),\r\n          undefined,\r\n          \"[]\"\r\n        )\r\n      );\r\n      setResultingOrders(result);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    if (!ordersArray) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const ordersFilter = ordersArray.filter((order) => {\r\n      return (\r\n        order.customer_name.match(regexInput) ||\r\n        order.delivery_zone.name.match(regexInput) ||\r\n        order.status.match(regexInput) ||\r\n        order.id.toString().match(regexInput)\r\n      );\r\n    });\r\n    setResultingOrders(ordersFilter);\r\n  }, [searchedWord]);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      copyArray.sort(sortBy(selectedOption));\r\n      setResultingOrders(copyArray);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  if (!ordersArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-5\">\r\n        Historial de pedidos\r\n      </h1>\r\n      <div className=\"header-order-table\">\r\n        <DatePicker\r\n          startDate={startDate}\r\n          setStartDate={setStartDate}\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n        <Select\r\n          options={sortOption}\r\n          name=\"searchable\"\r\n          className=\"w-100 custom-control\"\r\n          placeholder=\"Ordenar por ...\"\r\n          isSearchable\r\n          isClearable\r\n          onChange={(value) => setSelectedOption(value ? value.value : null)}\r\n          noOptionsMessage={(inputValue) => \"No se encontró esa opción\"}\r\n        />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableOrders orders={resultingOrders} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Paintings.js",["151"],"import React, { useEffect, useState } from 'react';\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllPaintings } from '../api/paintings';\r\nimport TablePaintings from \"../components/TablePaintings\";\r\n\r\nconst Paintings = () => {\r\n  const [paintingsArray, setPaintingsArray] = useState(null);\r\n  const [filterWord, setFilterWord] = useState('');\r\n  const [filteredPaintings, setFilteredPaintings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPaintings().then((response) => {\r\n      const {paintings} = response;\r\n      setPaintingsArray(paintings);\r\n      setFilteredPaintings(paintings);\r\n    })\r\n  }, []);\r\n\r\n  console.log(paintingsArray);\r\n\r\n  useEffect(() => {\r\n    if(!paintingsArray) return null;\r\n    let regexInput = new RegExp(filterWord, \"gi\");\r\n    const paintingsFilter = paintingsArray.filter((item) =>{\r\n      return item.name.match(regexInput);\r\n    });\r\n    setFilteredPaintings(paintingsFilter);\r\n  }, [filterWord])\r\n\r\n  if(!paintingsArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Paintings</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"add\" />\r\n        <Search setFilterWord={setFilterWord} />\r\n      </div>\r\n      <TablePaintings paintingsArray={filteredPaintings} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TablePaintings.js",["152","153"],"import { map } from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport { cabecerasPaintings } from '../utils/utils'\r\nimport './Navbar.css';\r\nimport RowPaintings from './RowPaintings';\r\n\r\nconst TablePaintings = ({ paintingsArray }) => {\r\n  return (\r\n    <div className=\"table-paintings table-responsive\">\r\n      <table className=\"table\">\r\n        <thead className=\"table-light 0\">\r\n          <tr>\r\n            {map(cabecerasPaintings, (cabecera, index) => (\r\n              <th key={index}>{cabecera}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {map(paintingsArray, (painting) => (\r\n            <RowPaintings key={painting.id} painting={painting} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TablePaintings\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\utils\\utils.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Button.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\paintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Search.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableOrders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowPaintings.js",["154","155"],"import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nconst RowPaintings = ({ painting }) => {\r\n  const { id, image_url, name, description, measurements, price, stock, active } = painting;\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        <img src={image_url} alt={`Cuadro-${id}`} className=\"img-display\" />\r\n      </th>\r\n      <td>{name}</td>\r\n      <td className=\"description-cell col-5\">{description}</td>\r\n      <td>{stock}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" />\r\n          <Button type=\"delete\" />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowPaintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowOrders.js",["156"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormPaintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardHeading.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardBody.js",["157"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from '../api/materials';\r\nimport { filterObject, formatArray } from \"../utils/utils\";\r\nimport { submit } from \"./ConfirmModal\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\n\r\nconst CardBody = ({ btnText }) => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [dimensions, setDimensions] = useState({\r\n    ancho: 0,\r\n    alto: 0,\r\n  });\r\n  const [customErrors, setCustomErrors] = useState({\r\n    ancho: false,\r\n    alto: false,\r\n    material: false,\r\n    theme: false,\r\n  });\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materialId\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"themeId\" }, { required: true });\r\n    register({ name: \"active\" }, { required: true });\r\n    register({ name: \"image_url\" }, { required: true });\r\n    setValue(\"active\", true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n  }, []);\r\n\r\n  const onChangeDimensions = (e) => {\r\n    const { name, value } = e.target;\r\n    setDimensions({\r\n      ...dimensions,\r\n      [name]: value,\r\n    });\r\n    const { ancho, alto } = dimensions;\r\n    if (ancho !== \"\") {\r\n      setCustomErrors({ ...customErrors, ancho: false });\r\n    } else {\r\n      setCustomErrors({ ...customErrors, ancho: true });\r\n    }\r\n    if (alto !== \"\") {\r\n      setCustomErrors({ ...customErrors, alto: false });\r\n    } else {\r\n      setCustomErrors({ ...customErrors, alto: true });\r\n    }\r\n    if (ancho !== \"\" && alto !== \"\") {\r\n      setValue(\"measurements\", `${ancho}x${alto}`);\r\n    }\r\n  };\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materialId\") {\r\n      setValue(\"materialId\", filterObject(selectedOption));\r\n      setCustomErrors({ ...customErrors, material: false });\r\n    } else {\r\n      setValue(\"themeId\", filterObject(selectedOption));\r\n      setCustomErrors({ ...customErrors, theme: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"any\"\r\n                min=\"0\"\r\n                name=\"price\"\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.price && (\r\n                <div className=\"error\">Ingresa el precio del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el precio del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row m-b-55\">\r\n          <div className=\"name\">Dimensiones</div>\r\n          <div className=\"value\">\r\n            <div className=\"row row-space\">\r\n              <div className=\"col-2\">\r\n                <div className=\"input-group-desc\">\r\n                  <input\r\n                    className=\"input--style-5\"\r\n                    type=\"text\"\r\n                    onChange={onChangeDimensions}\r\n                    name=\"ancho\"\r\n                  />\r\n                  <label className=\"label--desc\">ancho</label>\r\n                  {customErrors.ancho && (\r\n                    <div className=\"error-custom\">\r\n                      Ingresa el ancho del cuadro\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <div className=\"input-group-desc\">\r\n                  <input\r\n                    className=\"input--style-5\"\r\n                    type=\"text\"\r\n                    onChange={onChangeDimensions}\r\n                    name=\"alto\"\r\n                  />\r\n                  <label className=\"label--desc\">altura</label>\r\n                  {customErrors.alto && (\r\n                    <div className=\"error-custom\">\r\n                      Ingresa la altura del cuadro\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materialId\"\r\n          label=\"Material\"\r\n          error={customErrors.material}\r\n          errorMessage='Selecciona el material del cuadro'\r\n        />\r\n        \r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"themeId\"\r\n          label=\"Tema\"\r\n          error={customErrors.theme}\r\n          errorMessage='Selecciona el tema del cuadro'\r\n        />\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload setValue={setValue} />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button\r\n            className=\"btn btn--radius-2\"\r\n            type=\"submit\"\r\n            id=\"btn-submit\"\r\n          >\r\n            {btnText}\r\n          </button>\r\n          <button\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={submit}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\themes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Upload.js",["158"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { generateString } from \"../utils/utils\";\r\n\r\nconst Upload = ({ setValue }) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [lastImage, setLastImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"No URL\");\r\n  const [image, setImage] = useState({ name: \"No Image\" });\r\n\r\n  useEffect(() => {\r\n    if (image.name !== \"No Image\") {\r\n      if (lastImage !== \"\") {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(lastImage)\r\n          .delete()\r\n          .then(() => console.log(\"Done!\"))\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n      let splitImage = image.name.split(\".\");\r\n      let newName = generateString(30) + \".\" + splitImage[1];\r\n      handleUpload(newName);\r\n    }\r\n  }, [image]);\r\n\r\n  const handleUpload = (newName) => {\r\n    console.log(newName);\r\n    const uploadTask = storage.ref(`/${newName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(newName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setValue('image_url', url);\r\n          });\r\n        setLastImage(newName);\r\n        setReady(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ready ? (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"img-upload\"\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              imageResolution: \"from-image\",\r\n            }}\r\n            id=\"btn-upload\"\r\n          >\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"img-add\" id=\"btn-add\">\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      )}\r\n      <ProgressBar\r\n        completed={progress}\r\n        width=\"50%\"\r\n        bgcolor=\"#21AB91\"\r\n        margin=\"20px auto 10px auto\"\r\n        labelAlignment=\"right\"\r\n      />\r\n      {url === '' && <div className=\"error-img\">Seleccione la imagen del cuadro</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\firebase\\firebase.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SelectForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ConfirmModal.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\orders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardUI.js",["159","160"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './card-style.css';\r\n\r\nconst CardUI = ({ imgSrc, title, option, url }) => {\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(`/${url}`);\r\n\r\n  return (\r\n    <div className=\"card text-center shadow\">\r\n      <div className=\"overflow\">\r\n        <img src={imgSrc} alt=\"Image 1\" className=\"card-img-top\"/>\r\n      </div>\r\n      <div className=\"card-body text-dark\">\r\n        <h4 className=\"card-title\">{title}</h4>\r\n        <p className=\"card-text text-secondary\">\r\n          Lorem Ipsum is simply dummy text of the printing and typesetting\r\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\r\n          since the 1500s, when an unknown printer took a galley of type and\r\n          scrambled it to make a type specimen book\r\n        </p>\r\n        <a href=\"\" onClick={handleClick} className=\"btn btn-outline-success\">Ir a {option}</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\materials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\DatePicker.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ModalOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\Details.js",["161","162","163"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\HeaderOrderDetails.js",["164","165","166","167"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CustomerInfo.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableDetails.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SummaryOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowDetails.js",["168"],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":40,"column":6,"nodeType":"175","endLine":40,"endColumn":26,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"174","line":54,"column":6,"nodeType":"175","endLine":54,"endColumn":20,"suggestions":"177"},{"ruleId":"173","severity":1,"message":"174","line":62,"column":6,"nodeType":"175","endLine":62,"endColumn":22,"suggestions":"178"},{"ruleId":"173","severity":1,"message":"179","line":29,"column":6,"nodeType":"175","endLine":29,"endColumn":18,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":26},{"ruleId":"181","severity":1,"message":"185","line":2,"column":28,"nodeType":"183","messageId":"184","endLine":2,"endColumn":36},{"ruleId":"181","severity":1,"message":"186","line":6,"column":45,"nodeType":"183","messageId":"184","endLine":6,"endColumn":57},{"ruleId":"181","severity":1,"message":"187","line":6,"column":59,"nodeType":"183","messageId":"184","endLine":6,"endColumn":64},{"ruleId":"181","severity":1,"message":"188","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":24},{"ruleId":"173","severity":1,"message":"189","line":36,"column":6,"nodeType":"175","endLine":36,"endColumn":8,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"191","line":27,"column":6,"nodeType":"175","endLine":27,"endColumn":13,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":12,"column":9,"nodeType":"195","endLine":12,"endColumn":67},{"ruleId":"196","severity":1,"message":"197","line":22,"column":9,"nodeType":"195","endLine":22,"endColumn":78},{"ruleId":"173","severity":1,"message":"198","line":20,"column":6,"nodeType":"175","endLine":20,"endColumn":8,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"198","line":24,"column":6,"nodeType":"175","endLine":24,"endColumn":8,"suggestions":"200"},{"ruleId":"181","severity":1,"message":"201","line":29,"column":11,"nodeType":"183","messageId":"184","endLine":29,"endColumn":17},{"ruleId":"202","severity":1,"message":"203","line":36,"column":11,"nodeType":"195","endLine":36,"endColumn":47},{"ruleId":"202","severity":1,"message":"203","line":47,"column":11,"nodeType":"195","endLine":47,"endColumn":47},{"ruleId":"202","severity":1,"message":"203","line":58,"column":11,"nodeType":"195","endLine":58,"endColumn":47},{"ruleId":"202","severity":1,"message":"203","line":68,"column":11,"nodeType":"195","endLine":68,"endColumn":47},{"ruleId":"202","severity":1,"message":"203","line":15,"column":11,"nodeType":"195","endLine":15,"endColumn":71},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ordersArray'. Either include it or remove the dependency array.","ArrayExpression",["206"],["207"],["208"],"React Hook useEffect has a missing dependency: 'paintingsArray'. Either include it or remove the dependency array.",["209"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'measurements' is assigned a value but never used.","'price' is assigned a value but never used.","'getOrderDetail' is defined but never used.","React Hook useEffect has missing dependencies: 'register' and 'setValue'. Either include them or remove the dependency array.",["210"],"React Hook useEffect has missing dependencies: 'handleUpload' and 'lastImage'. Either include them or remove the dependency array.",["211"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["212"],["213"],"'status' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},"Update the dependencies array to be: [startDate, endDate, ordersArray]",{"range":"229","text":"230"},"Update the dependencies array to be: [ordersArray, searchedWord]",{"range":"231","text":"232"},"Update the dependencies array to be: [ordersArray, selectedOption]",{"range":"233","text":"234"},"Update the dependencies array to be: [filterWord, paintingsArray]",{"range":"235","text":"236"},"Update the dependencies array to be: [register, setValue]",{"range":"237","text":"238"},"Update the dependencies array to be: [handleUpload, image, lastImage]",{"range":"239","text":"240"},"Update the dependencies array to be: [id]",{"range":"241","text":"242"},{"range":"243","text":"242"},[1364,1384],"[startDate, endDate, ordersArray]",[1833,1847],"[ordersArray, searchedWord]",[2038,2054],"[ordersArray, selectedOption]",[976,988],"[filterWord, paintingsArray]",[1215,1217],"[register, setValue]",[930,937],"[handleUpload, image, lastImage]",[834,836],"[id]",[930,932]]