[{"C:\\React\\dashboard-app\\src\\index.js":"1","C:\\React\\dashboard-app\\src\\App.js":"2","C:\\React\\dashboard-app\\src\\pages\\Auth.js":"3","C:\\React\\dashboard-app\\src\\pages\\Login.js":"4","C:\\React\\dashboard-app\\src\\firebase\\firebase.js":"5","C:\\React\\dashboard-app\\src\\pages\\Paintings.js":"6","C:\\React\\dashboard-app\\src\\pages\\Home.js":"7","C:\\React\\dashboard-app\\src\\pages\\History.js":"8","C:\\React\\dashboard-app\\src\\pages\\Measurements.js":"9","C:\\React\\dashboard-app\\src\\pages\\Materials.js":"10","C:\\React\\dashboard-app\\src\\pages\\DeliveryZones.js":"11","C:\\React\\dashboard-app\\src\\pages\\Themes.js":"12","C:\\React\\dashboard-app\\src\\pages\\Logout.js":"13","C:\\React\\dashboard-app\\src\\containers\\Details.js":"14","C:\\React\\dashboard-app\\src\\containers\\FormPaintings.js":"15","C:\\React\\dashboard-app\\src\\containers\\ThemeForm.js":"16","C:\\React\\dashboard-app\\src\\containers\\FormEdit.js":"17","C:\\React\\dashboard-app\\src\\containers\\MaterialForm.js":"18","C:\\React\\dashboard-app\\src\\containers\\ZoneForm.js":"19","C:\\React\\dashboard-app\\src\\containers\\MeasurementForm.js":"20","C:\\React\\dashboard-app\\src\\components\\Navbar.js":"21","C:\\React\\dashboard-app\\src\\components\\Search.js":"22","C:\\React\\dashboard-app\\src\\components\\Button.js":"23","C:\\React\\dashboard-app\\src\\components\\TablePaintings.js":"24","C:\\React\\dashboard-app\\src\\components\\CardUI.js":"25","C:\\React\\dashboard-app\\src\\components\\DatePicker.js":"26","C:\\React\\dashboard-app\\src\\components\\TableOrders.js":"27","C:\\React\\dashboard-app\\src\\components\\TableThemes.js":"28","C:\\React\\dashboard-app\\src\\components\\TableMaterials.js":"29","C:\\React\\dashboard-app\\src\\components\\TableMeasurements.js":"30","C:\\React\\dashboard-app\\src\\components\\TableZones.js":"31","C:\\React\\dashboard-app\\src\\api\\paintings.js":"32","C:\\React\\dashboard-app\\src\\api\\materials.js":"33","C:\\React\\dashboard-app\\src\\api\\measurements.js":"34","C:\\React\\dashboard-app\\src\\api\\orders.js":"35","C:\\React\\dashboard-app\\src\\api\\themes.js":"36","C:\\React\\dashboard-app\\src\\api\\delivery_zones.js":"37","C:\\React\\dashboard-app\\src\\components\\CustomerInfo.js":"38","C:\\React\\dashboard-app\\src\\components\\TableDetails.js":"39","C:\\React\\dashboard-app\\src\\components\\CardBody.js":"40","C:\\React\\dashboard-app\\src\\components\\HeaderOrderDetails.js":"41","C:\\React\\dashboard-app\\src\\components\\SummaryOrder.js":"42","C:\\React\\dashboard-app\\src\\components\\CardHeading.js":"43","C:\\React\\dashboard-app\\src\\components\\ThemeBody.js":"44","C:\\React\\dashboard-app\\src\\utils\\utils.js":"45","C:\\React\\dashboard-app\\src\\components\\EditBody.js":"46","C:\\React\\dashboard-app\\src\\components\\MaterialBody.js":"47","C:\\React\\dashboard-app\\src\\components\\SidebarData.js":"48","C:\\React\\dashboard-app\\src\\components\\BodyMeasurement.js":"49","C:\\React\\dashboard-app\\src\\components\\ZoneBody.js":"50","C:\\React\\dashboard-app\\src\\components\\ConfirmModal.js":"51","C:\\React\\dashboard-app\\src\\components\\RowPaintings.js":"52","C:\\React\\dashboard-app\\src\\components\\ModalOrder.js":"53","C:\\React\\dashboard-app\\src\\components\\RowMaterials.js":"54","C:\\React\\dashboard-app\\src\\components\\RowOrders.js":"55","C:\\React\\dashboard-app\\src\\components\\RowTheme.js":"56","C:\\React\\dashboard-app\\src\\components\\RowMeasurements.js":"57","C:\\React\\dashboard-app\\src\\components\\RowZone.js":"58","C:\\React\\dashboard-app\\src\\components\\SelectForm.js":"59","C:\\React\\dashboard-app\\src\\components\\RowDetails.js":"60","C:\\React\\dashboard-app\\src\\components\\Upload.js":"61"},{"size":180,"mtime":1621873988187,"results":"62","hashOfConfig":"63"},{"size":1047,"mtime":1621873988131,"results":"64","hashOfConfig":"63"},{"size":2310,"mtime":1621873988188,"results":"65","hashOfConfig":"63"},{"size":3188,"mtime":1621873988189,"results":"66","hashOfConfig":"63"},{"size":558,"mtime":1621873988187,"results":"67","hashOfConfig":"63"},{"size":1366,"mtime":1621873988191,"results":"68","hashOfConfig":"63"},{"size":2554,"mtime":1621873988189,"results":"69","hashOfConfig":"63"},{"size":3105,"mtime":1621873988189,"results":"70","hashOfConfig":"63"},{"size":2076,"mtime":1621873988191,"results":"71","hashOfConfig":"63"},{"size":1574,"mtime":1621873988190,"results":"72","hashOfConfig":"63"},{"size":1516,"mtime":1621873988188,"results":"73","hashOfConfig":"63"},{"size":1481,"mtime":1621873988191,"results":"74","hashOfConfig":"63"},{"size":569,"mtime":1621873988190,"results":"75","hashOfConfig":"63"},{"size":2019,"mtime":1621873988175,"results":"76","hashOfConfig":"63"},{"size":533,"mtime":1621873988180,"results":"77","hashOfConfig":"63"},{"size":496,"mtime":1621873988184,"results":"78","hashOfConfig":"63"},{"size":855,"mtime":1621873988177,"results":"79","hashOfConfig":"63"},{"size":525,"mtime":1621873988184,"results":"80","hashOfConfig":"63"},{"size":491,"mtime":1621873988185,"results":"81","hashOfConfig":"63"},{"size":533,"mtime":1621873988184,"results":"82","hashOfConfig":"63"},{"size":1450,"mtime":1621873988150,"results":"83","hashOfConfig":"63"},{"size":601,"mtime":1621873988157,"results":"84","hashOfConfig":"63"},{"size":2208,"mtime":1621873988141,"results":"85","hashOfConfig":"63"},{"size":797,"mtime":1621873988169,"results":"86","hashOfConfig":"63"},{"size":776,"mtime":1621873988145,"results":"87","hashOfConfig":"63"},{"size":1369,"mtime":1621873988145,"results":"88","hashOfConfig":"63"},{"size":1162,"mtime":1621873988169,"results":"89","hashOfConfig":"63"},{"size":779,"mtime":1621885209323,"results":"90","hashOfConfig":"63"},{"size":825,"mtime":1621873988165,"results":"91","hashOfConfig":"63"},{"size":908,"mtime":1621873988167,"results":"92","hashOfConfig":"63"},{"size":766,"mtime":1621873988170,"results":"93","hashOfConfig":"63"},{"size":836,"mtime":1621873988134,"results":"94","hashOfConfig":"63"},{"size":404,"mtime":1621873988132,"results":"95","hashOfConfig":"63"},{"size":414,"mtime":1621873988132,"results":"96","hashOfConfig":"63"},{"size":1105,"mtime":1621873988133,"results":"97","hashOfConfig":"63"},{"size":393,"mtime":1621873988134,"results":"98","hashOfConfig":"63"},{"size":416,"mtime":1621873988132,"results":"99","hashOfConfig":"63"},{"size":865,"mtime":1621873988145,"results":"100","hashOfConfig":"63"},{"size":860,"mtime":1621873988165,"results":"101","hashOfConfig":"63"},{"size":8742,"mtime":1621873988142,"results":"102","hashOfConfig":"63"},{"size":2870,"mtime":1621873988146,"results":"103","hashOfConfig":"63"},{"size":712,"mtime":1621873988164,"results":"104","hashOfConfig":"63"},{"size":209,"mtime":1621873988144,"results":"105","hashOfConfig":"63"},{"size":6575,"mtime":1621873988171,"results":"106","hashOfConfig":"63"},{"size":7209,"mtime":1621885325646,"results":"107","hashOfConfig":"63"},{"size":11730,"mtime":1621873988146,"results":"108","hashOfConfig":"63"},{"size":5717,"mtime":1621873988149,"results":"109","hashOfConfig":"63"},{"size":1316,"mtime":1621873988163,"results":"110","hashOfConfig":"63"},{"size":8309,"mtime":1621874762653,"results":"111","hashOfConfig":"63"},{"size":6278,"mtime":1621873988172,"results":"112","hashOfConfig":"63"},{"size":1044,"mtime":1621873988145,"results":"113","hashOfConfig":"63"},{"size":1827,"mtime":1621873988156,"results":"114","hashOfConfig":"63"},{"size":2680,"mtime":1621873988149,"results":"115","hashOfConfig":"63"},{"size":1765,"mtime":1621873988152,"results":"116","hashOfConfig":"63"},{"size":1393,"mtime":1621873988153,"results":"117","hashOfConfig":"63"},{"size":1751,"mtime":1621873988156,"results":"118","hashOfConfig":"63"},{"size":1938,"mtime":1621873988153,"results":"119","hashOfConfig":"63"},{"size":1971,"mtime":1621873988156,"results":"120","hashOfConfig":"63"},{"size":1136,"mtime":1621873988159,"results":"121","hashOfConfig":"63"},{"size":1363,"mtime":1621873988152,"results":"122","hashOfConfig":"63"},{"size":3292,"mtime":1621873988172,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"7mm5u",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"126"},"C:\\React\\dashboard-app\\src\\index.js",[],["267","268"],"C:\\React\\dashboard-app\\src\\App.js",[],"C:\\React\\dashboard-app\\src\\pages\\Auth.js",[],"C:\\React\\dashboard-app\\src\\pages\\Login.js",[],"C:\\React\\dashboard-app\\src\\firebase\\firebase.js",[],"C:\\React\\dashboard-app\\src\\pages\\Paintings.js",["269"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllPaintings } from \"../api/paintings\";\r\nimport TablePaintings from \"../components/TablePaintings\";\r\n\r\nconst Paintings = () => {\r\n  const [paintingsArray, setPaintingsArray] = useState(null);\r\n  const [filterWord, setFilterWord] = useState(\"\");\r\n  const [filteredPaintings, setFilteredPaintings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPaintings().then((response) => {\r\n      if (response) {\r\n        const paintings = response;\r\n        setPaintingsArray(paintings);\r\n        setFilteredPaintings(paintings);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!paintingsArray) return null;\r\n    let regexInput = new RegExp(filterWord, \"gi\");\r\n    const paintingsFilter = paintingsArray.filter((item) => {\r\n      return item.name.match(regexInput);\r\n    });\r\n    setFilteredPaintings(paintingsFilter);\r\n  }, [filterWord]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Paintings</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"add\" />\r\n        <Search setFilterWord={setFilterWord} />\r\n      </div>\r\n      {paintingsArray && <TablePaintings paintingsArray={filteredPaintings} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paintings;\r\n","C:\\React\\dashboard-app\\src\\pages\\Home.js",[],"C:\\React\\dashboard-app\\src\\pages\\History.js",["270","271","272"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport TableOrders from \"../components/TableOrders\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  formatDate,\r\n  sortBy,\r\n  sortOption,\r\n  formatDateSearch,\r\n} from \"../utils/utils\";\r\nimport { getAllOrders } from \"../api/orders\";\r\nimport moment from \"moment\";\r\n\r\nconst History = () => {\r\n  const [ordersArray, setOrdersArray] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [resultingOrders, setResultingOrders] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllOrders().then((response) => {\r\n      if (response) {\r\n        const orders = response;\r\n        setOrdersArray(orders);\r\n        setResultingOrders(orders);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      const result = copyArray.filter((item) =>\r\n        moment(formatDate(item.order_date), \"YYYY-MM-DD\").isBetween(\r\n          moment(formatDate(startDate), \"YYYY-MM-DD\"),\r\n          moment(formatDate(endDate), \"YYYY-MM-DD\"),\r\n          undefined,\r\n          \"[]\"\r\n        )\r\n      );\r\n      setResultingOrders(result);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      let regexInput = new RegExp(searchedWord, \"gi\");\r\n      const ordersFilter = ordersArray.filter((order) => {\r\n        return (\r\n          order.customer_name.match(regexInput) ||\r\n          order.delivery_zone.name.match(regexInput) ||\r\n          order.status.match(regexInput) ||\r\n          order.id.toString().match(regexInput) ||\r\n          formatDateSearch(order.order_date).match(regexInput)\r\n        );\r\n      });\r\n      setResultingOrders(ordersFilter);\r\n    }\r\n  }, [searchedWord]);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      copyArray.sort(sortBy(selectedOption));\r\n      setResultingOrders(copyArray);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-5\">\r\n        Historial de pedidos\r\n      </h1>\r\n      <div className=\"header-order-table\">\r\n        <DatePicker\r\n          startDate={startDate}\r\n          setStartDate={setStartDate}\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n        <Select\r\n          options={sortOption}\r\n          name=\"searchable\"\r\n          className=\"w-100 custom-control\"\r\n          placeholder=\"Ordenar por ...\"\r\n          isSearchable\r\n          isClearable\r\n          onChange={(value) => setSelectedOption(value ? value.value : null)}\r\n          noOptionsMessage={(inputValue) => \"No se encontró esa opción\"}\r\n        />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      {ordersArray && <TableOrders orders={resultingOrders} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\React\\dashboard-app\\src\\pages\\Measurements.js",["273"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { findMaterialById, sortBy } from \"../utils/utils\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport TableMeasurements from \"../components/TableMeasurements\";\r\n\r\nconst Measurements = () => {\r\n  const [measurements, setMeasurements] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [filteredMeasurements, setFilteredMeasurements] = useState([]);\r\n  const [materials, setMaterials] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/measurements/new\");\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      if (response) {\r\n        const array = response;\r\n        array.sort(sortBy(\"id\"));\r\n        setMeasurements(array);\r\n        setFilteredMeasurements(array);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(response);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!measurements || !materials) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const measurementsFilter = measurements.filter((item) => {\r\n      const material_name = findMaterialById(materials, item.material_id);\r\n      return material_name.match(regexInput);\r\n    });\r\n    setFilteredMeasurements(measurementsFilter);\r\n  }, [searchedWord]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Measurements</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      {measurements && materials && (\r\n        <TableMeasurements\r\n          measurementsArray={filteredMeasurements}\r\n          materialsArray={materials}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Measurements;\r\n","C:\\React\\dashboard-app\\src\\pages\\Materials.js",["274"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport TableMaterials from \"../components/TableMaterials\";\r\nimport { sortBy } from \"../utils/utils\";\r\n\r\nconst Materials = () => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [filteredMaterials, setFilteredMaterials] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/materials/new\");\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      if (response) {\r\n        const array = response;\r\n        array.sort(sortBy(\"id\"));\r\n        setMaterials(array);\r\n        setFilteredMaterials(array);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!materials) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const materialsFilter = materials.filter((item) =>\r\n      item.name.match(regexInput)\r\n    );\r\n    setFilteredMaterials(materialsFilter);\r\n  }, [searchedWord]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Materials</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      {materials && <TableMaterials materialsArray={filteredMaterials} />}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Materials;\r\n","C:\\React\\dashboard-app\\src\\pages\\DeliveryZones.js",["275"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getAllDeliveryZones } from \"../api/delivery_zones\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport TableZones from \"../components/TableZones\";\r\nimport { sortBy } from \"../utils/utils\";\r\n\r\nconst DeliveryZones = () => {\r\n  const [zones, setZones] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [filteredZones, setFilteredZones] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/delivery-zones/new\");\r\n\r\n  useEffect(() => {\r\n    getAllDeliveryZones().then((response) => {\r\n      if (response) {\r\n        const array = response;\r\n        array.sort(sortBy(\"id\"));\r\n        setZones(array);\r\n        setFilteredZones(array);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!zones) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const zonesFilter = zones.filter((item) => item.name.match(regexInput));\r\n    setFilteredZones(zonesFilter);\r\n  }, [searchedWord]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Delivery zones</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      {zones && <TableZones zonesArray={filteredZones} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryZones;\r\n","C:\\React\\dashboard-app\\src\\pages\\Themes.js",["276"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { sortBy } from \"../utils/utils\";\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport TableThemes from \"../components/TableThemes\";\r\n\r\nconst Themes = () => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [filteredThemes, setFilteredThemes] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(\"/themes/new\");\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      if (response) {\r\n        const array = response;\r\n        array.sort(sortBy(\"id\"));\r\n        setThemes(array);\r\n        setFilteredThemes(array);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!themes) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const themesFilter = themes.filter((item) => item.name.match(regexInput));\r\n    setFilteredThemes(themesFilter);\r\n  }, [searchedWord]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Themes</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"new\" onClick={handleClick} />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      {themes && <TableThemes themesArray={filteredThemes} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Themes;\r\n","C:\\React\\dashboard-app\\src\\pages\\Logout.js",["277"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../firebase/firebase\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    firebase.auth().signOut();\r\n    Swal.fire({\r\n      title: \"¡Adiós!\",\r\n      text: 'Has cerrado sesión exitosamente',\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default Logout;\r\n","C:\\React\\dashboard-app\\src\\containers\\Details.js",["278","279","280","281"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { getOrderById, getOrderDetail } from \"../api/orders\";\r\nimport Button from \"../components/Button\";\r\nimport CustomerInfo from \"../components/CustomerInfo\";\r\nimport HeaderOrderDetails from \"../components/HeaderOrderDetails\";\r\nimport SummaryOrder from \"../components/SummaryOrder\";\r\nimport TableDetails from \"../components/TableDetails\";\r\nimport { findMeasurements, formatFloat } from \"../utils/utils\";\r\nimport \"./details-container.css\";\r\n\r\nconst Details = (props) => {\r\n  const { id } = useParams();\r\n  const [details, setDetails] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n  \r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getOrderDetail(id).then((response) => setDetails(response));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getOrderById(id).then((response) => setOrder(response));\r\n  }, []);\r\n\r\n  \r\n\r\n  if (!order || !details) return null;\r\n\r\n  const { total_amount, delivery_zone } = order;\r\n  const { delivery_cost } = delivery_zone;\r\n  const total = formatFloat(total_amount);\r\n  const deliveryCost = formatFloat(delivery_cost);\r\n  const subtotal = formatFloat(total_amount - delivery_cost);\r\n\r\n  const onBack = () => {\r\n    history.push(\"/history\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container px-1 px-md-4 py-5 mx-auto\">\r\n      <div className=\"card card-container-delivery\">\r\n        <HeaderOrderDetails order={order} />\r\n        <hr className=\"hr-order-details\" />\r\n        <CustomerInfo order={order} />\r\n        <div>\r\n          <TableDetails details={details} />\r\n        </div>\r\n        <div className=\"footer-details\">\r\n          <SummaryOrder\r\n            subtotal={subtotal}\r\n            delivery_cost={deliveryCost}\r\n            total={total}\r\n          />\r\n          <Button type=\"back\" onClick={onBack} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\React\\dashboard-app\\src\\containers\\FormPaintings.js",[],"C:\\React\\dashboard-app\\src\\containers\\ThemeForm.js",[],"C:\\React\\dashboard-app\\src\\containers\\FormEdit.js",["282"],"import React,{ useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOnePaintingById } from '../api/paintings';\r\nimport CardHeading from '../components/CardHeading';\r\nimport EditBody from '../components/EditBody'\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [painting, setPainting] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getOnePaintingById(id).then((response) => {\r\n      setPainting(response);\r\n    });\r\n  }, []);\r\n\r\n  if(!painting) return null;\r\n\r\n  return (\r\n    <div className=\"page-wrapper p-t-45 p-b-50\">\r\n      <div className=\"wrapper wrapper--w790\">\r\n        <div className=\"card card-5 card-painting\">\r\n          <CardHeading title=\"Actualizar cuadro\" />\r\n          <EditBody painting={painting} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormEdit\r\n","C:\\React\\dashboard-app\\src\\containers\\MaterialForm.js",[],"C:\\React\\dashboard-app\\src\\containers\\ZoneForm.js",[],"C:\\React\\dashboard-app\\src\\containers\\MeasurementForm.js",[],"C:\\React\\dashboard-app\\src\\components\\Navbar.js",[],"C:\\React\\dashboard-app\\src\\components\\Search.js",[],"C:\\React\\dashboard-app\\src\\components\\Button.js",[],"C:\\React\\dashboard-app\\src\\components\\TablePaintings.js",[],"C:\\React\\dashboard-app\\src\\components\\CardUI.js",["283"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./card-style.css\";\r\n\r\nconst CardUI = ({ imgSrc, title, option, url, description }) => {\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(`/${url}`);\r\n\r\n  return (\r\n    <div className=\"card text-center shadow\">\r\n      <div className=\"overflow\">\r\n        <img src={imgSrc} alt=\"Foto\" className=\"card-img-top\" />\r\n      </div>\r\n      <div className=\"card-body text-dark\">\r\n        <h4 className=\"card-title\">{title}</h4>\r\n        <p className=\"card-text text-secondary\">{description}</p>\r\n        <a href=\"\" onClick={handleClick} className=\"btn btn-outline-success\">\r\n          Ir a {option}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","C:\\React\\dashboard-app\\src\\components\\DatePicker.js",[],"C:\\React\\dashboard-app\\src\\components\\TableOrders.js",[],"C:\\React\\dashboard-app\\src\\components\\TableThemes.js",[],"C:\\React\\dashboard-app\\src\\components\\TableMaterials.js",[],"C:\\React\\dashboard-app\\src\\components\\TableMeasurements.js",[],"C:\\React\\dashboard-app\\src\\components\\TableZones.js",[],"C:\\React\\dashboard-app\\src\\api\\paintings.js",[],"C:\\React\\dashboard-app\\src\\api\\materials.js",[],"C:\\React\\dashboard-app\\src\\api\\measurements.js",[],"C:\\React\\dashboard-app\\src\\api\\orders.js",[],"C:\\React\\dashboard-app\\src\\api\\themes.js",[],"C:\\React\\dashboard-app\\src\\api\\delivery_zones.js",[],"C:\\React\\dashboard-app\\src\\components\\CustomerInfo.js",[],"C:\\React\\dashboard-app\\src\\components\\TableDetails.js",[],"C:\\React\\dashboard-app\\src\\components\\CardBody.js",["284","285"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  API_HOST,\r\n  filterArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nconst CardBody = ({ btnText }) => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      const idToken = localStorage.getItem('idToken');\r\n      const authStr = 'Bearer '.concat(idToken);\r\n      axios.post(`${API_HOST}/paintings`, {...data, stock: 0}, {headers: {'authorization': authStr} }).then((response) => {\r\n        const { error, message } = response.data;\r\n        if (error) {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: `${message}`,\r\n            icon: \"error\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"¡Cuadro creado!.\",\r\n            text: \"Has creado un cuadro exitosamente\",\r\n            icon: \"success\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          setTimeout(() => {\r\n            history.push(\"/paintings\");\r\n          }, 1500);\r\n        }\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" }, { required: true });\r\n    register({ name: \"image_url\" }, { required: true });\r\n    setValue(\"active\", true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        let formatMeasurements = formatArrayMeasurements(\r\n          filterMeasurements(response, selectedMaterial[i]),\r\n          materials\r\n        );\r\n        resultArray = resultArray.concat(formatMeasurements);\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial]);\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: false })}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {btnText}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","C:\\React\\dashboard-app\\src\\components\\HeaderOrderDetails.js",["286","287","288","289"],"import React from \"react\";\r\nimport \"./details-style.css\";\r\nimport step1 from \"../assets/step1.png\";\r\nimport step2 from \"../assets/step2.png\";\r\nimport step3 from \"../assets/step3.png\";\r\nimport step4 from \"../assets/step4.png\";\r\nimport { progressOrderBar } from \"../utils/utils\";\r\nimport moment from \"moment\";\r\n\r\nconst HeaderOrderDetails = ({ order }) => {\r\n  const { status, id, delivery_date } = order;\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-between px-3 top delivery\">\r\n        <div className=\"d-flex header-bar delivery\">\r\n          <h5>\r\n            ORDER <span className=\"text-primary font-weight-bold\">{`# ${id}`}</span>\r\n          </h5>\r\n        </div>\r\n        <div className=\"d-flex flex-column text-sm-right delivery\">\r\n          <p className=\"mb-0\">\r\n            Fecha de entrega: <span>{moment(delivery_date).format(\"DD-MM-YYYY\")}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center delivery progress-column\">\r\n        <div className=\"col-12\">\r\n          <ul id=\"progressbar\" className=\"text-center\">\r\n            {progressOrderBar(status)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-between top container-labels delivery\">\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step1} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Pendiente\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step2} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Confirmada\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step3} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              En camino\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step4} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              Entregada\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderOrderDetails;\r\n","C:\\React\\dashboard-app\\src\\components\\SummaryOrder.js",[],"C:\\React\\dashboard-app\\src\\components\\CardHeading.js",[],"C:\\React\\dashboard-app\\src\\components\\ThemeBody.js",["290"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport Upload from \"./Upload\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"./../utils/utils\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ThemeBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id,\r\n    name,\r\n    active = true,\r\n    image_url,\r\n    textBtn = btnText;\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const theme = JSON.parse(localStorage.getItem(\"actualTheme\"));\r\n  console.log(theme);\r\n\r\n  if (theme) {\r\n    id = theme.id;\r\n    name = theme.name;\r\n    active = theme.active;\r\n    image_url = theme.image_url;\r\n    textBtn = \"Actualizar tema\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (theme) {\r\n      axios\r\n        .put(`${API_HOST}/themes/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Tema actualizado!\",\r\n              text: \"Has actualizado un tema exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/themes\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/themes`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Tema creado!\",\r\n              text: \"Has creado un tema exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/themes\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (url) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(url)\r\n        .delete()\r\n        .then(() => {\r\n          localStorage.removeItem(\"actualTheme\");\r\n          history.push(\"/themes\");\r\n        })\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      localStorage.removeItem(\"actualTheme\");\r\n      history.push(\"/themes\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    if (image_url) {\r\n      register({ name: \"image_url\" });\r\n      setValue(\"image_url\", image_url);\r\n    } else {\r\n      register({ name: \"image_url\" }, { required: true });\r\n    }\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else register({ name: \"active\" }, { required: true });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del tema</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrl}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeBody;\r\n","C:\\React\\dashboard-app\\src\\utils\\utils.js",["291","292","293"],"C:\\React\\dashboard-app\\src\\components\\EditBody.js",["294","295","296","297","298"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  API_HOST,\r\n  filterArray,\r\n  filterMaterialsArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onDeleteItems,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\n\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nconst EditBody = ({ painting }) => {\r\n  const {\r\n    materials: painting_materials,\r\n    name,\r\n    description,\r\n    stock,\r\n    active,\r\n    image_url,\r\n    theme,\r\n    id,\r\n    measurements: painting_measurements,\r\n  } = painting;\r\n\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [initialMaterials, setInitialMaterials] = useState([]);\r\n  const [initialMeasurements, setInitialMeasurements] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" });\r\n    register({ name: \"image_url\" }, { required: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const idsMaterials = filterMaterialsArray(painting_materials);\r\n    const idsMeasurements = filterMaterialsArray(painting_measurements);\r\n    setInitialMaterials(idsMaterials);\r\n    setInitialMeasurements(idsMeasurements);\r\n    const idTheme = theme.id;\r\n    setValue(\"materials\", idsMaterials);\r\n    setValue(\"measurements\", idsMeasurements);\r\n    setValue(\"theme_id\", idTheme);\r\n    setValue(\"image_url\", image_url);\r\n    setValue(\"active\", active);\r\n  }, []);\r\n\r\n  const onSubmitData = (data) => {\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      const deleteMaterials = onDeleteItems(initialMaterials, data.materials);\r\n      const deleteMeasurements = onDeleteItems(\r\n        initialMeasurements,\r\n        data.measurements\r\n      );\r\n      const bodyMaterials = {\r\n        materials: deleteMaterials,\r\n      };\r\n      const bodyMeasurements = {\r\n        measurements: deleteMeasurements,\r\n      };\r\n\r\n      const idToken = localStorage.getItem('idToken');\r\n      const authStr = 'Bearer '.concat(idToken);\r\n      axios\r\n        .put(`${API_HOST}/paintings/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((response) => {\r\n          const { error, message } = response.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            return axios.delete(`${API_HOST}/paintings/materials/${id}`, {\r\n              data: bodyMaterials,\r\n              headers: {'authorization': authStr}\r\n            });\r\n          }\r\n        })\r\n        .then((response) => {\r\n          const { error, message } = response.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            return axios.delete(`${API_HOST}/paintings/measurements/${id}`, {\r\n              data: bodyMeasurements,\r\n              headers: {'authorization': authStr}\r\n            });\r\n          }\r\n        })\r\n        .then((response) => {\r\n          const { error, message } = response.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Cuadro actualizado!\",\r\n              text: \"Has actualizado un cuadro exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/paintings\");\r\n            }, 1500);\r\n          }\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response));\r\n    });\r\n    setSelectedMaterial(filterMaterialsArray(painting_materials));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (materials) {\r\n      const idsMeasurements = formatArrayMeasurements(\r\n        painting_measurements,\r\n        materials\r\n      );\r\n      setSelectedMeasurement(filterArray(idsMeasurements));\r\n    }\r\n  }, [materials]);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        if (materials) {\r\n          let formatMeasurements = formatArrayMeasurements(\r\n            filterMeasurements(response, selectedMaterial[i]),\r\n            materials\r\n          );\r\n          resultArray = resultArray.concat(formatMeasurements);\r\n        }\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial, materials]);\r\n\r\n  if (!materials || !measurementsOptions) return null;\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: false })}\r\n                defaultValue={description}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n          value={formatArray(painting_materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n          value={formatArrayMeasurements(painting_measurements, materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n          value={{ label: theme.name, value: theme.id }}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            Editar cuadro\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBody;\r\n","C:\\React\\dashboard-app\\src\\components\\MaterialBody.js",["299"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"./../utils/utils\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst MaterialBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id,\r\n    name,\r\n    active = true,\r\n    textBtn = btnText;\r\n  const material = JSON.parse(localStorage.getItem(\"actualMaterial\"));\r\n\r\n  if (material) {\r\n    id = material.id;\r\n    name = material.name;\r\n    active = material.active;\r\n    textBtn = \"Actualizar material\";\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (material) {\r\n      axios\r\n        .put(`${API_HOST}/materials/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Material actualizado!\",\r\n              text: \"Has actualizado un material exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/materials\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/materials`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Material creado!\",\r\n              text: \"Has creado un material exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/materials\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    localStorage.removeItem(\"actualMaterial\");\r\n    history.push(\"/materials\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else {\r\n      register({ name: \"active\" }, { required: true });\r\n      setValue(\"active\", true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del material</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialBody;\r\n","C:\\React\\dashboard-app\\src\\components\\SidebarData.js",[],"C:\\React\\dashboard-app\\src\\components\\BodyMeasurement.js",["300"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport { API_HOST, findMaterial, formatArray } from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst BodyMeasurement = ({ btnText }) => {\r\n  const [materials, setMaterials] = useState(null);\r\n  const history = useHistory();\r\n  let id,\r\n    height,\r\n    width,\r\n    active = true,\r\n    price,\r\n    material_id,\r\n    material_name,\r\n    textBtn = btnText;\r\n\r\n  const measurement = JSON.parse(localStorage.getItem(\"actualMeasurement\"));\r\n\r\n  if (measurement) {\r\n    id = measurement.id;\r\n    height = measurement.height;\r\n    width = measurement.width;\r\n    active = measurement.active;\r\n    price = measurement.price;\r\n    material_id = measurement.material_id;\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (measurement) {\r\n      axios\r\n        .put(`${API_HOST}/measurements/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Medidas actualizada!\",\r\n              text: \"Has actualizado las medidas exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              localStorage.clear();\r\n              history.push(\"/measurements\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/measurements`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const { error, message } = res.data;\r\n          if (error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: \"¡Medidas creado!\",\r\n              text: \"Has creado las medidas exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(\"/measurements\");\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.push(\"/measurements\");\r\n    localStorage.clear();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    register({ name: \"height\" }, { required: true });\r\n    register({ name: \"width\" }, { required: true });\r\n    register({ name: \"price\" }, { required: true });\r\n    if (material_id) {\r\n      register({ name: \"material_id\" }, { required: true });\r\n      setValue(\"material_id\", material_id);\r\n    } else {\r\n      register({ name: \"material_id\" }, { required: true });\r\n    }\r\n\r\n    if (active) {\r\n      register({ name: \"active\" });\r\n      setValue(\"active\", active);\r\n    } else register({ name: \"active\" }, { required: true });\r\n  }, []);\r\n\r\n  if (!materials) return null;\r\n\r\n  console.log(materials);\r\n  if (material_id) {\r\n    material_name = findMaterial(materials, material_id);\r\n  }\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setValue(\"material_id\", selectedOption.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Ancho (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"width\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={width}\r\n              />\r\n              {errors.width && <div className=\"error\">Ingresa el ancho</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Alto (m): </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"height\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={height}\r\n              />\r\n              {errors.height && <div className=\"error\">Ingresa el alto</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"price\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={price}\r\n              />\r\n              {errors.price && <div className=\"error\">Ingresa el precio</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"material_id\"\r\n          label=\"Material\"\r\n          error={errors.material_id}\r\n          errorMessage=\"Selecciona un material\"\r\n          isMulti={false}\r\n          value={material_id && { label: material_name, value: material_id }}\r\n        />\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BodyMeasurement;\r\n","C:\\React\\dashboard-app\\src\\components\\ZoneBody.js",["301"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { API_HOST } from \"../utils/utils\";\r\n\r\nconst ZoneBody = ({ btnText }) => {\r\n  const history = useHistory();\r\n  let id, name, active = true, delivery_cost, textBtn = btnText;\r\n\r\n  const zone = JSON.parse(localStorage.getItem('actualZone'));\r\n\r\n  if(zone){\r\n    id = zone.id;\r\n    name = zone.name;\r\n    active = zone.active;\r\n    delivery_cost = zone.delivery_cost;\r\n  }\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    if (zone) {\r\n      axios\r\n        .put(`${API_HOST}/delivery-zones/${id}`, data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const {error, message} = res.data;\r\n          if(error) {\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          }else{\r\n            Swal.fire({\r\n              title: \"¡Zona de entrega actualizada!\",\r\n              text: \"Has actualizado una zona de entrega exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push('/delivery-zones')\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    } else {\r\n      axios\r\n        .post(`${API_HOST}/delivery-zones`,  data, {headers: {'authorization': authStr} })\r\n        .then((res) => {\r\n          const {error, message} = res.data;\r\n          if(error){\r\n            Swal.fire({\r\n              title: \"¡Oops!\",\r\n              text: `${message}`,\r\n              icon: \"error\",\r\n            });\r\n          }else{\r\n            Swal.fire({\r\n              title: \"¡Zona de entrega creado!\",\r\n              text: \"Has creado una zona de entrega exitosamente\",\r\n              icon: \"success\",\r\n              showConfirmButton: false,\r\n              timer: 1400,\r\n            });\r\n            setTimeout(() => {\r\n              history.push('/delivery-zones')\r\n            }, 1500);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            title: \"¡Oops!\",\r\n            text: \"Ocurrió un error\",\r\n            icon: \"error\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  const onCancel = () => {\r\n    history.push('/delivery-zones');\r\n    localStorage.clear();\r\n  }\r\n\r\n  useEffect(() => {\r\n    register({ name: \"name\" }, { required: true });\r\n    register({ name: \"delivery_cost\" }, { required: true });\r\n    if(active){\r\n      register({ name: \"active\" });\r\n      setValue('active', active);\r\n    }\r\n    else register({name: \"active\"}, {required: true});\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre de la zona</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Precio: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"delivery_cost\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={delivery_cost}\r\n              />\r\n              {errors.delivery_cost && (\r\n                <div className=\"error\">Ingresa el precio</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active === false ? false : true}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {textBtn}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ZoneBody\r\n","C:\\React\\dashboard-app\\src\\components\\ConfirmModal.js",[],"C:\\React\\dashboard-app\\src\\components\\RowPaintings.js",["302"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_HOST } from \"../utils/utils\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nconst RowPaintings = ({ painting }) => {\r\n  const { id, image_url, name, description, stock, active } = painting;\r\n\r\n  let history = useHistory();\r\n\r\n  const onEdit = () => {\r\n    history.push(`/paintings/edit/${id}`);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    const idToken = localStorage.getItem('idToken');\r\n    const authStr = 'Bearer '.concat(idToken);\r\n    axios.delete(`${API_HOST}/paintings/${id}`, {headers: {'authorization': authStr} })\r\n    .then((res) => {\r\n      const { error, message } = res.data;\r\n      if(error){\r\n        Swal.fire({\r\n          title: \"¡Oh no!.\",\r\n          text: `${message}`,\r\n          icon: \"error\",\r\n        });\r\n      }else{\r\n        Swal.fire({\r\n          title: \"¡Cuadro eliminado!.\",\r\n          text: \"Has eliminado correctamente el cuadro\",\r\n          icon: \"success\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        setTimeout(() => {\r\n         window.location.reload(false);\r\n        }, 1500);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        <img src={image_url} alt={`Cuadro-${id}`} className=\"img-display\" />\r\n      </th>\r\n      <td>{name}</td>\r\n      <td className=\"description-cell col-5\">{description ? description : 'Sin descripción'}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" onClick={onEdit} />\r\n          <Button type=\"delete\" onClick={onDelete} />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowPaintings;\r\n","C:\\React\\dashboard-app\\src\\components\\ModalOrder.js",[],"C:\\React\\dashboard-app\\src\\components\\RowMaterials.js",[],"C:\\React\\dashboard-app\\src\\components\\RowOrders.js",[],"C:\\React\\dashboard-app\\src\\components\\RowTheme.js",[],"C:\\React\\dashboard-app\\src\\components\\RowMeasurements.js",[],"C:\\React\\dashboard-app\\src\\components\\RowZone.js",[],"C:\\React\\dashboard-app\\src\\components\\SelectForm.js",[],"C:\\React\\dashboard-app\\src\\components\\RowDetails.js",["303","304"],"import React, {useEffect, useState} from \"react\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { findMeasurements } from \"../utils/utils\";\r\n\r\nconst RowDetails = ({ order }) => {\r\n  const [measurements, setMeasurements] = useState(null);\r\n  const {amount, measurements:textMeasurement, quantity, price, painting, material} = order;\r\n  const {name:painting_name, image_url} = painting;\r\n  const {name:material_name} = material;\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => setMeasurements(response))\r\n  }, [])\r\n\r\n  if(!measurements) return null;\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\" width=\"40%\">\r\n        <div className=\"container-product-item principal-info\">\r\n          <img className=\"product-img\" src={image_url} width=\"80px\" />\r\n          <div className=\"text-container-product\">\r\n            <p className=\"product-name\">{painting_name}</p>\r\n            <p className=\"description-product-item material-name\">{material_name}</p>\r\n            <p className=\"description-product-item dimensions\">{`${textMeasurement} m`}</p>\r\n          </div>\r\n        </div>\r\n      </th>\r\n      <td width=\"20%\" className=\"row-price\">{`$ ${price}`}</td>\r\n      <td width=\"20%\">{quantity}</td>\r\n      <td width=\"20%\">{`$ ${amount}`}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowDetails;\r\n","C:\\React\\dashboard-app\\src\\components\\Upload.js",["305","306"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { generateString } from \"../utils/utils\";\r\n\r\nconst Upload = ({ setValue, setUrlImg, error, image_url }) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [lastImage, setLastImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"No URL\");\r\n  const [image, setImage] = useState({ name: \"No Image\" });\r\n\r\n  useEffect(() => {\r\n    if(image_url){\r\n      setUrl(image_url);\r\n      setValue('image_url', image_url);\r\n      setReady(true);\r\n      setProgress(100);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (image.name !== \"No Image\") {\r\n      if (lastImage !== \"\") {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(lastImage)\r\n          .delete()\r\n          .then(() => console.log(\"Done!\"))\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n      let splitImage = image.name.split(\".\");\r\n      let newName = generateString(30) + \".\" + splitImage[1];\r\n      handleUpload(newName);\r\n    }\r\n  }, [image]);\r\n\r\n  const handleUpload = (newName) => {\r\n    console.log(newName);\r\n    const uploadTask = storage.ref(`/${newName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(newName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setValue('image_url', url);\r\n            setUrlImg(newName);\r\n          });\r\n        setLastImage(newName);\r\n        setReady(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ready ? (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"img-upload\"\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              imageResolution: \"from-image\",\r\n            }}\r\n            type=\"button\"\r\n            id=\"btn-upload\"\r\n          >\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"img-add\" id=\"btn-add\" type=\"button\">\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      )}\r\n      <ProgressBar\r\n        completed={progress}\r\n        width=\"50%\"\r\n        bgcolor=\"#21AB91\"\r\n        margin=\"20px auto 10px auto\"\r\n        labelAlignment=\"right\"\r\n      />\r\n      {error && <div className=\"error-img\">Seleccione una imagen</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n",{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":29,"column":6,"nodeType":"313","endLine":29,"endColumn":18,"suggestions":"314"},{"ruleId":"311","severity":1,"message":"315","line":47,"column":6,"nodeType":"313","endLine":47,"endColumn":26,"suggestions":"316"},{"ruleId":"311","severity":1,"message":"315","line":63,"column":6,"nodeType":"313","endLine":63,"endColumn":20,"suggestions":"317"},{"ruleId":"311","severity":1,"message":"315","line":71,"column":6,"nodeType":"313","endLine":71,"endColumn":22,"suggestions":"318"},{"ruleId":"311","severity":1,"message":"319","line":44,"column":6,"nodeType":"313","endLine":44,"endColumn":20,"suggestions":"320"},{"ruleId":"311","severity":1,"message":"321","line":35,"column":6,"nodeType":"313","endLine":35,"endColumn":20,"suggestions":"322"},{"ruleId":"311","severity":1,"message":"323","line":33,"column":6,"nodeType":"313","endLine":33,"endColumn":20,"suggestions":"324"},{"ruleId":"311","severity":1,"message":"325","line":33,"column":6,"nodeType":"313","endLine":33,"endColumn":20,"suggestions":"326"},{"ruleId":"311","severity":1,"message":"327","line":19,"column":6,"nodeType":"313","endLine":19,"endColumn":8,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":3,"column":10,"nodeType":"331","messageId":"332","endLine":3,"endColumn":28},{"ruleId":"329","severity":1,"message":"333","line":10,"column":10,"nodeType":"331","messageId":"332","endLine":10,"endColumn":26},{"ruleId":"311","severity":1,"message":"334","line":22,"column":6,"nodeType":"313","endLine":22,"endColumn":8,"suggestions":"335"},{"ruleId":"311","severity":1,"message":"334","line":26,"column":6,"nodeType":"313","endLine":26,"endColumn":8,"suggestions":"336"},{"ruleId":"311","severity":1,"message":"334","line":15,"column":6,"nodeType":"313","endLine":15,"endColumn":8,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":17,"column":9,"nodeType":"340","endLine":17,"endColumn":78},{"ruleId":"311","severity":1,"message":"341","line":83,"column":6,"nodeType":"313","endLine":83,"endColumn":8,"suggestions":"342"},{"ruleId":"311","severity":1,"message":"321","line":110,"column":6,"nodeType":"313","endLine":110,"endColumn":24,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":36,"column":11,"nodeType":"340","endLine":36,"endColumn":47},{"ruleId":"344","severity":1,"message":"345","line":47,"column":11,"nodeType":"340","endLine":47,"endColumn":47},{"ruleId":"344","severity":1,"message":"345","line":58,"column":11,"nodeType":"340","endLine":58,"endColumn":47},{"ruleId":"344","severity":1,"message":"345","line":68,"column":11,"nodeType":"340","endLine":68,"endColumn":47},{"ruleId":"311","severity":1,"message":"346","line":130,"column":6,"nodeType":"313","endLine":130,"endColumn":8,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":221,"column":55,"nodeType":"350","messageId":"351","endLine":221,"endColumn":57},{"ruleId":"348","severity":1,"message":"349","line":234,"column":41,"nodeType":"350","messageId":"351","endLine":234,"endColumn":43},{"ruleId":"348","severity":1,"message":"349","line":237,"column":58,"nodeType":"350","messageId":"351","endLine":237,"endColumn":60},{"ruleId":"329","severity":1,"message":"352","line":30,"column":5,"nodeType":"331","messageId":"332","endLine":30,"endColumn":10},{"ruleId":"311","severity":1,"message":"353","line":58,"column":6,"nodeType":"313","endLine":58,"endColumn":8,"suggestions":"354"},{"ruleId":"311","severity":1,"message":"355","line":71,"column":6,"nodeType":"313","endLine":71,"endColumn":8,"suggestions":"356"},{"ruleId":"311","severity":1,"message":"357","line":169,"column":6,"nodeType":"313","endLine":169,"endColumn":8,"suggestions":"358"},{"ruleId":"311","severity":1,"message":"359","line":179,"column":6,"nodeType":"313","endLine":179,"endColumn":17,"suggestions":"360"},{"ruleId":"311","severity":1,"message":"361","line":109,"column":6,"nodeType":"313","endLine":109,"endColumn":8,"suggestions":"362"},{"ruleId":"311","severity":1,"message":"363","line":132,"column":6,"nodeType":"313","endLine":132,"endColumn":8,"suggestions":"364"},{"ruleId":"311","severity":1,"message":"361","line":104,"column":6,"nodeType":"313","endLine":104,"endColumn":8,"suggestions":"365"},{"ruleId":"329","severity":1,"message":"352","line":10,"column":45,"nodeType":"331","messageId":"332","endLine":10,"endColumn":50},{"ruleId":"329","severity":1,"message":"333","line":3,"column":10,"nodeType":"331","messageId":"332","endLine":3,"endColumn":26},{"ruleId":"344","severity":1,"message":"345","line":21,"column":11,"nodeType":"340","endLine":21,"endColumn":71},{"ruleId":"311","severity":1,"message":"366","line":20,"column":6,"nodeType":"313","endLine":20,"endColumn":8,"suggestions":"367"},{"ruleId":"311","severity":1,"message":"368","line":36,"column":6,"nodeType":"313","endLine":36,"endColumn":13,"suggestions":"369"},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'paintingsArray'. Either include it or remove the dependency array.","ArrayExpression",["372"],"React Hook useEffect has a missing dependency: 'ordersArray'. Either include it or remove the dependency array.",["373"],["374"],["375"],"React Hook useEffect has missing dependencies: 'materials' and 'measurements'. Either include them or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'materials'. Either include it or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'zones'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has a missing dependency: 'themes'. Either include it or remove the dependency array.",["379"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["380"],"no-unused-vars","'getAllMeasurements' is defined but never used.","Identifier","unusedVar","'findMeasurements' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["381"],["382"],["383"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'register' and 'setValue'. Either include them or remove the dependency array.",["384"],["385"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'active', 'image_url', 'register', and 'setValue'. Either include them or remove the dependency array.",["386"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'stock' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["387"],"React Hook useEffect has missing dependencies: 'active', 'image_url', 'painting_materials', 'painting_measurements', 'setValue', and 'theme.id'. Either include them or remove the dependency array.",["388"],"React Hook useEffect has a missing dependency: 'painting_materials'. Either include it or remove the dependency array.",["389"],"React Hook useEffect has a missing dependency: 'painting_measurements'. Either include it or remove the dependency array.",["390"],"React Hook useEffect has missing dependencies: 'active', 'register', and 'setValue'. Either include them or remove the dependency array.",["391"],"React Hook useEffect has missing dependencies: 'active', 'material_id', 'register', and 'setValue'. Either include them or remove the dependency array.",["392"],["393"],"React Hook useEffect has missing dependencies: 'image_url' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["394"],"React Hook useEffect has missing dependencies: 'handleUpload' and 'lastImage'. Either include them or remove the dependency array.",["395"],"no-global-assign","no-unsafe-negation",{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"414","fix":"416"},{"desc":"414","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"432","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},"Update the dependencies array to be: [filterWord, paintingsArray]",{"range":"441","text":"442"},"Update the dependencies array to be: [startDate, endDate, ordersArray]",{"range":"443","text":"444"},"Update the dependencies array to be: [ordersArray, searchedWord]",{"range":"445","text":"446"},"Update the dependencies array to be: [ordersArray, selectedOption]",{"range":"447","text":"448"},"Update the dependencies array to be: [materials, measurements, searchedWord]",{"range":"449","text":"450"},"Update the dependencies array to be: [materials, searchedWord]",{"range":"451","text":"452"},"Update the dependencies array to be: [searchedWord, zones]",{"range":"453","text":"454"},"Update the dependencies array to be: [searchedWord, themes]",{"range":"455","text":"456"},"Update the dependencies array to be: [history]",{"range":"457","text":"458"},"Update the dependencies array to be: [id]",{"range":"459","text":"460"},{"range":"461","text":"460"},{"range":"462","text":"460"},"Update the dependencies array to be: [register, setValue]",{"range":"463","text":"464"},"Update the dependencies array to be: [materials, selectedMaterial]",{"range":"465","text":"466"},"Update the dependencies array to be: [active, image_url, register, setValue]",{"range":"467","text":"468"},"Update the dependencies array to be: [register]",{"range":"469","text":"470"},"Update the dependencies array to be: [active, image_url, painting_materials, painting_measurements, setValue, theme.id]",{"range":"471","text":"472"},"Update the dependencies array to be: [painting_materials]",{"range":"473","text":"474"},"Update the dependencies array to be: [materials, painting_measurements]",{"range":"475","text":"476"},"Update the dependencies array to be: [active, register, setValue]",{"range":"477","text":"478"},"Update the dependencies array to be: [active, material_id, register, setValue]",{"range":"479","text":"480"},{"range":"481","text":"478"},"Update the dependencies array to be: [image_url, setValue]",{"range":"482","text":"483"},"Update the dependencies array to be: [handleUpload, image, lastImage]",{"range":"484","text":"485"},[981,993],"[filterWord, paintingsArray]",[1430,1450],"[startDate, endDate, ordersArray]",[1981,1995],"[ordersArray, searchedWord]",[2186,2202],"[ordersArray, selectedOption]",[1561,1575],"[materials, measurements, searchedWord]",[1160,1174],"[materials, searchedWord]",[1117,1131],"[searchedWord, zones]",[1093,1107],"[searchedWord, themes]",[513,515],"[history]",[902,904],"[id]",[998,1000],[479,481],[2728,2730],"[register, setValue]",[3466,3484],"[materials, selectedMaterial]",[3664,3666],"[active, image_url, register, setValue]",[1887,1889],"[register]",[2378,2380],"[active, image_url, painting_materials, painting_measurements, setValue, theme.id]",[5245,5247],"[painting_materials]",[5486,5497],"[materials, painting_measurements]",[3131,3133],"[active, register, setValue]",[3913,3915],"[active, material_id, register, setValue]",[3074,3076],[696,698],"[image_url, setValue]",[1134,1141],"[handleUpload, image, lastImage]"]