[{"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\index.js":"1","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\App.js":"2","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Navbar.js":"3","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SidebarData.js":"4","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Home.js":"5","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\History.js":"6","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Paintings.js":"7","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TablePaintings.js":"8","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\utils\\utils.js":"9","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Button.js":"10","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\paintings.js":"11","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Search.js":"12","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableOrders.js":"13","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowPaintings.js":"14","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowOrders.js":"15","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormPaintings.js":"16","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardHeading.js":"17","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardBody.js":"18","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\themes.js":"19","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Upload.js":"20","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\firebase\\firebase.js":"21","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SelectForm.js":"22","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ConfirmModal.js":"23","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\orders.js":"24","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardUI.js":"25","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\materials.js":"26","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\DatePicker.js":"27","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ModalOrder.js":"28","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\Details.js":"29","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\HeaderOrderDetails.js":"30","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CustomerInfo.js":"31","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableDetails.js":"32","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SummaryOrder.js":"33","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowDetails.js":"34","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\measurements.js":"35","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormEdit.js":"36","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\EditBody.js":"37","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Materials.js":"38","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Themes.js":"39","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Measurements.js":"40","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\DeliveryZones.js":"41"},{"size":180,"mtime":1609949490772,"results":"42","hashOfConfig":"43"},{"size":1458,"mtime":1612064460704,"results":"44","hashOfConfig":"43"},{"size":1450,"mtime":1611741392381,"results":"45","hashOfConfig":"43"},{"size":1127,"mtime":1612063158558,"results":"46","hashOfConfig":"43"},{"size":2307,"mtime":1612062266615,"results":"47","hashOfConfig":"43"},{"size":3073,"mtime":1611901334002,"results":"48","hashOfConfig":"43"},{"size":1344,"mtime":1611895596715,"results":"49","hashOfConfig":"43"},{"size":822,"mtime":1611766324336,"results":"50","hashOfConfig":"43"},{"size":6187,"mtime":1611901269137,"results":"51","hashOfConfig":"43"},{"size":1958,"mtime":1612064333580,"results":"52","hashOfConfig":"43"},{"size":509,"mtime":1611892022963,"results":"53","hashOfConfig":"43"},{"size":601,"mtime":1611375142513,"results":"54","hashOfConfig":"43"},{"size":1162,"mtime":1611735780290,"results":"55","hashOfConfig":"43"},{"size":1435,"mtime":1612064347872,"results":"56","hashOfConfig":"43"},{"size":1442,"mtime":1611728244218,"results":"57","hashOfConfig":"43"},{"size":533,"mtime":1611803385753,"results":"58","hashOfConfig":"43"},{"size":209,"mtime":1610821853241,"results":"59","hashOfConfig":"43"},{"size":8909,"mtime":1611899285570,"results":"60","hashOfConfig":"43"},{"size":249,"mtime":1611069908670,"results":"61","hashOfConfig":"43"},{"size":3220,"mtime":1611892128628,"results":"62","hashOfConfig":"43"},{"size":558,"mtime":1611076445866,"results":"63","hashOfConfig":"43"},{"size":1136,"mtime":1611891464407,"results":"64","hashOfConfig":"43"},{"size":1044,"mtime":1611898859368,"results":"65","hashOfConfig":"43"},{"size":767,"mtime":1611728361546,"results":"66","hashOfConfig":"43"},{"size":776,"mtime":1611899316349,"results":"67","hashOfConfig":"43"},{"size":255,"mtime":1611383359453,"results":"68","hashOfConfig":"43"},{"size":1369,"mtime":1611638836966,"results":"69","hashOfConfig":"43"},{"size":2551,"mtime":1611881521644,"results":"70","hashOfConfig":"43"},{"size":1977,"mtime":1611730563417,"results":"71","hashOfConfig":"43"},{"size":2870,"mtime":1611879109079,"results":"72","hashOfConfig":"43"},{"size":865,"mtime":1611726351946,"results":"73","hashOfConfig":"43"},{"size":860,"mtime":1611727541746,"results":"74","hashOfConfig":"43"},{"size":712,"mtime":1611729891814,"results":"75","hashOfConfig":"43"},{"size":1051,"mtime":1611878099383,"results":"76","hashOfConfig":"43"},{"size":242,"mtime":1611768629713,"results":"77","hashOfConfig":"43"},{"size":858,"mtime":1611892670469,"results":"78","hashOfConfig":"43"},{"size":10405,"mtime":1611899357861,"results":"79","hashOfConfig":"43"},{"size":135,"mtime":1612063478541,"results":"80","hashOfConfig":"43"},{"size":129,"mtime":1612063504443,"results":"81","hashOfConfig":"43"},{"size":141,"mtime":1612063523878,"results":"82","hashOfConfig":"43"},{"size":143,"mtime":1612063536856,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1kd80xh",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\index.js",[],["181","182"],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\App.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Navbar.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SidebarData.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Home.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\History.js",["183","184","185"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../components/Search\";\r\nimport TableOrders from \"../components/TableOrders\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  formatDate,\r\n  sortBy,\r\n  sortOption,\r\n  formatDateSearch,\r\n} from \"../utils/utils\";\r\nimport { getAllOrders } from \"../api/orders\";\r\nimport moment from \"moment\";\r\n\r\nconst History = () => {\r\n  const [ordersArray, setOrdersArray] = useState(null);\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  const [resultingOrders, setResultingOrders] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllOrders().then((response) => {\r\n      const { orders } = response;\r\n      setOrdersArray(orders);\r\n      setResultingOrders(orders);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      const result = copyArray.filter((item) =>\r\n        moment(formatDate(item.order_date), \"YYYY-MM-DD\").isBetween(\r\n          moment(formatDate(startDate), \"YYYY-MM-DD\"),\r\n          moment(formatDate(endDate), \"YYYY-MM-DD\"),\r\n          undefined,\r\n          \"[]\"\r\n        )\r\n      );\r\n      setResultingOrders(result);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  useEffect(() => {\r\n    if (!ordersArray) return null;\r\n    let regexInput = new RegExp(searchedWord, \"gi\");\r\n    const ordersFilter = ordersArray.filter((order) => {\r\n      return (\r\n        order.customer_name.match(regexInput) ||\r\n        order.delivery_zone.name.match(regexInput) ||\r\n        order.status.match(regexInput) ||\r\n        order.id.toString().match(regexInput) ||\r\n        formatDateSearch(order.order_date).match(regexInput)\r\n      );\r\n    });\r\n    setResultingOrders(ordersFilter);\r\n  }, [searchedWord]);\r\n\r\n  useEffect(() => {\r\n    if (ordersArray) {\r\n      const copyArray = [...ordersArray];\r\n      copyArray.sort(sortBy(selectedOption));\r\n      setResultingOrders(copyArray);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  if (!ordersArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-5\">\r\n        Historial de pedidos\r\n      </h1>\r\n      <div className=\"header-order-table\">\r\n        <DatePicker\r\n          startDate={startDate}\r\n          setStartDate={setStartDate}\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n        />\r\n        <Select\r\n          options={sortOption}\r\n          name=\"searchable\"\r\n          className=\"w-100 custom-control\"\r\n          placeholder=\"Ordenar por ...\"\r\n          isSearchable\r\n          isClearable\r\n          onChange={(value) => setSelectedOption(value ? value.value : null)}\r\n          noOptionsMessage={(inputValue) => \"No se encontró esa opción\"}\r\n        />\r\n        <Search setFilterWord={setSearchedWord} />\r\n      </div>\r\n      <TableOrders orders={resultingOrders} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Paintings.js",["186"],"import React, { useEffect, useState } from 'react';\r\nimport Button from \"../components/Button\";\r\nimport Search from \"../components/Search\";\r\nimport { getAllPaintings } from '../api/paintings';\r\nimport TablePaintings from \"../components/TablePaintings\";\r\n\r\nconst Paintings = () => {\r\n  const [paintingsArray, setPaintingsArray] = useState(null);\r\n  const [filterWord, setFilterWord] = useState('');\r\n  const [filteredPaintings, setFilteredPaintings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPaintings().then((response) => {\r\n      const {paintings} = response;\r\n      setPaintingsArray(paintings);\r\n      setFilteredPaintings(paintings);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(!paintingsArray) return null;\r\n    let regexInput = new RegExp(filterWord, \"gi\");\r\n    const paintingsFilter = paintingsArray.filter((item) =>{\r\n      return item.name.match(regexInput);\r\n    });\r\n    setFilteredPaintings(paintingsFilter);\r\n  }, [filterWord])\r\n\r\n  if(!paintingsArray) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center text-uppercase mt-4 mb-3\">Paintings</h1>\r\n      <div className=\"header-container\">\r\n        <Button type=\"add\" />\r\n        <Search setFilterWord={setFilterWord} />\r\n      </div>\r\n      <TablePaintings paintingsArray={filteredPaintings} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TablePaintings.js",["187","188"],"import { map } from 'lodash'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport { cabecerasPaintings } from '../utils/utils'\r\nimport './Navbar.css';\r\nimport RowPaintings from './RowPaintings';\r\n\r\nconst TablePaintings = ({ paintingsArray }) => {\r\n  return (\r\n    <div className=\"table-paintings table-responsive\">\r\n      <table className=\"table\">\r\n        <thead className=\"table-light text-center\">\r\n          <tr>\r\n            {map(cabecerasPaintings, (cabecera, index) => (\r\n              <th key={index}>{cabecera}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {map(paintingsArray, (painting) => (\r\n            <RowPaintings key={painting.id} painting={painting} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TablePaintings\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\utils\\utils.js",["189","190"],"import { map } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nexport const cabecerasPaintings = [\r\n  \"Cuadro\",\r\n  \"Nombre\",\r\n  \"Descripcion\",\r\n  \"Existencias\",\r\n  \"Disponible\",\r\n  \"Opciones\",\r\n  \"\",\r\n];\r\n\r\nexport const cabecerasOrders = [\r\n  \"Id\",\r\n  \"Cliente\",\r\n  \"Fecha de orden\",\r\n  \"Fecha de entrega\",\r\n  \"Zona de entrega\",\r\n  \"Estado\",\r\n  \"Cantidad total\",\r\n  \"Opciones\",\r\n];\r\n\r\nexport const API_HOST = \"https://api-rest-canvas.herokuapp.com/api\";\r\n\r\nconst characters =\r\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\nexport function generateString(length) {\r\n  let result = \"\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const formatArray = (array) =>\r\n  map(array, (item) => ({ label: item.name, value: item.id }));\r\n\r\nexport const filterArray = (array) => map(array, (item) => item.value);\r\n\r\nexport const filterObject = (obj) => obj.value;\r\n\r\nexport const filterMaterialsArray = (array) => map(array, (item) => item.id)\r\n\r\nexport const dataDelete = {\r\n  title: \"Confirmar para eliminar\",\r\n  subtitle: \"¿Estás seguro de eliminar este cuadro?\",\r\n  btnYesText: \"¡Sí, eliminar!\",\r\n  btnNoText: \"No\",\r\n  btnYesId: \"btn-no\",\r\n  btnNoId: \"btn-yes\",\r\n};\r\n\r\nexport const findStatus = (status) => {\r\n  switch (status) {\r\n    case \"PENDIENTE\":\r\n    case \"EN PROCESO\":\r\n      return \"status pending\";\r\n    case \"CONFIRMADA\":\r\n      return \"status confirmed\";\r\n    case \"ENTREGADA\":\r\n      return \"status delivered\";\r\n    case \"EN CAMINO\":\r\n      return \"status shipped\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const statuses = [\r\n  { value: \"PENDIENTE\", label: \"PENDIENTE\" },\r\n  { value: \"CONFIRMADA\", label: \"CONFIRMADA\" },\r\n  { value: \"EN PROCESO\", label: \"EN PROCESO\" },\r\n  { value: \"EN CAMINO\", label: \"EN CAMINO\" },\r\n  { value: \"ENTREGADA\", label: \"ENTREGADA\" },\r\n];\r\n\r\nexport const sortOption = [\r\n  { value: \"id\", label: \"ID\" },\r\n  { value: \"cliente\", label: \"CLIENTE\" },\r\n  { value: \"estado\", label: \"ESTADO\" },\r\n  { value: \"fecha-orden\", label: \"FECHA DE ORDEN\" },\r\n  { value: \"fecha-entrega\", label: \"FECHA DE ENTREGA\" },\r\n  { value: \"zona-entrega\", label: \"ZONA DE ENTREGA\" },\r\n];\r\n\r\nexport const sortBy = (type) => {\r\n  switch (type) {\r\n    case \"id\":\r\n      return (a, b) => {\r\n        if (a.id < b.id) return -1;\r\n        if (a.id > b.id) return 1;\r\n        return 0;\r\n      };\r\n    case \"cliente\":\r\n      return (a, b) => {\r\n        if (a.customer_name < b.customer_name) return -1;\r\n        if (a.customer_name > b.customer_name) return 1;\r\n        return 0;\r\n      };\r\n    case \"status\":\r\n      return (a, b) => {\r\n        if (a.status < b.status) return -1;\r\n        if (a.status > b.status) return 1;\r\n        return 0;\r\n      };\r\n    case \"zona-entrega\":\r\n      return (a, b) => {\r\n        if (a.delivery_zone.name < b.delivery_zone.name) return -1;\r\n        if (a.delivery_zone.name > b.delivery_zone.name) return 1;\r\n        return 0;\r\n      };\r\n    case \"fecha-orden\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.order_date),\r\n          dateB = new Date(b.order_date);\r\n        return dateA - dateB;\r\n      };\r\n    case \"fecha-entrega\":\r\n      return (a, b) => {\r\n        const dateA = new Date(a.delivery_date),\r\n          dateB = new Date(b.delivery_date);\r\n        return dateA - dateB;\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n};\r\n\r\nexport const formatDateSearch = (date) => {\r\n  return moment(date).format(\"DD/MM/YYYY\");\r\n};\r\n\r\nexport const progressOrderBar = (status) => {\r\n  switch (status) {\r\n    case \"EN PROCESO\":\r\n    case \"PENDIENTE\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"CONFIRMADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"EN CAMINO\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n    case \"ENTREGADA\":\r\n      return (\r\n        <>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n          <li className=\"active step0\"></li>\r\n        </>\r\n      );\r\n    default:\r\n      return (\r\n        <>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n          <li className=\"step0\"></li>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport const formatFloat = (number) => parseFloat(number).toFixed(2);\r\n\r\nexport const filterMeasurements = (collection, idMaterial) => {\r\n  return collection.filter((item) => item.material_id == idMaterial);\r\n};\r\n\r\nexport const formatArrayMeasurements = (array, materials) =>{\r\n  return map(array, (item) => {\r\n    const materialName = findMaterial(materials, item.material_id);\r\n    return {\r\n      label: `${item.width} x ${item.height} cm -  ${materialName}`,\r\n      value: item.id,\r\n    };\r\n  });\r\n}\r\nconst findMaterial = (materials, idMaterial) =>\r\n  materials.filter((item) => item.value == idMaterial)[0].label;\r\n\r\nexport const onValidatePairs = (\r\n  materialsSelected,\r\n  measurementsSelected,\r\n  measurements\r\n) => {\r\n  const materialsSet = new Set();\r\n  let flag = true;\r\n\tmeasurements.forEach((item) => {\r\n\t\tif(measurementsSelected.includes(item.id) && materialsSelected.includes(item.material_id)){\r\n\t\t\tmaterialsSet.add(item.material_id);\r\n\t\t}\r\n\t\telse if(measurementsSelected.includes(item.id) && !materialsSelected.includes(item.material_id)){\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t});\r\n\tif(flag && materialsSet.size !== materialsSelected.length) return false;\r\n\treturn flag;\r\n};\r\n\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Button.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\paintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Search.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableOrders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowPaintings.js",["191","192","193","194"],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_HOST } from \"../utils/utils\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nconst RowPaintings = ({ painting }) => {\r\n  const { id, image_url, name, description, measurements, price, stock, active } = painting;\r\n\r\n  let history = useHistory();\r\n\r\n  const onEdit = () => {\r\n    history.push(`/paintings/edit/${id}`);\r\n  }\r\n\r\n  const onDelete = () => {\r\n    /*axios.delete(`${API_HOST}/paintings/${id}`)\r\n    .then((response) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n    })*/\r\n    Swal.fire({\r\n      title: \"¡Cuadro eliminado!.\",\r\n      text: \"Aún no elimina, falta la validación\",\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\">\r\n        <img src={image_url} alt={`Cuadro-${id}`} className=\"img-display\" />\r\n      </th>\r\n      <td>{name}</td>\r\n      <td className=\"description-cell col-5\">{description}</td>\r\n      <td>{stock}</td>\r\n      <td>{active ? \"Si\" : \"No\"}</td>\r\n      <td colSpan=\"2\" className=\"col-1\">\r\n        <div className=\"cell-container\">\r\n          <Button type=\"edit\" onClick={onEdit} />\r\n          <Button type=\"delete\" onClick={onDelete} />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowPaintings;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowOrders.js",["195"],"import moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getOrderDetail } from \"../api/orders\";\r\nimport { findStatus } from \"../utils/utils\";\r\nimport Button from \"./Button\";\r\n\r\nconst RowOrders = ({ order, setShowModal, setActualOrder }) => {\r\n  const {\r\n    id,\r\n    customer_name,\r\n    order_date,\r\n    delivery_date,\r\n    delivery_zone,\r\n    status,\r\n    total_amount,\r\n  } = order;\r\n\r\n  const { name } = delivery_zone;\r\n  const history = useHistory();\r\n\r\n  const orderDate = moment(order_date).format(\"DD/MM/YYYY hh:mm\");\r\n  const deliveryDate = moment(delivery_date).format(\"DD/MM/YYYY hh:mm\");\r\n\r\n  const onEdit = () => {\r\n    setActualOrder(order);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onView = () => {\r\n    history.push({\r\n      pathname: `/order/view/${id}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"align-middle text-center\">\r\n        <th scope=\"row\">{`Orden #${id}`}</th>\r\n        <td>{customer_name}</td>\r\n        <td>{orderDate}</td>\r\n        <td>{deliveryDate}</td>\r\n        <td>{name}</td>\r\n        <td className={findStatus(status)}>{status}</td>\r\n        <td>{`$ ${total_amount}`}</td>\r\n        <td>\r\n          <div className=\"cell-container\">\r\n            <Button type=\"view\" onClick={onView} />\r\n            <Button type=\"edit\" onClick={onEdit} />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RowOrders;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormPaintings.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardHeading.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardBody.js",["196","197"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  filterArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst CardBody = ({ btnText }) => {\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    /*axios.post(`${API_HOST}/paintings`, data)\r\n    .then((response) => {\r\n      console.log(response);\r\n    })*/\r\n\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      console.log(data);\r\n      Swal.fire({\r\n        title: \"¡Cuadro creado!.\",\r\n        text: \"Aún no crea en realidad :b\",\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n      console.log(\"TODO MAL\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" }, { required: true });\r\n    register({ name: \"image_url\" }, { required: true });\r\n    setValue(\"active\", true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        let formatMeasurements = formatArrayMeasurements(\r\n          filterMeasurements(response, selectedMaterial[i]),\r\n          materials\r\n        );\r\n        resultArray = resultArray.concat(formatMeasurements);\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial]);\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el stock del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            {btnText}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\themes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\Upload.js",["198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { generateString } from \"../utils/utils\";\r\n\r\nconst Upload = ({ setValue, setUrlImg, error, image_url }) => {\r\n  const [ready, setReady] = useState(false);\r\n  const [lastImage, setLastImage] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [url, setUrl] = useState(\"No URL\");\r\n  const [image, setImage] = useState({ name: \"No Image\" });\r\n\r\n  useEffect(() => {\r\n    if(image_url){\r\n      setUrl(image_url);\r\n      setReady(true);\r\n      setProgress(100);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (image.name !== \"No Image\") {\r\n      if (lastImage !== \"\") {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(lastImage)\r\n          .delete()\r\n          .then(() => console.log(\"Done!\"))\r\n          .catch(() => console.log(\"Error\"));\r\n      }\r\n      let splitImage = image.name.split(\".\");\r\n      let newName = generateString(30) + \".\" + splitImage[1];\r\n      handleUpload(newName);\r\n    }\r\n  }, [image]);\r\n\r\n  const handleUpload = (newName) => {\r\n    console.log(newName);\r\n    const uploadTask = storage.ref(`/${newName}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"/\")\r\n          .child(newName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setValue('image_url', url);\r\n            setUrlImg(newName);\r\n          });\r\n        setLastImage(newName);\r\n        setReady(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ready ? (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"img-upload\"\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              imageResolution: \"from-image\",\r\n            }}\r\n            id=\"btn-upload\"\r\n          >\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"img\"\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"img-add\" id=\"btn-add\">\r\n            <label htmlFor=\"img\" className=\"img-label\">\r\n              +\r\n            </label>\r\n          </button>\r\n        </>\r\n      )}\r\n      <ProgressBar\r\n        completed={progress}\r\n        width=\"50%\"\r\n        bgcolor=\"#21AB91\"\r\n        margin=\"20px auto 10px auto\"\r\n        labelAlignment=\"right\"\r\n      />\r\n      {error && <div className=\"error-img\">Seleccione la imagen del cuadro</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\firebase\\firebase.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SelectForm.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ConfirmModal.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\orders.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CardUI.js",["200"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./card-style.css\";\r\n\r\nconst CardUI = ({ imgSrc, title, option, url, description }) => {\r\n  const history = useHistory();\r\n  const handleClick = () => history.push(`/${url}`);\r\n\r\n  return (\r\n    <div className=\"card text-center shadow\">\r\n      <div className=\"overflow\">\r\n        <img src={imgSrc} alt=\"Foto\" className=\"card-img-top\" />\r\n      </div>\r\n      <div className=\"card-body text-dark\">\r\n        <h4 className=\"card-title\">{title}</h4>\r\n        <p className=\"card-text text-secondary\">{description}</p>\r\n        <a href=\"\" onClick={handleClick} className=\"btn btn-outline-success\">\r\n          Ir a {option}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardUI;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\materials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\DatePicker.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\ModalOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\Details.js",["201","202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getOrderById, getOrderDetail } from \"../api/orders\";\r\nimport Button from \"../components/Button\";\r\nimport CustomerInfo from \"../components/CustomerInfo\";\r\nimport HeaderOrderDetails from \"../components/HeaderOrderDetails\";\r\nimport SummaryOrder from \"../components/SummaryOrder\";\r\nimport TableDetails from \"../components/TableDetails\";\r\nimport { formatFloat } from \"../utils/utils\";\r\nimport \"./details-container.css\";\r\n\r\nconst Details = (props) => {\r\n  const { id } = useParams();\r\n  const [details, setDetails] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getOrderDetail(id).then((response) => setDetails(response.order_detail));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getOrderById(id).then((response) => setOrder(response));\r\n  }, []);\r\n\r\n  if (!order) return null;\r\n  if (!details) return null;\r\n\r\n  const { status, total_amount, delivery_zone } = order;\r\n  const { delivery_cost } = delivery_zone;\r\n  const total = formatFloat(total_amount);\r\n  const deliveryCost = formatFloat(delivery_cost);\r\n  const subtotal = formatFloat(total_amount - delivery_cost);\r\n\r\n  \r\n\r\n  const onBack = () => {\r\n    history.push(\"/history\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container px-1 px-md-4 py-5 mx-auto\">\r\n      <div className=\"card card-container-delivery\">\r\n        <HeaderOrderDetails order={order} />\r\n        <hr className=\"hr-order-details\" />\r\n        <CustomerInfo order={order} />\r\n        <div>\r\n          <TableDetails details={details} />\r\n        </div>\r\n        <div className=\"footer-details\">\r\n          <SummaryOrder\r\n            subtotal={subtotal}\r\n            delivery_cost={deliveryCost}\r\n            total={total}\r\n          />\r\n          <Button type=\"back\" onClick={onBack} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\HeaderOrderDetails.js",["204","205","206","207"],"import React from \"react\";\r\nimport \"./details-style.css\";\r\nimport step1 from \"../assets/step1.png\";\r\nimport step2 from \"../assets/step2.png\";\r\nimport step3 from \"../assets/step3.png\";\r\nimport step4 from \"../assets/step4.png\";\r\nimport { progressOrderBar } from \"../utils/utils\";\r\nimport moment from \"moment\";\r\n\r\nconst HeaderOrderDetails = ({ order }) => {\r\n  const { status, id, delivery_date } = order;\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-between px-3 top delivery\">\r\n        <div className=\"d-flex header-bar delivery\">\r\n          <h5>\r\n            ORDER <span className=\"text-primary font-weight-bold\">{`# ${id}`}</span>\r\n          </h5>\r\n        </div>\r\n        <div className=\"d-flex flex-column text-sm-right delivery\">\r\n          <p className=\"mb-0\">\r\n            Fecha de entrega: <span>{moment(delivery_date).format(\"DD-MM-YYYY\")}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center delivery progress-column\">\r\n        <div className=\"col-12\">\r\n          <ul id=\"progressbar\" className=\"text-center\">\r\n            {progressOrderBar(status)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-between top container-labels delivery\">\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step1} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Pendiente\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step2} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden\r\n              <br />\r\n              Confirmada\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step3} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              En camino\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row d-flex icon-content icon-container delivery\">\r\n          {\" \"}\r\n          <img className=\"icon\" src={step4} />\r\n          <div className=\"d-flex flex-column text-container delivery\">\r\n            <p className=\"font-weight-bold text-label\">\r\n              Orden <br />\r\n              Entregada\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderOrderDetails;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\CustomerInfo.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\TableDetails.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\SummaryOrder.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\RowDetails.js",["208"],"import React from \"react\";\r\n\r\nconst RowDetails = ({ order }) => {\r\n  console.log(\"ENTRE\")\r\n  const {amount, measurements, quantity, price, painting, material} = order;\r\n  const {name:painting_name, image_url} = painting;\r\n  const {name:material_name} = material;\r\n\r\n  console.log(order)\r\n\r\n  return (\r\n    <tr className=\"align-middle text-center\">\r\n      <th scope=\"row\" width=\"40%\">\r\n        <div className=\"container-product-item principal-info\">\r\n          <img className=\"product-img\" src={image_url} width=\"80px\" />\r\n          <div className=\"text-container-product\">\r\n            <p className=\"product-name\">{painting_name}</p>\r\n            <p className=\"description-product-item material-name\">{material_name}</p>\r\n            <p className=\"description-product-item dimensions\">{measurements}</p>\r\n          </div>\r\n        </div>\r\n      </th>\r\n      <td width=\"20%\" className=\"row-price\">{`$ ${price}`}</td>\r\n      <td width=\"20%\">{quantity}</td>\r\n      <td width=\"20%\">{`$ ${amount}`}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowDetails;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\api\\measurements.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\containers\\FormEdit.js",["209"],"import React,{ useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOnePaintingById } from '../api/paintings';\r\nimport CardHeading from '../components/CardHeading';\r\nimport EditBody from '../components/EditBody'\r\n\r\nconst FormEdit = () => {\r\n  const { id } = useParams();\r\n  const [painting, setPainting] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getOnePaintingById(id).then((response) => {\r\n      setPainting(response[0]);\r\n    });\r\n  }, []);\r\n\r\n  if(!painting) return null;\r\n\r\n  return (\r\n    <div className=\"page-wrapper p-t-45 p-b-50\">\r\n      <div className=\"wrapper wrapper--w790\">\r\n        <div className=\"card card-5 card-painting\">\r\n          <CardHeading title=\"Actualizar cuadro\" />\r\n          <EditBody painting={painting} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormEdit\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\components\\EditBody.js",["210","211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getAllThemes } from \"../api/themes\";\r\nimport { getAllMaterials } from \"../api/materials\";\r\nimport {\r\n  filterArray,\r\n  filterMaterialsArray,\r\n  filterMeasurements,\r\n  filterObject,\r\n  formatArray,\r\n  formatArrayMeasurements,\r\n  onValidatePairs,\r\n} from \"../utils/utils\";\r\n\r\nimport SelectForm from \"./SelectForm\";\r\nimport Upload from \"./Upload\";\r\nimport { getAllMeasurements } from \"../api/measurements\";\r\nimport { storage } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst EditBody = ({ painting }) => {\r\n  const {\r\n    materials: painting_materials,\r\n    name,\r\n    description,\r\n    stock,\r\n    active,\r\n    image_url,\r\n    theme,\r\n    measurements: painting_measurements,\r\n  } = painting;\r\n\r\n  const [themes, setThemes] = useState(null);\r\n  const [materials, setMaterials] = useState(null);\r\n  const [selectedMaterial, setSelectedMaterial] = useState([]);\r\n  const [selectedMeasurement, setSelectedMeasurement] = useState([]);\r\n  const [measurementsOptions, setMeasurementsOptions] = useState([]);\r\n  const [urlImg, setUrlImg] = useState(null);\r\n  const [measurements, setMeasurements] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, setValue } = useForm();\r\n\r\n  const onSubmitData = (data) => {\r\n    /*axios.put(`${API_HOST}/paintings/${id}`, data)\r\n    .then((response) => {\r\n      console.log(response);\r\n    })*/\r\n    const flag = onValidatePairs(\r\n      selectedMaterial,\r\n      selectedMeasurement,\r\n      measurements\r\n    );\r\n\r\n    if (flag) {\r\n      console.log(data);\r\n      Swal.fire({\r\n        title: \"¡Cuadro actualizado!.\",\r\n        text: \"Aún no actualiza en realidad :b\",\r\n        icon: \"success\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      setTimeout(() => {\r\n        history.push(\"/paintings\");\r\n      }, 1500);\r\n    } else {\r\n      Swal.fire({\r\n        title: \"¡Oops!\",\r\n        text:\r\n          \"Revisa que tus medidas coincidan con los materiales seleccionados\",\r\n        icon: \"warning\",\r\n      });\r\n      console.log(\"TODO MAL\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    register({ name: \"materials\" }, { required: true });\r\n    register({ name: \"measurements\" }, { required: true });\r\n    register({ name: \"theme_id\" }, { required: true });\r\n    register({ name: \"active\" });\r\n    register({ name: \"image_url\" }, { required: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const idsMaterials = filterMaterialsArray(painting_materials);\r\n    const idsMeasurements = filterMaterialsArray(painting_measurements);\r\n    const idTheme = theme.id;\r\n    setValue(\"materials\", idsMaterials);\r\n    setValue(\"measurements\", idsMeasurements);\r\n    setValue(\"theme_id\", idTheme);\r\n    setValue(\"image_url\", image_url);\r\n    setValue(\"active\", active);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllThemes().then((response) => {\r\n      setThemes(formatArray(response.themes));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAllMaterials().then((response) => {\r\n      setMaterials(formatArray(response.materials));\r\n    });\r\n    setSelectedMaterial(filterMaterialsArray(painting_materials));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (materials) {\r\n      const idsMeasurements = formatArrayMeasurements(\r\n        painting_measurements,\r\n        materials\r\n      );\r\n      setSelectedMeasurement(filterArray(idsMeasurements));\r\n    }\r\n  }, [materials]);\r\n\r\n  useEffect(() => {\r\n    getAllMeasurements().then((response) => {\r\n      setMeasurements(response);\r\n      let resultArray = [];\r\n      for (var i = 0; i < selectedMaterial.length; i++) {\r\n        if (materials) {\r\n          let formatMeasurements = formatArrayMeasurements(\r\n            filterMeasurements(response, selectedMaterial[i]),\r\n            materials\r\n          );\r\n          resultArray = resultArray.concat(formatMeasurements);\r\n        }\r\n      }\r\n      setMeasurementsOptions(resultArray);\r\n    });\r\n  }, [selectedMaterial, materials]);\r\n\r\n  if (!materials || !measurementsOptions) return null;\r\n\r\n  const handleChange = (selectedOption, type) => {\r\n    if (type === \"materials\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMaterial(arrayIds);\r\n      setValue(\"materials\", arrayIds);\r\n    } else if (type === \"measurements\") {\r\n      const arrayIds = filterArray(selectedOption);\r\n      setSelectedMeasurement(arrayIds);\r\n      setValue(\"measurements\", arrayIds);\r\n    } else {\r\n      setValue(\"theme_id\", filterObject(selectedOption));\r\n    }\r\n  };\r\n\r\n  const onCancel = () => {\r\n    if (urlImg) {\r\n      storage\r\n        .ref(\"/\")\r\n        .child(urlImg)\r\n        .delete()\r\n        .then(() => history.push(\"/paintings\"))\r\n        .catch(() => console.log(\"Error\"));\r\n    } else {\r\n      history.push(\"/paintings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-body card-body-painting\">\r\n      <form onSubmit={handleSubmit(onSubmitData)}>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Nombre: </div>\r\n\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                ref={register({\r\n                  required: true,\r\n                })}\r\n                defaultValue={name}\r\n              />\r\n              {errors.name && (\r\n                <div className=\"error\">Ingresa el nombre del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Descripción: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                ref={register({ required: true })}\r\n                defaultValue={description}\r\n              />\r\n              {errors.description && (\r\n                <div className=\"error\">Ingresa la descripción del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Existencias: </div>\r\n          <div className=\"value\">\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"input--style-5\"\r\n                type=\"number\"\r\n                step=\"1\"\r\n                min=\"0\"\r\n                name=\"stock\"\r\n                defaultValue={stock}\r\n                ref={register({ required: true, valueAsNumber: true })}\r\n              />\r\n              {errors.stock && (\r\n                <div className=\"error\">Ingresa el stock del cuadro</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"label label--block\">Disponible?</label>\r\n          <div className=\"input-group mt-4\">\r\n            <div className=\"form-check form-check-inline custom-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"option1\"\r\n                onChange={() => setValue(\"active\", true)}\r\n                defaultChecked={active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">\r\n                Sí\r\n              </label>\r\n            </div>\r\n            <div\r\n              className=\"form-check form-check-inline custom-check\"\r\n              id=\"no-check\"\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio2\"\r\n                value=\"option2\"\r\n                onChange={() => setValue(\"active\", false)}\r\n                defaultChecked={!active}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">\r\n                No\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SelectForm\r\n          options={materials}\r\n          placeholder=\"Selecciona el material\"\r\n          noOptionsMessage=\"No se encontró ningún material\"\r\n          onChange={handleChange}\r\n          name=\"materials\"\r\n          label=\"Material\"\r\n          error={errors.materials}\r\n          errorMessage=\"Selecciona el material del cuadro\"\r\n          isMulti={true}\r\n          value={formatArray(painting_materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={measurementsOptions}\r\n          placeholder=\"Selecciona las medidas\"\r\n          noOptionsMessage=\"No se encontró ninguna dimensión\"\r\n          onChange={handleChange}\r\n          name=\"measurements\"\r\n          label=\"Medidas\"\r\n          error={errors.measurements}\r\n          errorMessage=\"Selecciona las medidas del cuadro\"\r\n          isMulti={true}\r\n          value={formatArrayMeasurements(painting_measurements, materials)}\r\n        />\r\n\r\n        <SelectForm\r\n          options={themes}\r\n          placeholder=\"Selecciona los temas\"\r\n          noOptionsMessage=\"No se encontró ningún tema\"\r\n          onChange={handleChange}\r\n          name=\"theme_id\"\r\n          label=\"Tema\"\r\n          error={errors.theme_id}\r\n          errorMessage=\"Selecciona el tema del cuadro\"\r\n          isMulti={false}\r\n          value={{ label: theme.name, value: theme.id }}\r\n        />\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"name\">Foto</div>\r\n          <div className=\"value\">\r\n            <Upload\r\n              setValue={setValue}\r\n              setUrlImg={setUrlImg}\r\n              error={errors.image_url}\r\n              image_url={image_url}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-custom-container\" id=\"container-btn\">\r\n          <button className=\"btn btn--radius-2\" type=\"submit\" id=\"btn-submit\">\r\n            Editar cuadro\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn--radius-2 btn-cancel\"\r\n            id=\"btn-cancel\"\r\n            onClick={onCancel}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBody;\r\n","C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Materials.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Themes.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\Measurements.js",[],"C:\\Users\\Mi-PC\\Desktop\\dashboard-canvas\\src\\pages\\DeliveryZones.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":45,"column":6,"nodeType":"220","endLine":45,"endColumn":26,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"219","line":60,"column":6,"nodeType":"220","endLine":60,"endColumn":20,"suggestions":"222"},{"ruleId":"218","severity":1,"message":"219","line":68,"column":6,"nodeType":"220","endLine":68,"endColumn":22,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"224","line":27,"column":6,"nodeType":"220","endLine":27,"endColumn":18,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":2,"column":17,"nodeType":"228","messageId":"229","endLine":2,"endColumn":26},{"ruleId":"226","severity":1,"message":"230","line":2,"column":28,"nodeType":"228","messageId":"229","endLine":2,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":196,"column":55,"nodeType":"233","messageId":"234","endLine":196,"endColumn":57},{"ruleId":"231","severity":1,"message":"232","line":209,"column":41,"nodeType":"233","messageId":"234","endLine":209,"endColumn":43},{"ruleId":"226","severity":1,"message":"235","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"236","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":18},{"ruleId":"226","severity":1,"message":"237","line":10,"column":45,"nodeType":"228","messageId":"229","endLine":10,"endColumn":57},{"ruleId":"226","severity":1,"message":"238","line":10,"column":59,"nodeType":"228","messageId":"229","endLine":10,"endColumn":64},{"ruleId":"226","severity":1,"message":"239","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":24},{"ruleId":"218","severity":1,"message":"240","line":72,"column":6,"nodeType":"220","endLine":72,"endColumn":8,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"242","line":99,"column":6,"nodeType":"220","endLine":99,"endColumn":24,"suggestions":"243"},{"ruleId":"218","severity":1,"message":"244","line":19,"column":6,"nodeType":"220","endLine":19,"endColumn":8,"suggestions":"245"},{"ruleId":"218","severity":1,"message":"246","line":35,"column":6,"nodeType":"220","endLine":35,"endColumn":13,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":17,"column":9,"nodeType":"250","endLine":17,"endColumn":78},{"ruleId":"218","severity":1,"message":"251","line":20,"column":6,"nodeType":"220","endLine":20,"endColumn":8,"suggestions":"252"},{"ruleId":"218","severity":1,"message":"251","line":24,"column":6,"nodeType":"220","endLine":24,"endColumn":8,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"254","line":29,"column":11,"nodeType":"228","messageId":"229","endLine":29,"endColumn":17},{"ruleId":"255","severity":1,"message":"256","line":36,"column":11,"nodeType":"250","endLine":36,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":47,"column":11,"nodeType":"250","endLine":47,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":58,"column":11,"nodeType":"250","endLine":58,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":68,"column":11,"nodeType":"250","endLine":68,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":15,"column":11,"nodeType":"250","endLine":15,"endColumn":71},{"ruleId":"218","severity":1,"message":"251","line":15,"column":6,"nodeType":"220","endLine":15,"endColumn":8,"suggestions":"257"},{"ruleId":"218","severity":1,"message":"258","line":86,"column":6,"nodeType":"220","endLine":86,"endColumn":8,"suggestions":"259"},{"ruleId":"218","severity":1,"message":"260","line":97,"column":6,"nodeType":"220","endLine":97,"endColumn":8,"suggestions":"261"},{"ruleId":"218","severity":1,"message":"262","line":110,"column":6,"nodeType":"220","endLine":110,"endColumn":8,"suggestions":"263"},{"ruleId":"218","severity":1,"message":"264","line":120,"column":6,"nodeType":"220","endLine":120,"endColumn":17,"suggestions":"265"},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ordersArray'. Either include it or remove the dependency array.","ArrayExpression",["268"],["269"],["270"],"React Hook useEffect has a missing dependency: 'paintingsArray'. Either include it or remove the dependency array.",["271"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'API_HOST' is defined but never used.","'measurements' is assigned a value but never used.","'price' is assigned a value but never used.","'getOrderDetail' is defined but never used.","React Hook useEffect has missing dependencies: 'register' and 'setValue'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'materials'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'image_url'. Either include it or remove the dependency array. If 'setUrl' needs the current value of 'image_url', you can also switch to useReducer instead of useState and read 'image_url' in the reducer.",["274"],"React Hook useEffect has missing dependencies: 'handleUpload' and 'lastImage'. Either include them or remove the dependency array.",["275"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["276"],["277"],"'status' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["278"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'active', 'image_url', 'painting_materials', 'painting_measurements', 'setValue', and 'theme.id'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'painting_materials'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'painting_measurements'. Either include it or remove the dependency array.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"299","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [startDate, endDate, ordersArray]",{"range":"311","text":"312"},"Update the dependencies array to be: [ordersArray, searchedWord]",{"range":"313","text":"314"},"Update the dependencies array to be: [ordersArray, selectedOption]",{"range":"315","text":"316"},"Update the dependencies array to be: [filterWord, paintingsArray]",{"range":"317","text":"318"},"Update the dependencies array to be: [register, setValue]",{"range":"319","text":"320"},"Update the dependencies array to be: [materials, selectedMaterial]",{"range":"321","text":"322"},"Update the dependencies array to be: [image_url]",{"range":"323","text":"324"},"Update the dependencies array to be: [handleUpload, image, lastImage]",{"range":"325","text":"326"},"Update the dependencies array to be: [id]",{"range":"327","text":"328"},{"range":"329","text":"328"},{"range":"330","text":"328"},"Update the dependencies array to be: [register]",{"range":"331","text":"332"},"Update the dependencies array to be: [active, image_url, painting_materials, painting_measurements, setValue, theme.id]",{"range":"333","text":"334"},"Update the dependencies array to be: [painting_materials]",{"range":"335","text":"336"},"Update the dependencies array to be: [materials, painting_measurements]",{"range":"337","text":"338"},[1396,1416],"[startDate, endDate, ordersArray]",[1930,1944],"[ordersArray, searchedWord]",[2135,2151],"[ordersArray, selectedOption]",[942,954],"[filterWord, paintingsArray]",[2263,2265],"[register, setValue]",[3018,3036],"[materials, selectedMaterial]",[655,657],"[image_url]",[1093,1100],"[handleUpload, image, lastImage]",[834,836],"[id]",[930,932],[482,484],[2523,2525],"[register]",[2928,2930],"[active, image_url, painting_materials, painting_measurements, setValue, theme.id]",[3269,3271],"[painting_materials]",[3510,3521],"[materials, painting_measurements]"]